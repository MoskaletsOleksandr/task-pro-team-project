{"version":3,"file":"static/js/874.18e7e1cc.chunk.js","mappings":"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","sources":["components/BoardPage/Card/Card.styled.js","components/BoardPage/PopUp/PopUp.styled.js","components/BoardPage/PopUp/PopUp.jsx","components/BoardPage/Card/Card.jsx","components/BoardPage/Column/Column.styled.js","components/BoardPage/AddNewCardBtn/AddNewCardBtn.styled.js","components/common/Modal/Modal.styled.jsx","components/common/Modal/Modal.jsx","components/Modals/Modals.styled.jsx","components/Modals/ModalsCommon/TitleModal.jsx","components/Modals/ModalsCommon/LabelModal.jsx","components/Modals/ModalsCommon/InputModal.jsx","components/Modals/ModalsCommon/TextareaModal.jsx","components/Modals/ModalsCommon/ImgModal.jsx","components/Modals/ModalsCommon/WrapperComponentModal.jsx","components/Modals/ModalsCommon/ButtonModal.jsx","components/Modals/ModalsCommon/SvgModal.jsx","components/Modals/ModalsCommon/SvgPlusModal.jsx","components/Modals/ModalsCommon/ButtonPlusModal.jsx","components/Modals/ModalsCommon/Calendar/Calendar.jsx","components/Modals/ModalAddEditCard/radioBattons.js","components/Modals/ModalAddEditCard/ModalAddEditCard.jsx","components/BoardPage/AddNewCardBtn/AddNewCardBtn.js","components/BoardPage/ColumnModal/ColumnModal.styled.js","components/BoardPage/ColumnModal/ColumnModal.jsx","components/BoardPage/Column/Column.jsx","components/BoardPage/Board/Board.styled.js","components/BoardPage/Board/Board.jsx","components/ModalFilters/FiltersModal.styled.js","components/ModalFilters/FilterModal.js","components/MainDashboard/MainDashboard.js","pages/ScreenPage/ScreenPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\n\nconst CustomCard = styled.div`\n  max-height: 154px;\n  // margin-right: 8px;\n  position:relative;\n // width: 334px;\n  //height: 154px;\n  //margin-right: 0;\n  //position: relative;\n\n  margin-bottom: 9px;\n  border-radius: 8px;\n  background-color: var(--card-bg-color);\n  color: #fff;\n  padding: 14px 24px;\n  border-left: 4px solid ${props => props.borderColor};\n\n  @media screen and (min-width: 320px) and (max-width: 374px) {\n      max-width: 290px;\n  }\n  \n  @media screen and (min-width: 375px) and (max-width: 767 px) {\n      max-width: 334px;\n  }\n\n  @media screen and (min-width: 768px) {\n      max-width: 334px;\n  }\n`;\n\nconst TruncatedText = styled.div`\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  color: var(--card-secondary-text-color);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  margin-top: 8px;\n  line-height: 1.5;\n  height: 38px;\n  border-bottom: 1px solid var(--card-border-color);\n`;\n\nconst PriorityCircle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50px;\n`;\n\nconst CardContentWrapper = styled.div`\nmargin-bottom: 14px;\nfont-size: 14px;\nfont-family: 'Poppins';\ntext-transform: capitalize;\n  //margin-top: 8px;\n`;\n\nconst TitleTypography = styled.h4`\n  font-size: 14px;\n  font-family: 'Poppins';\n  color: var(--card-title-color);\n  text-transform: capitalize;\n`;\nconst PriorityTypography = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-secondary-text-color);\n`;\nconst PriorityInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-primary-text-color);\n`;\nconst DeadlineTypography = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-secondary-text-color);\n`;\nconst DeadlineInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-primary-text-color);\n`;\n\nconst PriorityWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\nconst DedlineWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst PriorityDateItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst PriorityDateContainer = styled.div`\n  display: flex;\n  gap: 23px;\n  align-items: flex-end;\n`;\nconst BottomInfo = styled.div`\n  display: flex;\n  padding-top: 14px;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst Icons = styled.div`\n  display: inline-flex;\n  gap: 8px;\n`;\n\nconst PopUpMenu = styled.div`\n  position: absolute;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  // gap: 8px;\n  width: 160px;\n  padding: 10px;\n  max-height:96px;\n  background-color: var(--progress-popup-bg-color);\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  top: 20%;\n  right: 25%;\n`;\n\nconst ScrollContent = styled.div`\noverflow-y: auto;\ndisplay: flex;\nflex-direction: column;\ngap: 4px;\n\n::-webkit-scrollbar {\n  width: 8px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-thumb {\n  // background-color: var(--column-add-btn-bg-color);\n  background-color: var(--vertical-scroll-bar-bg-color);\n  border-radius: 4px;\n  // height: 10px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-track {\n  // background-color: var(--screens-page-bg-color);\n  background-color: var(--vertical-scroll-slider-bg-color);\n  border-radius: 4px;\n  margin-left:8px;\n}\n\n`;\n\n\nconst WhiteIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--card-icon-color);\n  stroke-width: 2;\n  fill: none;\n  &:hover {\n    stroke: var(--progress-popup-text-color-hover);\n    cursor: pointer';\n  }\n`;\n\nconst BellIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--progress-popup-text-color-hover);\n  stroke-width: 2;\n  fill: none;\n`;\n\nconst PopUpItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--progress-popup-text-color);\n\n  &:hover {\n    color: var(--progress-popup-text-color-hover);\n    stroke: var(--progress-popup-text-color-hover);\n    cursor: pointer;\n  }\n  /* } */\n`;\n\nconst fillFromLeft = keyframes`\n  from {\n    width: 0;\n  }\n  to {\n    width: 100%;\n  }\n`;\n// Vit\nconst BackDropHiden = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--progress-backdrop);\n  overflow-y: auto;\n  z-index: 1;\n  width: 100%;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 8px;\n  background-color: var(--progress-backdrop);\n  animation: ${fillFromLeft} 1s ease-in-out forwards;\n  z-index: 1;\n`;\n\nexport {\n  PriorityCircle,\n  TruncatedText,\n  CustomCard,\n  CardContentWrapper,\n  TitleTypography,\n  PriorityTypography,\n  DeadlineTypography,\n  PriorityWrapper,\n  DedlineWrapper,\n  PriorityDateContainer,\n  PriorityDateItem,\n  WhiteIcon,\n  Icons,\n  BottomInfo,\n  PriorityInfo,\n  DeadlineInfo,\n  PopUpMenu,\n  PopUpItem,\n  Backdrop,\n  BellIcon,\n  BackDropHiden,\n  ScrollContent\n};\n","import styled from 'styled-components';\n\n\nexport const PopUpItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-right:10px;\n  color: var(--progress-popup-text-color);\n    &:hover {\n      color: var(--progress-popup-text-color-hover);\n      stroke: var(--progress-popup-text-color-hover);\n      cursor: pointer;\n\n  }\n\n\n`;\n\n","import React from 'react';\nimport { PopUpItemWrapper } from './PopUp.styled';\nimport { WhiteIcon } from '../Card/Card.styled';\n\nconst CustomPopUpItem = ({ text, iconHref, columnId, handleMoveTask }) => {\n  return (\n    <PopUpItemWrapper\n      onClick={() => {\n        handleMoveTask(columnId);\n      }}\n    >\n      <span>{text}</span>\n      <WhiteIcon className=\"icon-search\">\n        <use href={iconHref}></use>\n      </WhiteIcon>\n    </PopUpItemWrapper>\n  );\n};\n\nexport default CustomPopUpItem;\n","import React from 'react';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport {\n  PriorityCircle,\n  TruncatedText,\n  CustomCard,\n  CardContentWrapper,\n  TitleTypography,\n  PriorityTypography,\n  DeadlineTypography,\n  PriorityWrapper,\n  DedlineWrapper,\n  PriorityDateContainer,\n  PriorityDateItem,\n  WhiteIcon,\n  Icons,\n  BottomInfo,\n  DeadlineInfo,\n  PriorityInfo,\n  PopUpMenu,\n  BackDropHiden,\n  BellIcon,\n  ScrollContent\n} from '../Card/Card.styled';\nimport CustomPopUpItem from '../PopUp/PopUp';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateTasksColumnByIdThunk, deleteTaskByIdThunk } from 'redux/dashboards/thunks';\nimport dayjs from 'dayjs';\n\nconst TaskCard = ({ task, columnId, togglePopUpMenu, isPopupOpen, idTask }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(state => state.boards.currentBoard.columns);\n  const columnsLength = useSelector(state => state.boards.currentBoard.columns.length);\n\n  const selectedTask = task;\n  if (!selectedTask) {\n    return null;\n  }\n\n  let priorityBorderColor;\n  let priorityCircleColor;\n\n  if (selectedTask.priority === 'low') {\n    priorityCircleColor = 'var(--filter-low-color)';\n    priorityBorderColor = 'var(--filter-low-color)';\n  } else if (selectedTask.priority === 'medium') {\n    priorityCircleColor = 'var(--filter-medium-color)';\n    priorityBorderColor = 'var(--filter-medium-color)';\n  } else if (selectedTask.priority === 'high') {\n    priorityCircleColor = 'var(--filter-high-color)';\n    priorityBorderColor = 'var(--filter-high-color)';\n  } else {\n    priorityCircleColor = 'var(--filter-without-priority-color)';\n    priorityBorderColor = 'var(--filter-without-priority-color)';\n  }\n\n  // #c3c3c3\n\n  const today = new Date().toLocaleDateString('en-GB');\n  const formattedSelectedDeadline = dayjs(selectedTask.deadline).format(\n    'DD/MM/YYYY'\n  );\n  const isTodayDeadline = formattedSelectedDeadline === today;\n\n  console.log('today:', today);\n  console.log('formattedSelectedDeadline:', formattedSelectedDeadline);\n  console.log('isTodayDeadline:', isTodayDeadline);\n\n\n  const listForPopup = columns.filter(column => column._id !== columnId);\n  console.log('listForPopup: ', listForPopup);\n  console.log(columnsLength);\n  const handleMoveTask = columnId => {\n    console.log('handleRemoveTask to', columnId);\n    dispatch(\n      updateTasksColumnByIdThunk({\n        idTask: task._id,\n        body: { newColumnId: columnId },\n      })\n    );\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteTaskByIdThunk(idTask))\n      .unwrap()\n      .then((data) => {\n        console.log('Task deleted successfully:', data);\n      })\n      .catch((error) => {\n        console.error('Error deleting task:', error);\n      });\n  };\n\n  return (\n    <CustomCard borderColor={priorityBorderColor}>\n      <CardContentWrapper>\n        <TitleTypography>{selectedTask.title}</TitleTypography>\n        <TruncatedText>\n          <LinesEllipsis\n            text={selectedTask.text}\n            maxLine=\"2\"\n            ellipsis=\"...\"\n            trimRight\n            basedOn=\"words\"\n          />\n        </TruncatedText>\n        <BottomInfo>\n          <PriorityDateContainer>\n            <PriorityDateItem>\n              <PriorityTypography>Priority:</PriorityTypography>\n              <PriorityWrapper>\n                <PriorityCircle\n                  style={{ backgroundColor: priorityCircleColor }}\n                />\n                <PriorityInfo>{selectedTask.priority}</PriorityInfo>\n              </PriorityWrapper>\n            </PriorityDateItem>\n            <DedlineWrapper>\n              <DeadlineTypography>Deadline:</DeadlineTypography>\n              <DeadlineInfo>{formattedSelectedDeadline}</DeadlineInfo>\n            </DedlineWrapper>\n          </PriorityDateContainer>\n          <Icons>\n            {isTodayDeadline && (\n              <BellIcon className=\"icon-search\">\n                <use href={sprite + '#icon-bell'} style={{ color: 'yellow' }} />\n              </BellIcon>\n            )}\n            {columnsLength > 1 && (\n              <WhiteIcon\n                className=\"icon-search\"\n                onClick={() => {\n                  togglePopUpMenu(task._id);\n                }}\n              >\n                <use href={sprite + '#icon-arrow-circle-broken-right'}></use>\n              </WhiteIcon>\n            )}\n            <WhiteIcon className=\"icon-search\">\n              <use href={sprite + '#icon-pencil-01'}></use>\n            </WhiteIcon>\n            <WhiteIcon className=\"icon-search\" onClick={handleDeleteCard}>\n              <use href={sprite + '#icon-trash'}></use>\n            </WhiteIcon>\n          </Icons>\n        </BottomInfo>\n      </CardContentWrapper>\n\n      {isPopupOpen && (\n        // Vit\n        <>\n          <BackDropHiden\n            onClick={() => togglePopUpMenu(task._id)}\n          ></BackDropHiden>\n          {/* <Backdrop\n            backgroundColor={priorityBorderColor}\n            onClick={() => togglePopUpMenu(task._id)}\n          /> */}\n        </>\n      )}\n      {isPopupOpen && (\n        <PopUpMenu>\n          <ScrollContent>\n            {listForPopup.map(({ title, _id }) => (\n              <CustomPopUpItem\n                key={_id}\n                text={title}\n                columnId={_id}\n                handleMoveTask={handleMoveTask}\n                iconHref={sprite + '#icon-arrow-circle-broken-right'}\n              />\n            ))}\n          </ScrollContent>\n          {/* <CustomPopUpItem\n            text=\"In Progress\"\n            iconHref={sprite + '#icon-arrow-circle-broken-right'}\n          />\n          <CustomPopUpItem\n            text=\"Done\"\n            iconHref={sprite + '#icon-arrow-circle-broken-right'}\n          /> */}\n        </PopUpMenu>\n      )}\n    </CustomCard>\n  );\n};\n\nexport default TaskCard;\n","import styled from '@emotion/styled';\n\nconst WhiteIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--card-icon-color);\n  stroke-width: 2;\n  fill: none;\n  &:hover{\n    stroke:var(--progress-popup-text-color-hover);\n    cursor: pointer;\n  }\n`;\nconst Icons = styled.div`\n  display: inline-flex;\n  gap: 8px;\n  margin-right: 27px;\n`;\n\n\nconst Title = styled.h3`\n  margin-left: 20px;\n  color: var(--card-title-color);\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-transform: capitalize;\n`;\n\nconst TitleIcon = styled.div`\n  display: inline-flex;\n  background-color: var(--card-bg-color);\n  border-radius: 8px;\n  width: 338px;\n  padding-top: 18px;\n  padding-bottom: 17px;\n  margin-bottom: 14px;\n  align-items: center;\n  justify-content: space-between;\n  @media screen and (min-width: 320px) and (max-width: 374px) {\n    max-width: 290px;\n}\n\n@media screen and (min-width: 375px) and (max-width: 767 px) {\n    max-width: 334px;\n}\n\n@media screen and (min-width: 768px) {\n    max-width: 334px;\n}\n`;\n\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\n\nconst ScrollContainer = styled.div`\n  margin-bottom:14px;\n  overflow-y: hidden;\n  @media screen and (min-width: 375px) {\n    height:100%;\n  }\n`;\n\n\nconst ScrollContent = styled.div`\noverflow-y: auto;\npadding-right: 8px;\nbox-sizing: border-box;\nheight:66vh;\n\n\n::-webkit-scrollbar {\n  width: 8px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: var(--vertical-scroll-bar-bg-color);\n  border-radius: 4px;\n  height: 10px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-track {\n  background-color: var(--vertical-scroll-slider-bg-color);\n  border-radius: 4px;\n  height: 130px;\n  margin-left:8px;\n}\n\n`;\n\nexport {\n  WhiteIcon,\n  ScrollContainer,\n  ScrollContent,\n  Title,\n  TitleIcon,\n  ColumnContainer,\n  Icons,\n};\n","import styled from '@emotion/styled';\n\nexport const BtnAddNewCard = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 334px;\n  height: 56px;\n  // margin-top: 9px;\n  // margin-left: auto;\n\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--column-add-btn-text-color);\n\n  border: none;\n  border-radius: 8px;\n  background-color: var(--column-add-btn-bg-color);\n\n  transition-property: background-color, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: var(--column-add-btn-bg-color-hover);\n    transform: background-color;\n  }\n\n  @media screen and (min-width: 320px) and (max-width: 374px) {\n    max-width: 290px;\n}\n\n@media screen and (min-width: 375px) and (max-width: 767 px) {\n    max-width: 334px;\n}\n\n@media screen and (min-width: 768px) {\n    max-width: 335px;\n}\n`;\n\nexport const WrapSvg = styled.div`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  content: '';\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  background-color: var(--column-add-btn-plus-bg-color);\n`;\n\nexport const SvgIconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--column-add-btn-plus-color);\n  background-color: var(--column-add-btn-plus-bg-color);\n`;\n","import styled from '@emotion/styled';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #15151530;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n`;\n\nexport const ModalContent = styled.div`\nposition: ${props => props.position || 'absolute'};\n  background-color: var(--modal-bg-color);\n  padding: 24px;\n  border-radius: 8px;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: ${props => (props.custom ? '400px' : '350px')};\n  }\n\n  @media screen and (max-height: 500px) and (orientation: landscape) {\n    position: sticky;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%, 0%);\n  }\n\n  /* box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); */\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalBackdrop, ModalContent } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code !== 'Escape') {\n        return;\n      }\n      onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <ModalBackdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </ModalBackdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ModalTitle = styled.p`\n  font-size: ${props => props.fontSize || '18px'};\n  font-weight: ${props => props.fontWeight || '500'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  margin-bottom: ${props => props.marginBottom || '24px'};\n  color: ${props => props.color || 'var(--modal-title-color)'};\n`;\n\nexport const ModalLabel = styled.label`\n  display: ${props => props.display || 'flex'};\n  flex-direction: ${props => props.flexDirection || 'column'};\n  align-items: ${props => props.alignItems || 'center'};\n  margin-bottom: ${props => props.marginBottom || '24px'};\n  text-align: ${props => props.textAlign || 'center'};\n`;\n\nexport const ModalInput = styled.input`\n  display: ${props => props.display || 'flex'};\n  width: ${props => props.width || '100%'};\n  max-width: ${props => props.maxWidth || '302px'};\n  height: ${props => props.height || '46px'};\n  border: ${props =>\n    props.border || '1px solid var(--modal-input-border-color)'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  padding-top: ${props => props.padding || '14px'};\n  padding-right: ${props => props.padding || '18px'};\n  padding-bottom: ${props => props.padding || '14px'};\n  padding-left: ${props => props.padding || '18px'};\n  font-size: ${props => props.fontSize || '14px'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  background-color: ${props =>\n    props.backgroundColor || 'var(--modal-input-bg-color)'};\n  color: ${props => props.color || 'var(--modal-input-text-color)'};\n  outline: transparent;\n  opacity: 0.4;\n  transition: opacity var(--timing-function);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  cursor: text;\n\n  &:hover,\n  &:focus {\n    border-color: var(--modal-input-border-color);\n    opacity: 1;\n  }\n`;\n\nexport const ModalTextarea = styled.textarea`\n  /* display: ${props => props.display || 'flex'}; */\n  width: ${props => props.width || '100%'};\n  max-width: ${props => props.maxWidth || '352px'};\n  height: ${props => props.height || '120px'};\n  border: ${props =>\n    props.border || '1px solid var(--modal-input-border-color)'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  padding-top: ${props => props.padding || '14px'};\n  padding-right: ${props => props.padding || '18px'};\n  padding-bottom: ${props => props.padding || '14px'};\n  padding-left: ${props => props.padding || '18px'};\n  font-size: ${props => props.fontSize || '14px'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  background-color: var(--modal-input-bg-color);\n  color: var(--modal-input-text-color);\n  outline: transparent;\n  opacity: 0.4;\n  transition: opacity var(--timing-function);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  resize: ${props => props.resize || 'none'};\n  cursor: text;\n\n  &:hover,\n  &:focus {\n    border-color: var(--modal-input-border-color);\n    opacity: 1;\n  }\n`;\n\nexport const ModalSvg = styled.svg`\n  width: ${props => props.width || '18px'};\n  height: ${props => props.height || '18px'};\n  stroke: ${props => props.stroke || 'var(--modal-selected-plus-color)'};\n  cursor: pointer;\n  &:hover,\n  &:focus,\n  &:checked {\n    stroke: ${props => props.stroke || 'var(--modal-selected-plus-color)'};\n  }\n`;\n\nexport const ModalWrapperComponent = styled.div`\n  display: ${props => props.display || 'flex'};\n  justify-content: ${props => props.justifyContent || 'start'};\n  align-items: ${props => props.alignItems || 'center'};\n  flex-wrap: ${props => props.flexWrap || 'wrap'};\n  gap: ${props => props.gap || '8px'};\n  max-width: ${props => props.maxWidth || '100%'};\n  margin-bottom: ${props => props.marginBottom || '24px'};\n`;\n\nexport const ModalImg = styled.div`\n  position: relative;\n  width: ${props => props.width || '28px'};\n  height: ${props => props.height || '28px'};\n  background-color: ${props => props.backgroundColor || 'transparent'};\n  border: ${props =>\n    props.border || '1px solid var(--modal-input-border-color)'};\n  border-radius: ${props => props.borderRadius || '6px'};\n  cursor: pointer; \n`;\n\nexport const ModalButton = styled.button`\n  position: ${props => props.position || 'static'};\n  top: ${props => props.top || '0px'};\n  right: ${props => props.right || '0px'};\n  display: ${props => props.display || 'flex'};\n  justify-content: ${props => props.justifyContent || 'center'};\n  align-items: ${props => props.alignItems || 'center'};\n  width: ${props => props.width || '100%'};\n  height: ${props => props.height || '49px'};\n  padding: ${props => props.padding || '10px 0px'};\n  border: ${props => props.border || 'none'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  font-family: 'Poppins', sans-serif;\n  font-weight: ${props => props.fontWeight || '500'};\n  font-size: ${props => props.fontSize || '14px'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  background-color: ${props =>\n    props.backgroundColor || 'var(--modal-btn-bg-color)'};\n  color: ${props => props.color || 'var(--modal-btn-text-color)'};\n  margin-top: ${props => props.marginTop || '0px'};\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n\n  &:hover,\n  &:focus {\n    background-color: ${props =>\n      props.backgroundColorHover || 'var(--modal-btn-bg-color-hover)'};\n    outline: none;\n  }\n`;\n\nexport const ModalSvgPlus = styled.div`\n  display: ${props => props.display || 'flex'};\n  justify-content: ${props => props.justifyContent || 'start'};\n  align-items: ${props => props.alignItems || 'center'};\n  width: ${props => props.width || '28px'};\n  height: ${props => props.height || '28px'};\n  padding: ${props => props.padding || '7px'};\n  background-color: ${props =>\n    props.backgroundColor || 'var(--modal-plus-btn-bg-color)'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  margin-right: ${props => props.marginRight || '8px'};\n`;\n","import { ModalTitle } from '../Modals.styled';\n\nconst TitleModal = props => {\n  return <ModalTitle {...props} />;\n};\n\nexport default TitleModal;\n","import PropTypes from 'prop-types';\nimport { ModalLabel } from '../Modals.styled';\n\nconst LabelModal = ({ children, ...rest }) => {\n  return <ModalLabel {...rest}>{children}</ModalLabel>;\n};\n\nLabelModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default LabelModal;\n","import { ModalInput } from '../Modals.styled';\n\nconst InputModal = ({ onChange, value, ...rest }) => {\n  return <ModalInput onChange={onChange} value={value} {...rest} />;\n};\n\nexport default InputModal;\n","import { ModalTextarea } from '../Modals.styled';\n\nconst TextareaModal = props => {\n  return <ModalTextarea {...props} />;\n};\n\nexport default TextareaModal;\n","import { ModalImg } from '../Modals.styled';\n\nconst ImgModal = props => {\n  return <ModalImg {...props} />;\n};\n\nexport default ImgModal;\n","import PropTypes from 'prop-types';\nimport { ModalWrapperComponent } from '../Modals.styled';\n\nconst WrapperComponentModal = ({ children, ...rest }) => {\n  return <ModalWrapperComponent {...rest}>{children}</ModalWrapperComponent>;\n};\n\nWrapperComponentModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default WrapperComponentModal;\n","import { ModalButton } from '../Modals.styled';\n\nconst ButtonModal = ({ onClick, name, children, type, ...rest }) => {\n  return (\n    <ModalButton onClick={onClick} name={name} type={type} {...rest}>\n      {children}\n    </ModalButton>\n  );\n};\n\nexport default ButtonModal;\n","import PropTypes from 'prop-types';\nimport { ModalSvg } from '../Modals.styled';\n\nconst SvgModal = ({ children, ...rest }) => {\n  return <ModalSvg {...rest}>{children}</ModalSvg>;\n};\n\nSvgModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SvgModal;\n","import { ModalSvgPlus } from '../Modals.styled';\n\nconst SvgPlusModal = ({ children, ...rest }) => {\n  return <ModalSvgPlus {...rest}>{children}</ModalSvgPlus>;\n};\n\nexport default SvgPlusModal;\n","import ButtonModal from './ButtonModal';\nimport SvgModal from './SvgModal';\nimport SvgPlusModal from './SvgPlusModal';\n// import WrapperComponentModal from \"./WrapperComponentModal\";\nimport sprite from '../../../images/sprite.svg';\n\nconst ButtonPlusModal = ({ onClick, name, children, type, ...rest }) => {\n  return (\n    <ButtonModal onClick={onClick} name={name} type={type} {...rest}>\n      <SvgPlusModal>\n        <SvgModal>\n          <use href={sprite + '#icon-plus'} />\n        </SvgModal>\n      </SvgPlusModal>\n      {children}\n    </ButtonModal>\n  );\n};\n\nexport default ButtonPlusModal;\n","import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\n\nimport sprite from '../../../../images/sprite.svg';\nimport SvgModal from '../SvgModal';\nimport { DesktopDatePicker } from '@mui/x-date-pickers';\n\nexport const Calendar = ({ deadline }) => {\n  dayjs().format();\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DesktopDatePicker\n          defaultValue={dayjs(new Date())}\n          views={['month', 'day']}\n          disablePast={true}\n          onChange={date => {\n            const selectedDate = date.$d;\n            const formattedDate = new Date(Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()));\n            const formattedDateString = formattedDate.toISOString().split('T')[0];\n            deadline(formattedDateString);\n          }}\n          \n          // defaultValue={dayjs(new Date())}\n          // views={['month', 'day']}\n          // disablePast={true}\n          // onChange={date => {\n\n          //   // const newDate = String(date.$d).split(' ').splice(1, 3).join(' ');\n          //   // const newDateIso = new Date(newDate).toISOString().slice(0, 19);\n          //   // deadline(newDateIso);\n          //   deadline(formattedDate);\n\n          slots={{\n            openPickerIcon: () => (\n              <SvgModal\n                stroke=\"var(--modal-date-text-color)\"\n                width=\"18px\"\n                height=\"18px\"\n              >\n                <use href={sprite + '#icon-chevron-down'} />\n              </SvgModal>\n            ),\n          }}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                color: 'var(--modal-primary-text-color)',\n                backgroundColor: 'var(--modal-calendar-bg-color)',\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  textAlign: ' center',\n                  width: '125px',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  width: '100%',\n                  padding: '0',\n\n                  margin: '0',\n                  borderBottomWidth: '2px',\n                  borderBottomStyle: 'solid',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '190px',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiSvgIcon-root': {\n                  fill: 'var(--modal-primary-text-color)',\n                  height: '18px',\n                },\n                '& .MuiTypography-root': {\n                  color: 'var(--modal-secondary-text-color)',\n                  height: '24px',\n                  marginTop: '14px',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n                '& .MuiButtonBase-root': {\n                  color: 'var(--modal-primary-text-color)',\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: 'var(--modal-date-text-color)',\n                  color: 'var(--modal-input-bg-color)',\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: 'var(--modal-date-text-color)',\n                  // color: '',\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': {\n                  // display: 'none'\n                  width: '103px',\n                  height: '16px',\n                  color: 'var(--modal-date-text-color)',\n                  fontFamily: 'Poppins, sans-serif',\n                  fontSize: '14px',\n                  fontWeight: '500',\n                  padding: '0px',\n                  margin: '0px',\n                },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};\n","export const radioButtons = [\n  { priority: 'low', color: 'var(--filter-low-color)' },\n  { priority: 'medium', color: 'var(--filter-medium-color)' },\n  { priority: 'high', color: 'var(--filter-high-color)' },\n  { priority: 'without', color: 'var(--filter-without-priority-color)' },\n];\n","import { Modal } from 'components/common/Modal';\nimport sprite from '../../../images/sprite.svg';\nimport { Formik, Form } from 'formik';\nimport TitleModal from '../ModalsCommon/TitleModal';\nimport LabelModal from '../ModalsCommon/LabelModal';\nimport InputModal from '../ModalsCommon/InputModal';\nimport TextareaModal from '../ModalsCommon/TextareaModal';\nimport ImgModal from '../ModalsCommon/ImgModal';\nimport WrapperComponentModal from '../ModalsCommon/WrapperComponentModal';\nimport ButtonPlusModal from '../ModalsCommon/ButtonPlusModal';\nimport { Calendar } from '../ModalsCommon/Calendar/Calendar';\nimport { useEffect, useState } from 'react';\nimport { CloseButton, CloseSVG } from 'components/Modal/Modal.styled';\nimport { radioButtons } from './radioBattons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createNewTaskThunk } from 'redux/dashboards/thunks';\n\nconst ModalAddEditCard = ({ closeModal, nameButton, columnId }) => {\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n  const boardId = useSelector(state => state.boards.currentBoard._id);\n\n  //   ------------ Підключення модалки ---------------\n  //   ================================================\n\n  // 1. Перенести в компонент, в якому підключається модалка\n  //   const [showModal, setShowModal] = useState(false);\n  //   const [nameButton, setNameButton] = useState('');\n\n  //   const openModal = (e) => {\n  //     setNameButton(e.target.name);\n  //     setShowModal(true);\n  //   }\n\n  // const closeModal = () => {\n  //   setShowModal(false);\n  // }\n\n  // 2. В nameButton === 'edit' в useEffect, має бути name однієї з кнопок, що відкриває модалку\n\n  useEffect(() => {\n    if (nameButton === 'edit') {\n      setVisible(true);\n    }\n  }, [nameButton]);\n\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [priority, setPriority] = useState('without');\n  const [deadline, setDeadline] = useState('');\n\n  // const dispatch = useDispatch()\n  // const selector = useSelector(selectAllBoards)\n\n  const handleChangeTitle = e => {\n    const { value } = e.currentTarget;\n\n    setTitle(value);\n  };\n\n  const handleChangeDescription = e => {\n    const { value } = e.currentTarget;\n\n    setText(value);\n  };\n\n  const onChangeColor = e => {\n    setPriority(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title.trim() === '') {\n      alert('Enter title');\n      return;\n    } else if (text.trim() === '') {\n      alert('Enter Description');\n      return;\n    } else if (!deadline) {\n      alert('Select date');\n    } else {\n      dispatch(\n        createNewTaskThunk({\n          title,\n          text,\n          priority,\n          deadline,\n          boardId,\n          columnId,\n        })\n      );\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setTitle('');\n    setText('');\n    setDeadline('');\n  };\n\n  return (\n    <Modal width=\"350px\" height=\"522px\" onClose={closeModal}>\n      <>\n        <CloseButton onClick={closeModal}>\n          <CloseSVG>\n            <use href={sprite + '#icon-x-close'}></use>\n          </CloseSVG>\n        </CloseButton>\n        <Formik>\n          <Form autoComplete=\"off\">\n            <TitleModal>{!visible ? 'Add card' : 'Edit card'}</TitleModal>\n            <LabelModal>\n              <InputModal\n                onChange={handleChangeTitle}\n                value={title}\n                type=\"text\"\n                name=\"modalAddEditCardTitle\"\n                title=\"Enter title\"\n                required\n                placeholder=\"Title\"\n              />\n            </LabelModal>\n            <LabelModal>\n              <TextareaModal\n                onChange={handleChangeDescription}\n                value={text}\n                type=\"text\"\n                name=\"modalDescription\"\n                title=\"Enter title\"\n                required\n                placeholder=\"Comment\"\n                maxWidth=\"302px\"\n                height=\"154px\"\n              />\n            </LabelModal>\n            <TitleModal\n              fontSize=\"12px\"\n              marginBottom=\"4px\"\n              color=\"var(--modal-secondary-text-color)\"\n            >\n              Label color\n            </TitleModal>\n            <WrapperComponentModal\n              marginBottom=\"14px\"\n              gap=\"8px\"\n              maxWidth=\"252px\"\n              justifyContent=\"start\"\n            >\n              {radioButtons.map(({ priority, color }) => {\n                return (\n                  <LabelModal key={priority} marginBottom=\"0px\">\n                    <InputModal\n                      onChange={onChangeColor}\n                      checked={priority === { priority } ? true : false}\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value={priority}\n                      display=\"none\"\n                      aria-label={priority}\n                    />\n                    <ImgModal\n                      width=\"14px\"\n                      height=\"14px\"\n                      backgroundColor={color}\n                      border=\"transparent\"\n                      borderRadius=\"50%\"\n                    />\n                  </LabelModal>\n                );\n              })}\n            </WrapperComponentModal>\n            <TitleModal\n              fontSize=\"12px\"\n              marginBottom=\"4px\"\n              color=\"var(--modal-secondary-text-color)\"\n            >\n              Deadline\n            </TitleModal>\n            <WrapperComponentModal marginBottom=\"0px\">\n              {!deadline && (\n                <TitleModal\n                  marginBottom=\"0px\"\n                  fontSize=\"14px\"\n                  fontWeight=\"500\"\n                  color=\"var(--modal-date-text-color)\"\n                >\n                  Today,\n                </TitleModal>\n              )}\n              <Calendar deadline={setDeadline} />\n            </WrapperComponentModal>\n            <ButtonPlusModal\n              onClick={handleSubmit}\n              name=\"addCard\"\n              type=\"submit\"\n              marginTop=\"40px\"\n            >\n              {!visible ? 'Add' : 'Edit'}\n            </ButtonPlusModal>\n          </Form>\n        </Formik>\n      </>\n    </Modal>\n  );\n};\n\nexport default ModalAddEditCard;\n","import React, { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { BtnAddNewCard, SvgIconPlus, WrapSvg } from './AddNewCardBtn.styled';\nimport ModalAddEditCard from 'components/Modals/ModalAddEditCard/ModalAddEditCard';\n\nconst AddNewCard = ({ columnId }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n  return (\n    <>\n      <BtnAddNewCard type=\"submit\" onClick={openModal}>\n        <WrapSvg>\n          <SvgIconPlus>\n            <use href={sprite + '#icon-plus'}></use>\n          </SvgIconPlus>\n        </WrapSvg>\n        Add another card\n      </BtnAddNewCard>\n      {showModal && (\n        <ModalAddEditCard\n          closeModal={() => setShowModal(false)}\n          nameButton=\"add\"\n          columnId={columnId}\n        />\n      )}\n    </>\n  );\n};\n\nexport default AddNewCard;\n","import styled from '@emotion/styled';\n\nconst Input = styled.input`\ndisplay: flex;\nwidth: 302px;\n// hight:50px;\nmargin-top:24px;\nmargin-bottom:24px;\npadding: 14px 18px  14px;\nalign-items: center;\nborder-radius: 8px;\nborder: 1px solid var(--modal-input-border-color);\nopacity: 0.4;\nbox-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\nbackground-color:var( --modal-bg-color); \ncolor: var(--modal-input-text-color);\n::placeholder {\n  color: var(--modal-input-placeholder-color);\n},\n&:focus {\n    outline: none;\n    box-shadow: none;\n`;\n\n\nconst BtnAdd = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 302px;\n  height: 49px;\n\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-btn-text-color);\n\n  border: none;\n  border-radius: 8px;\n  background: var(--modal-btn-bg-color);\n\n  transition-property: background-color, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: var(--modal-btn-bg-color-hover);\n    transform: background-color;\n  }\n`;\n\n const WrapSvg = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  content: '';\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  background-color: var(--modal-plus-btn-bg-color);\n`;\n\n const SvgIconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--modal-selected-plus-color);\n//   background-color: var(--modal-plus-btn-bg-color);\n`;\n\nexport {\n    Input,\n    BtnAdd,\n    WrapSvg,\n    SvgIconPlus\n}","import Modal from '../../../components/Modal/Modal';\nimport React, { useState } from 'react';\nimport { Input, BtnAdd, WrapSvg, SvgIconPlus } from './ColumnModal.styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\n\n\nconst ColumnModal = ({ closeModal, isOpen, name, inputPlaceholder, actionThunk, actionPayload, buttonText, initialValue }) => {\n  const [inputValue, setInputValue] = useState(initialValue || ''); // Use initialValue if provided\n  const dispatch = useDispatch();\n  const boardId = useSelector(state => state.boards.currentBoard._id);\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n      toast.error('Column name can not be empty');\n    } else {\n      dispatch(\n        actionThunk({\n          boardId,\n          ...actionPayload(inputValue),\n        })\n      );\n      setInputValue('');\n      closeModal();\n    }\n  }\n\n  return (\n    <Modal onClose={closeModal} isOpen={isOpen}>\n      <h2>{name}</h2>\n      <Input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder={inputPlaceholder}\n      />\n\n      <BtnAdd type=\"submit\" onClick={handleSubmit}>\n        <WrapSvg>\n          <SvgIconPlus>\n            <use href={sprite + '#icon-plus'}></use>\n          </SvgIconPlus>\n        </WrapSvg>\n        {buttonText}\n      </BtnAdd>\n    </Modal>\n  );\n};\nexport default ColumnModal;\n\n","import React, { useState } from 'react';\nimport Card from '../Card/Card';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  ScrollContainer,\n  ScrollContent,\n  TitleIcon,\n  Title,\n  ColumnContainer,\n  WhiteIcon,\n  Icons,\n} from './Column.styled';\nimport AddNewCard from 'components/BoardPage/AddNewCardBtn/AddNewCardBtn';\nimport ColumnModal from 'components/BoardPage/ColumnModal/ColumnModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteColumnByIdThunk,\n  updateColumnByIdThunk,\n} from 'redux/dashboards/thunks';\n// import ModalAddEditCard from 'components/Modals/ModalAddEditCard/ModalAddEditCard';\n\nconst Column = ({ title, tasks, columnId, idTask }) => {\n  const [showTestModal, setShowTestModal] = useState(false);\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n  const boardId = useSelector(state => state.boards.currentBoard._id);\n\n  console.log(inputValue);\n\n  const toggleModal = () => {\n    setShowTestModal(prevShowTestModal => !prevShowTestModal);\n    setInputValue(title);\n  };\n\n  const togglePopUpMenu = clickedTaskId => {\n    if (clickedTaskId === openTaskId) {\n      setOpenTaskId(null);\n    } else {\n      setOpenTaskId(clickedTaskId);\n    }\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(\n      deleteColumnByIdThunk({\n        boardId,\n        columnId,\n      })\n    );\n  };\n\n  return (\n    <>\n      <ColumnContainer>\n        <TitleIcon>\n          <Title>{title}</Title>\n          <Icons>\n            <WhiteIcon\n              className=\"icon-search\"\n              type=\"submit\"\n              onClick={toggleModal}\n            >\n              <use href={sprite + '#icon-pencil-01'}></use>\n            </WhiteIcon>\n            <WhiteIcon className=\"icon-search\" onClick={handleDeleteColumn}>\n              <use href={sprite + '#icon-trash'}></use>\n            </WhiteIcon>\n          </Icons>\n        </TitleIcon>\n\n        <ScrollContainer>\n          <ScrollContent>\n            {tasks.map(task => {\n              return (\n                <Card\n                  key={task._id}\n                  task={task}\n                  columnId={columnId}\n                  togglePopUpMenu={togglePopUpMenu}\n                  isPopupOpen={openTaskId === task._id}\n                  idTask={task._id}\n                />\n              );\n            })}\n          </ScrollContent>\n        </ScrollContainer>\n        <AddNewCard columnId={columnId} />\n\n        <ColumnModal\n          closeModal={toggleModal}\n          isOpen={showTestModal}\n          name={'Edit column'}\n          inputPlaceholder={title}\n          actionThunk={updateColumnByIdThunk}\n          actionPayload={value => ({ columnId, body: { title: value } })}\n          buttonText={'Add'}\n          initialValue={title}\n        />\n      </ColumnContainer>\n    </>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\n\n\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  background-color: var(--screens-page-bg-color);\n`;\n\nconst DashboardContent = styled.div`\n  display: flex;\n  padding-bottom: 16px; \n  gap:14px;\n`;\n\nconst ColumnWrapper = styled.div`\n  // margin-right: 18px;\n  // margin-right: 18px;\n`;\n\nexport {\n  ColumnWrapper,\n  DashboardContainer,\n  DashboardContent\n}\n","import { useSelector } from 'react-redux';\nimport Column from '../Column/Column';\nimport {\n  DashboardContainer,\n  ColumnWrapper,\n  DashboardContent,\n} from './Board.styled';\n\nconst Board = () => {\n  const board = useSelector(state => state.boards.currentBoard);\n  return (\n    <DashboardContainer>\n      <DashboardContent>\n        {board.columns.map(column => (\n          <ColumnWrapper key={column._id}>\n            <Column\n              title={column.title}\n              tasks={column.tasks}\n              columnId={column._id}\n            />\n          </ColumnWrapper>\n        ))}\n      </DashboardContent>\n    </DashboardContainer>\n  );\n};\n\nexport default Board;\n","import styled from '@emotion/styled';\n\nexport const FiltersContainer = styled.div`\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n`;\n\nexport const FiltersTitle = styled.h2`\n  padding-bottom: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.24px;\n  color: var(--modal-title-color);\n  border-bottom: 1px solid var(--modal-title-border-color);\n`;\n\nexport const WraperAllColor = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-top: 14px;\n\n  color: var(--modal-title-color);\n`;\nexport const FilterList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-top: 14px;\n`;\n\nexport const FilterItem = styled.li`\n  color: var(--modal-title-color);\n\n  &:nth-of-type(1) {\n    accent-color: var(--filter-without-priority-color);\n  }\n  &:nth-of-type(2) {\n    accent-color: var(--filter-low-color);\n  }\n  &:nth-of-type(3) {\n    accent-color: var(--filter-medium-color);\n  }\n  &:nth-of-type(4) {\n    accent-color: var(--filter-high-color);\n  }\n`;\n\nexport const PriorityLabel = styled.label`\n  display: flex;\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  letter-spacing: -0.24px;\n  color: var(--filter-popup-tertiary-text-color);\n`;\n\nexport const AllColor = styled.p`\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const AllLabels = styled.label`\n  display: flex;\n\n  margin-left: auto;\n\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: var(--filter-popup-tertiary-text-color);\n`;\n\nexport const InputRadioBtn = styled.input`\n  transform: scale(1.6);\n  margin-right: 8px;\n`;\n","import React, { useState } from 'react';\nimport {\n  FiltersContainer,\n  FiltersTitle,\n  WraperAllColor,\n  AllColor,\n  InputRadioBtn,\n  AllLabels,\n  FilterItem,\n  FilterList,\n  PriorityLabel,\n} from './FiltersModal.styled';\n\nconst FiltersModal = () => {\n  const [selectedFilter, setSelectedFilter] = useState('showAll');\n  console.log(selectedFilter);\n  const handleChange = e => {\n    setSelectedFilter(e.target.value);\n    // console.log(selectedFilter);\n  };\n\n  return (\n    <FiltersContainer>\n      <FiltersTitle>Filters</FiltersTitle>\n      <WraperAllColor>\n        <AllColor>Label color</AllColor>\n        <AllLabels\n          style={\n            selectedFilter === 'all'\n              ? { color: 'var(--filter-popup-primary-text-color)' }\n              : {}\n          }\n        >\n          <InputRadioBtn\n            style={{ opacity: 0 }}\n            type=\"radio\"\n            value=\"all\"\n            checked={selectedFilter === 'all'}\n            name=\"filters\"\n            onChange={handleChange}\n          />\n          Show all\n        </AllLabels>\n\n        {/* <button type=\"submit\" onClick={() => setSelectedFilter('all')}>\n          TEST\n        </button> */}\n      </WraperAllColor>\n      {/* List */}\n      <FilterList>\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'without'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"without\"\n              checked={selectedFilter === 'without'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            Without priority\n          </PriorityLabel>\n        </FilterItem>\n\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'low'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"low\"\n              checked={selectedFilter === 'low'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            Low\n          </PriorityLabel>\n        </FilterItem>\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'medium'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"medium\"\n              checked={selectedFilter === 'medium'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            Medium\n          </PriorityLabel>\n        </FilterItem>\n\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'high'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"high\"\n              checked={selectedFilter === 'high'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            High\n          </PriorityLabel>\n        </FilterItem>\n      </FilterList>\n    </FiltersContainer>\n  );\n};\n\nexport default FiltersModal;\n","import React, { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Column from '../../components/BoardPage/Column/Column';\nimport Board from '../../components/BoardPage/Board/Board';\nimport ColumnModal from '../../components/BoardPage/ColumnModal/ColumnModal';\nimport FiltersModal from 'components/ModalFilters/FilterModal';\nimport {\n  Section,\n  SectionTitle,\n  BtnFilters,\n  SvgIconFilters,\n  BtnAddColumn,\n  Title,\n  SvgIconPlus,\n  SectionBoards,\n  WrapSvg,\n} from './MainDashboard.styled';\nimport Modal from 'components/Modal/Modal';\nimport { createNewColumnThunk } from 'redux/dashboards/thunks';\nimport { useSelector } from 'react-redux';\n\n\nconst MainDashboard = () => {\n  const boardTitle = useSelector(state => state.boards.currentBoard.title);\n  const [showTestModal, setShowTestModal] = useState(false);\n  const [\n    currentColumns,\n    // setCurrentColumns\n  ] = useState([]);\n\n  const toggleModal = () => {\n    setShowTestModal(prevShowTestModal => !prevShowTestModal);\n    if (!showTestModal) {\n    }\n  };\n\n  // Filters Modal\n  const [showFiltersModal, setShowFiltersModal] = useState(false);\n  const toggleFiltersModal = () => {\n    setShowFiltersModal(prevShowFiltersModal => !prevShowFiltersModal);\n  };\n\n\n\n  return (\n    <Section>\n      <SectionTitle>\n        <Title>{boardTitle}</Title>\n        <BtnFilters type=\"submit\" onClick={toggleFiltersModal}>\n          <SvgIconFilters>\n            <use href={sprite + '#icon-filter'}></use>\n          </SvgIconFilters>\n          Filter\n        </BtnFilters>\n      </SectionTitle>\n      {/* FilterModal */}\n      {showFiltersModal && (\n        <Modal\n          onClose={toggleFiltersModal}\n          isOpen={showFiltersModal}\n          children={<FiltersModal />}\n        />\n      )}\n\n      {/* <FiltersModal /> */}\n\n      <SectionBoards>\n        <Board>\n          {currentColumns.map(column => (\n            <Column\n              key={column._id}\n              title={column.title}\n              tasks={column.tasks}\n              newColumnTitle={null}\n              columnId={column._id}\n            />\n          ))}\n        </Board>\n        <BtnAddColumn type=\"submit\" onClick={toggleModal}>\n          <WrapSvg>\n            <SvgIconPlus>\n              <use href={sprite + '#icon-plus'}></use>\n            </SvgIconPlus>\n          </WrapSvg>\n          Add another column\n        </BtnAddColumn>\n      </SectionBoards>\n      <ColumnModal\n        closeModal={toggleModal}\n        isOpen={showTestModal}\n        name={'Add column'}\n        inputPlaceholder=\"Title\"\n        actionThunk={createNewColumnThunk}\n        actionPayload={value => ({ body: { title: value } })}\n        buttonText={'Add'}\n        initialValue={''}\n      />\n    </Section>\n  );\n};\n\nexport default MainDashboard;\n","import React from 'react';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\n\nconst ScreenPage = () => {\n  return (\n    <div>\n      <MainDashboard />\n    </div>\n  );\n};\n\nexport default ScreenPage;\n"],"names":["CustomCard","styled","props","borderColor","TruncatedText","PriorityCircle","CardContentWrapper","TitleTypography","PriorityTypography","PriorityInfo","DeadlineTypography","DeadlineInfo","PriorityWrapper","DedlineWrapper","PriorityDateItem","PriorityDateContainer","BottomInfo","Icons","PopUpMenu","ScrollContent","WhiteIcon","BellIcon","fillFromLeft","keyframes","BackDropHiden","PopUpItemWrapper","text","iconHref","columnId","handleMoveTask","onClick","className","href","priorityBorderColor","priorityCircleColor","task","togglePopUpMenu","isPopupOpen","idTask","dispatch","useDispatch","columns","useSelector","state","boards","currentBoard","columnsLength","length","selectedTask","priority","today","Date","toLocaleDateString","formattedSelectedDeadline","dayjs","deadline","format","isTodayDeadline","console","log","listForPopup","filter","column","_id","updateTasksColumnByIdThunk","body","newColumnId","title","maxLine","ellipsis","trimRight","basedOn","style","backgroundColor","sprite","color","deleteTaskByIdThunk","unwrap","then","data","catch","error","map","Title","TitleIcon","ColumnContainer","ScrollContainer","BtnAddNewCard","WrapSvg","SvgIconPlus","ModalBackdrop","ModalContent","position","custom","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","ModalTitle","fontSize","fontWeight","lineHeight","marginBottom","ModalLabel","display","flexDirection","alignItems","textAlign","ModalInput","width","maxWidth","height","border","borderRadius","padding","ModalTextarea","resize","ModalSvg","stroke","ModalWrapperComponent","justifyContent","flexWrap","gap","ModalImg","ModalButton","top","right","marginTop","disabled","backgroundColorHover","ModalSvgPlus","marginRight","rest","onChange","value","name","type","Calendar","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","defaultValue","views","disablePast","date","selectedDate","$d","formattedDateString","UTC","getFullYear","getMonth","getDate","toISOString","split","slots","openPickerIcon","slotProps","desktopPaper","sx","left","transform","margin","borderBottomWidth","borderBottomStyle","fill","boxSizing","minWidth","day","borderWidth","textField","variant","fontFamily","radioButtons","closeModal","nameButton","useState","visible","setVisible","boardId","setTitle","setText","setPriority","setDeadline","onChangeColor","e","reset","autoComplete","required","placeholder","checked","preventDefault","trim","createNewTaskThunk","alert","showModal","setShowModal","Input","BtnAdd","isOpen","inputPlaceholder","actionThunk","actionPayload","buttonText","initialValue","inputValue","setInputValue","toast","tasks","showTestModal","setShowTestModal","openTaskId","setOpenTaskId","toggleModal","prevShowTestModal","clickedTaskId","deleteColumnByIdThunk","Card","updateColumnByIdThunk","DashboardContainer","DashboardContent","ColumnWrapper","board","FiltersContainer","FiltersTitle","WraperAllColor","FilterList","FilterItem","PriorityLabel","AllColor","AllLabels","InputRadioBtn","selectedFilter","setSelectedFilter","handleChange","opacity","boardTitle","currentColumns","showFiltersModal","setShowFiltersModal","toggleFiltersModal","prevShowFiltersModal","newColumnTitle","createNewColumnThunk"],"sourceRoot":""}