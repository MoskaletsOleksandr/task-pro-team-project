{"version":3,"file":"static/js/79.5a2c2513.chunk.js","mappings":"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","sources":["components/ModalTitle/ModalTitle.styled.jsx","components/ModalTitle/ModalTitle.jsx","components/EditUser/EditUser.styled.js","components/EditUser/EditUser.jsx","components/ModalEditProfile/ModalEditProfile.jsx","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/hooks/useTheme.js","components/NewDashboard/NewDashBoard.styled.js","components/NewDashboard/NewDashboard.js","redux/dashboards/selectors.js","components/ButtonForForms/ButtonForForms.styled.jsx","components/ButtonForForms/ButtonForForms.jsx","components/ButtonForForms/ChildButtonNewBoard.styled.jsx","components/ButtonForForms/ChildButtonNewBoard.jsx","components/NewBoard/NewBoard.styled.jsx","components/NewBoard/NewBoard.jsx","components/AddBoardButton/AddBoardButton.styled.jsx","components/AddBoardButton/AddBoardButton.jsx","components/BoardList/BoardList.styled.jsx","components/BoardList/BoardList.jsx","components/LogoutBtn/LogoutBtn.styled.jsx","components/LogoutBtn/LogoutBtn.jsx","components/NeedHelp/NeedHelp.styled.jsx","components/NeedHelpForm/NeedHelpForm.styled.jsx","components/NeedHelpForm/NeedHelpForm.jsx","components/NeedHelp/NeedHelp.jsx","components/LogoComponent/LogoComponent.styled.jsx","components/LogoComponent/LogoComponent.js","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","TestNewBoardModal/TestNewBoardModal.jsx","pages/HomePages.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TitleStyled = styled.h2`\n  margin-bottom: 24px;\n  color: var(--modal-title-color);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.36px;\n`;\n","import { TitleStyled } from './ModalTitle.styled';\n\nconst ModalTitle = ({ children }) => {\n  return <TitleStyled>{children}</TitleStyled>;\n};\n\nexport default ModalTitle;\n","import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n  fill: #1f1f1f;\n  stroke: rgba(21, 21, 21, 1);\n`;\n\nexport const AvatarImg = styled.img`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n`;\n\nexport const FileInputWrapper = styled.label`\n  position: absolute;\n  bottom: -12px;\n  left: 50%;\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  transform: translateX(-50%);\n  color: #161616;\n  border-radius: 20%;\n  background-color: #bedbb0;\n  font-size: 18px;\n  font-size: 14px;\n  &:hover {\n    background-color: #9dc888;\n  }\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 24px;\n  gap: 14px;\n\n  input {\n    top: 107px;\n    left: 40px;\n    height: 49px;\n    padding-left: 18px;\n    opacity: 0.4;\n    color: #ffffff;\n    border: 1px solid #bedbb0;\n    border-radius: 8px;\n    outline: none;\n    background: #1f1f1f;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Svg = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const SendBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  cursor: pointer;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #161616;\n  border: none;\n  border-radius: 8px;\n  background: #bedbb0;\n  font-size: 14px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 21px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: #bedbb070;\n  font-size: 14px;\n`;\n","import { useState } from 'react';\nimport { Formik, Field } from 'formik';\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  Wrapper,\n  AvatarWrapper,\n  FileInputWrapper,\n  IconUser,\n  Inputs,\n  FileInput,\n  PasswordView,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n  SendBtn,\n  ErrorText,\n} from './EditUser.styled';\n\nconst EditUser = ({ onClose }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    onClose();\n  };\n\n  return (\n    <>\n      <form onSubmit={formSubmit}>\n        <Formik\n          initialValues={{\n            name: 'userName',\n            email: 'userEmail',\n            password: '',\n          }}\n        >\n          <Wrapper>\n            <AvatarWrapper>\n              <IconUser>\n                <use href={`${sprite}#icon-avatar`}></use>\n              </IconUser>\n\n              <FileInputWrapper>\n                <FileInput\n                  type=\"file\"\n                  accept=\"image/jpeg, image/png, image/gif\"\n                />\n                +\n              </FileInputWrapper>\n            </AvatarWrapper>\n\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" />\n              <Field name=\"email\" type=\"email\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={onPasswordVisible}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={`${sprite}#icon-eye-hide`} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n            <SendBtn type=\"submit\">Send</SendBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </>\n  );\n};\n\nexport default EditUser;\n","import React from 'react';\n\nimport Modal from 'components/Modal';\nimport ModalTitle from 'components/ModalTitle';\nimport EditUser from 'components/EditUser';\n\nconst ModalEditProfile = ({ closeModal, isOpen }) => {\n  return (\n    <Modal onClose={closeModal} isOpen={isOpen} custom={true}>\n      <ModalTitle>Edit profile</ModalTitle>\n      <EditUser onClose={closeModal} />\n    </Modal>\n  );\n};\n\nexport default ModalEditProfile;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 14px;\n`;\n\nexport const UserName = styled.div`\n  color: var(--header-name-color);\n`;\n\nexport const AvasarSetin = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const IconAvatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  border: 1px solid var(--header-theme-select-border-color);\n  border-radius: 8px;\n  fill: var(--header-user-fill);\n  stroke: var(--header-user-stroke);\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n","import React, { useState } from 'react';\n\nimport ModalEditProfile from 'components/ModalEditProfile';\n\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  UserName,\n  IconAvatar,\n  Container,\n  AvasarSetin,\n} from './UserInfo.styled';\n\nconst UserInfo = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Container>\n      <UserName>User</UserName>\n      <AvasarSetin>\n        <IconAvatar onClick={toggleModal}>\n          <use href={`${sprite}#icon-avatar`}></use>\n        </IconAvatar>\n        {showModal && (\n          <ModalEditProfile closeModal={toggleModal} isOpen={showModal} />\n        )}\n      </AvasarSetin>\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 68px;\n  padding-right: 24px;\n  color: var(--header-theme-select-text-color);\n  background-color: var(--header-bg-color);\n\n  @media (max-width: 767px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media (max-width: 1439px) {\n    padding-left: 20px;\n    padding-right: 32px;\n  }\n`;\n\nexport const IconBM = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--header-name-color);\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CustomSelect = styled.div`\n  position: relative;\n`;\n\nexport const CustomOptionList = styled.ul`\n  position: absolute;\n  display: ${props => (props.open ? 'block' : 'none')};\n  top: 20px;\n  left: -105px;\n  margin: 0;\n  padding: 18px 44px 18px 18px;\n  list-style: none;\n  border: solid 1px var(--header-theme-select-border-color);\n  border-radius: 8px;\n  background-color: var(--header-theme-select-bg-color);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  z-index: 1;\n`;\n\nexport const CustomOption = styled.li`\n  padding: 5px 10px;\n  cursor: pointer;\n  color: var(--header-theme-select-text-color);\n\n  &:hover {\n    color: var(--header-theme-select-text-color-hover);\n  }\n\n  /* ${props =>\n    props.selected &&\n    `\n      color: #bedbb0;\n    `} */\n`;\n\nexport const TheamBtn = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  /* &:hover {\n    padding: 5px;\n    box-shadow: 0px 6px 7px -5px #9dc888;\n  } */\n`;\n\nexport const IconDown = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  fill: transparent;\n  stroke: var(--header-theme-select-text-color);\n`;\n","import React, { useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\n\nimport UserInfo from 'components/UserInfo/UserInfo';\n// import { updateTheme } from 'redux/auth/authOperations';\nimport { useTheme } from '../hooks/useTheme';\n\nimport {\n  Container,\n  IconBM,\n  HeaderInfo,\n  CustomSelect,\n  CustomOption,\n  CustomOptionList,\n  IconDown,\n  TheamBtn,\n} from './Header.styled';\n\nimport sprite from '../../images/sprite.svg';\n\nconst Header = ({ onToggleSidebar }) => {\n  const { theme, setTheme } = useTheme();\n  const [selectedTheme, setSelectedTheme] = useState('dark');\n\n  // const dispatch = useDispatch();\n\n  const [isCustomOptionListOpen, setCustomOptionListOpen] = useState(false);\n\n  useEffect(() => {\n    document.body.classList.add(theme);\n    return () => {\n      document.body.classList.remove(theme);\n    };\n  }, [theme]);\n\n  const toggleCustomOptionList = () => {\n    setCustomOptionListOpen(!isCustomOptionListOpen);\n  };\n\n  const handleLightThemeClick = () => {\n    setTheme('light');\n    setSelectedTheme('light');\n    // dispatch(updateTheme('light'));\n    toggleCustomOptionList();\n  };\n\n  const handleDarkThemeClick = () => {\n    setTheme('dark');\n    setSelectedTheme('dark');\n    // dispatch(updateTheme('dark'));\n    toggleCustomOptionList();\n  };\n\n  const handleVioletThemeClick = () => {\n    setTheme('violet');\n    setSelectedTheme('violet');\n    // dispatch(updateTheme('violet'));\n    toggleCustomOptionList();\n  };\n\n  return (\n    <Container>\n      <div onClick={onToggleSidebar}>\n        <IconBM>\n          <use href={`${sprite}#icon-menu`}></use>\n        </IconBM>\n      </div>\n\n      <HeaderInfo>\n        <TheamBtn onClick={toggleCustomOptionList}>\n          Theme\n          <IconDown>\n            <use href={`${sprite}#icon-chevron-down`}></use>\n          </IconDown>\n        </TheamBtn>\n\n        <CustomSelect theme={theme}>\n          <CustomOptionList open={isCustomOptionListOpen}>\n            <CustomOption\n              onClick={() => handleLightThemeClick()}\n              selected={selectedTheme === 'light'}\n            >\n              Light\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleDarkThemeClick()}\n              selected={selectedTheme === 'dark'}\n            >\n              Dark\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleVioletThemeClick('violet')}\n              selected={selectedTheme === 'violet'}\n            >\n              Violet\n            </CustomOption>\n          </CustomOptionList>\n        </CustomSelect>\n\n        <UserInfo />\n      </HeaderInfo>\n    </Container>\n  );\n};\n\nexport default Header;\n","import { useLayoutEffect, useState } from 'react';\n// import { useSelector } from 'react-redux';\n\n// import { getTheme } from 'redux/auth/authSelectors';\n\nexport const useTheme = () => {\n  // const initialTheme = useSelector(getTheme);\n  const [theme, setTheme] = useState(/*initialTheme ||*/ 'dark');\n\n  useLayoutEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  return { theme, setTheme };\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 0px 24px;\n  background-color: var(--screens-page-bg-color);\n`;\n\nexport const InfoContainer = styled.div`\n  height: 100vh;\n  widows: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  font-family: Poppins;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  /* color: var(--add-column-btn-text-color); */\n  color: var(--new-dashboadr-text-color);\n`;\n\nexport const InfoTextAccent = styled.span`\n  color: var(--new-dashboadr-text-accent-color);\n`;\n","import React from 'react';\nimport {\n  Section,\n  InfoText,\n  InfoTextAccent,\n  InfoContainer,\n} from './NewDashBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  BtnFilters,\n  SvgIconFilters,\n} from '../MainDashboard/MainDashboard.styled';\n\nconst NewDashboard = () => {\n  const handleFilters = e => {\n    alert('Handel Button Filters');\n  };\n\n  return (\n    <Section>\n      <BtnFilters type=\"submit\" onClick={handleFilters}>\n        <SvgIconFilters>\n          + <use href={sprite + '#icon-filter'}></use>\n        </SvgIconFilters>\n        Filter\n      </BtnFilters>\n      <InfoContainer>\n        <InfoText>\n          Before starting your project, it is essential\n          <InfoTextAccent> to create a board </InfoTextAccent>to visualize and\n          track all the necessary tasks and milestones. This board serves as a\n          powerful tool to organize the workflow and ensure effective\n          collaboration among team members.\n        </InfoText>\n      </InfoContainer>\n    </Section>\n  );\n};\nexport default NewDashboard;\n","export const selectAllBoards = state => state.boards.info;\n\nexport const selectBoardId = state => state.board.info._id;\nexport const selectIsBoardsLoading = state => state.boards.isLoading;\nexport const selectBoardData = state => state.board.info;\n\n// -------vit--------\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n// -------vit--------\n","import styled from '@emotion/styled';\n\nexport const ButtonForm = styled.button`\nwidth: 302px;\nheight: 49px;\npadding: 10px 0 11px;\nborder-radius: 8px;\nmargin: 0 auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: var(--modal-btn-bg-color);\ncolor: var(--modal-btn-text-color);\nfont-size: 14px;\nfont-weight: 500;\ntransition: scale 250ms ease-in 0s;\n\n&:hover,\n&focus {\nscale: 1.05;\n}\n`;\n","import { ButtonForm } from './ButtonForForms.styled';\n\nfunction ButtonForForms ({ textButton }) {\n  return (\n    <>\n      <ButtonForm type=\"submit\"> {textButton}\n      </ButtonForm>\n    </>\n  );\n}\n\nexport default ButtonForForms;","import styled from '@emotion/styled';\n\nexport const ContainerSvg = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  background-color: var(--modal-button-plus-bg-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n\n  & + p {\n    color: var(--modal-btn-text-color);\n    letter-spacing: -0.28px;\n  }\n`;\nexport const Svg = styled.svg`\n  fill: var(--modal-selected-icon-color);\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerSvg, Svg } from './ChildButtonNewBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport default function ChildButtonNewBoard({ textContent }) {\n  return (\n    <>     \n      <ContainerSvg>\n        <Svg width=\"14px\" height=\"14px\">\n          <use href={sprite + '#icon-plus'}></use>\n        </Svg>\n      </ContainerSvg>\n\n      <p>{textContent}</p>\n    </>\n  );\n}\n\nChildButtonNewBoard.propTypes = {\n  textContent: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const NewBoardTitle = styled.h2`\nwidth: 96px;\nmargin: 0 0 24px 0;\nheight: 27px;\nleft: 24px;\ntop: 24px;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 18px;\nline-height: 27px;\nletter-spacing: -0.02em;\ncolor: var(--modal-title-color);\n`;\n\nexport const ErrorMessage = styled.p`\ncolor: var(--modal-title-color);\nmargin-bottom: 10px;\ntext-align: center;\n`;\n\nexport const Input = styled.input`\nbox-sizing: border-box;\nmargin: 0 0 24px 0;\nwidth: 287px;\nheight: 49px;\npadding-left: 20px;\nbackground: transparent;\nopacity: 0.4;\nborder: 1px solid var(--modal-input-border-color);\nbox-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\nborder-radius: 8px;\ncolor: var(--modal-title-color);\n\n&::placeholder {\n    width: 28px;\n    height: 21px;\n    left: 18px;\n    top: 14px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    color: var(-modal-input-placeholder-color);\n}\n\n&:not(:placeholder-shown) {\n    opacity: 1;\n    color: var(--modal-title-color);\n}\n\n&:focus {\n    opacity: 1;\n    outline: none;\n    border: 1px solid #bedbb0;\n}\n`;\n\nexport const IconTitle = styled.h3`\nmargin: 0 0 14px 0;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 21px;\nletter-spacing: -0.02em;\ncolor: var(--modal-title-color);\n`;\n\nexport const IconWrap = styled.div`\nmargin: 0 0 24px 0;\n`;\n\nexport const Icon = styled.svg`\nmargin-right: 8px;\nwidth: 18px;\nheight: 18px;\nstroke: var(--modal-selected-icon-color);\ncursor: pointer;\n`;\n\nexport const BackgroundTitle = styled.h3`\nmargin: 0 0 14px 0;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nline-height: 21px;\nletter-spacing: -0.02em;\ncolor: var(--modal-title-color);\n`;\n\nexport const BgIcon = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: center;\nwidth: 260px;\ngap: 4px;\nmargin-bottom: 40px;\n`;\n\nexport const BackgroundItem = styled.div`\ncursor: pointer;\ntransition: transform 0.3s;\nborder-radius: 6px;\noverflow: hidden;\n}\n`;\n\nexport const BackgroundImage = styled.img`\n  width: 28px;\n  height: 28px;\n`;","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\n\nimport sprite from '../../images/sprite.svg';\n// import картинки для Backgrounds;\nimport { createNewBoardThunk } from 'redux/dashboards/thunks';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport ChildButtonNewBoard from 'components/ButtonForForms/ChildButtonNewBoard';\n\nimport {\n  NewBoardTitle,\n  IconTitle,\n  IconWrap,\n  Icon,\n  BackgroundTitle,\n  // BgIcon,\n  // BackgroundItem,\n  // BackgroundImage,\n  Input,\n  ErrorMessage,\n} from './NewBoard.styled';\n// import { yupResolver } from '@hookform/resolvers/yup';\n// import { TitleSchema } from 'schemas';\n\nconst NewBoard = ({ onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    // resolver: yupResolver(TitleSchema),\n    mode: 'onChange',\n  });\n  const [selectedIcon, setSelectedIcon] = useState('');\n  // const [selectedBackgroundId, setSelectedBackgroundId] = useState('');\n  const dispatch = useDispatch();\n\n  const handleTitleChange = event => {\n    setValue('title', event.target.value.toString());\n  };\n\n  const handleIconSelect = icon => {\n    setSelectedIcon(icon);\n    setValue('icon', icon);\n  };\n\n  // const handleBackgroundSelect = backgroundId => {\n  //   setSelectedBackgroundId(backgroundId);\n  //   setValue('background', backgroundId.toString());\n  // };\n\n  const handleCreateBoard = data => {\n    dispatch(createNewBoardThunk(data)).then(() => {\n      setValue('title', '');\n      setValue('icon', '');\n      setValue('background', '');\n      onClose();\n    });\n  };\n\n  const renderIcons = () => {\n    const icons = [\n      'icon-Project',\n      'icon-star',\n      'icon-loading',\n      'icon-puzzle-piece',\n      'icon-container',\n      'icon-lightning-icon',\n      'icon-colors',\n      'icon-hexagon',\n    ];\n\n    return icons.map(icon => (\n      <Icon\n        key={icon}\n        selected={selectedIcon === icon}\n        onClick={() => handleIconSelect(icon)}\n      >\n        <use href={`${sprite}#${icon}`} />\n      </Icon>\n    ));\n  };\n\n  // const renderBackgrounds = () => {\n  //   return картинки.map(item => (\n  //     <BackgroundItem\n  //       key={item.id}\n  //       isActive={selectedBackgroundId === item.id}\n  //       onClick={() => handleBackgroundSelect(item.id)}\n  //     >\n  //       <BackgroundImage src={item.image} alt=\"Background\" />\n  //     </BackgroundItem>\n  //   ));\n  // };\n\n  return (\n    <div>\n      <NewBoardTitle>New Board</NewBoardTitle>\n      <form onSubmit={handleSubmit(handleCreateBoard)}>\n        <Input\n          id=\"newBoardInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          {...register('title')}\n          onChange={handleTitleChange}\n        />\n        <ErrorMessage>{errors.title?.message}</ErrorMessage>\n\n        <IconTitle>Icons</IconTitle>\n        <IconWrap>{renderIcons()}</IconWrap>\n\n        <BackgroundTitle>Background</BackgroundTitle>\n        {/* <BgIcon>{renderBackgrounds()}</BgIcon> */}\n\n        <ButtonForForms\n          textButton={() => <ChildButtonNewBoard textContent=\"Create\" />}\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default NewBoard;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 87.6%;\nheight: 70px;\nmargin-left: 14px;\nmargin-bottom: 40px;\npadding: 14px 4px 14px 0;\nborder-top: 1px solid rgba(255, 255, 255, 0.1);\nborder-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\n@media screen and (max-width: 767px) {\nmargin-left: 24px;\nwidth: 81.5%;\npadding: 14px 0;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 76px;\ncolor: var(--primary-text-color);\nfont-size: 14px;\nfont-weight: 500;\nletter-spacing: -0.28px;\n`;\n\nexport const Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 40px;\nheight: 36px;\nbackground-color: #BEDBB0;\nborder-radius: 6px;\n\n&:hover {\n    color: var(--sidebar-button-plus-bg-color-hover);\n  }\n`;\n\nexport const Svg = styled.svg`\nstroke: #121212;\n`;\n\n","import { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport CreateNewBoard from 'components/NewBoard/NewBoard';\nimport { Wrapper, Text, Button, Svg } from './AddBoardButton.styled';\n\nfunction AddBoardButton() {\n  const [isModalOpen, setModalOpen] = useState(false);\n  \n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Text>Create a new board</Text>\n        <Button type=\"button\" onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus'}></use>\n          </Svg>\n        </Button>\n      </Wrapper>\n\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <CreateNewBoard onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default AddBoardButton;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nmargin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\nmargin-left: 14px;\nmargin-bottom: 8px;\nalign-self: flex-start;\ncolor: var(--secondary-text-color);\nfont-size: 12px;\nfont-weight: 400;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {  \n  margin-left: 24px;\n}\n`;\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddBoardButton from 'components/AddBoardButton';\nimport { Title } from './BoardList.styled';\nimport {\n  deleteBoardByIdThunk,\n  getAllBoardsThunk,\n  getCurrentBoardThunk,\n} from 'redux/dashboards/thunks';\nimport { useNavigate } from 'react-router-dom';\n\nfunction BoardList() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const boards = useSelector(state => state.boards.boards);\n\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n  const handleOpenBoard = (id, title) => {\n    dispatch(getCurrentBoardThunk(id));\n\n    const normalizedTitle = title.toLowerCase().replace(/\\s+/g, '-');\n    navigate(normalizedTitle);\n  };\n\n  const handleEditBoard = (e, boardId) => {\n    e.stopPropagation();\n    console.log('handleEditBoard'); // Зупиняє подальше поширення кліку до обгортки\n    // Додайте код для редагування дошки з ID `boardId`\n  };\n\n  const handleDeleteBoard = (e, boardId) => {\n    e.stopPropagation();\n    dispatch(deleteBoardByIdThunk(boardId));\n  };\n\n  return (\n    <>\n      <Title>My boards</Title>\n      <AddBoardButton />\n      {boards.map(({ _id, title }) => (\n        <div\n          key={_id}\n          onClick={() => handleOpenBoard(_id, title)}\n          style={{ display: 'flex', justifyContent: 'space-between' }}\n        >\n          <span style={{ color: 'white' }}>{title}</span>\n          <div>\n            <button onClick={e => handleEditBoard(e, _id)}>Edit</button>\n            <button onClick={e => handleDeleteBoard(e, _id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default BoardList;\n","import styled from '@emotion/styled';\n\nexport const Span = styled.span`\ncolor: var(--primary-text-color);\nfont-size: 16px;\nfont-weight: 500;\n`;\n\nexport const LogOutBtn = styled.button(`\ndisplay: flex;\ngap: 14px;\njustify-content: center;\nalign-items: center;\nmargin-left: 24px;\nwidth: 105px;\nheight: 32px;\nbackground-color: transparent;\n`);\n\nexport const Icon = styled.svg`\nwidth: 32px;\nheight: 32px;\nstroke: var(--sidebar-logout-icon-color);\ncursor: pointer;\n`;\n","import sprite from '../../images/sprite.svg';\nimport { LogOutBtn, Span, Icon } from './LogoutBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { LogOutThunk } from 'redux/auth/thunks';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n\n  function onClick() {\n    dispatch(LogOutThunk());\n  }\n\n  return (\n    <>\n      <LogOutBtn onClick={onClick}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-login`} />\n        </Icon>\n        <Span>Log out</Span>\n      </LogOutBtn>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nalign-self: center;\nbackground-color: var(--sidebar-active-board-bg-color);\nborder-radius: 8px;\nwidth: 197px;\nheight: 238px;\nmargin-bottom: 28px;\nmargin-left: auto;\nmargin-right: auto;\npadding: 15px;\n\n@media screen and (min-width: 768px) {\n    width: 212px;\n    height: 272px;\n    padding: 20px;\n    margin: auto 24px 28px 24px;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 150px;\nmargin-bottom: 19px;\ncolor: var(--primary-text-color);\nfont-size: 12px;\nline-height: 1.34;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {\n  font-size: 14px;\n  line-height: 1.4;\n  letter-spacing: -0.28px;\n}\n`;\n\nexport const Span = styled.span`\ncolor: var(--link-text-color);\n`;\n\nexport const Button = styled.button`\ncolor: var(--primary-text-color);\nfont-size: 12px;\nfont-weight: 500;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 20px;\nbackground-color: transparent;\n`;\n\nexport const Svg = styled.svg`\nstroke: var(--primary-text-color);\n`;\n\nexport const Image = styled.img`\nmargin-bottom: 14px;\n`;\n\nexport const ButtonText = styled.span`\nmargin-left: 8px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nwidth: 335px;\ncolor: var(--modal-bg-color);\n\n@media screen and (min-width: 768px) {\nwidth: 400px;\n}\n`;\n\nexport const Title = styled.h3`\nfont-size: 18px;\nfont-weight: 500;\ncolor: var(--modal-title-color);\nmargin-bottom: 24px;\n\n`;\n\nexport const Input = styled.input`\nfont-size: 14px;\nwidth: 302px;\nheight: 49px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\ncolor: var(--modal-primary-text-color);\nborder-radius: 8px;\nopacity: 0.4;\nmargin-bottom: 4px;\n&:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const Textarea = styled.textarea`\nfont-size: 14px;\nwidth: 302px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\nborder-radius: 8px;\ncolor: var(--modal-primary-text-color);\nopacity: 0.4;\nmin-height: 120px;\nmargin-bottom: 15px;\n\n&:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const ErrorMessage = styled.p`\ncolor: var(--modal-btn-text-color);\nmargin-bottom: 10px;\ntext-align: center;\n`;\n","// import {  useDispatch } from 'react-redux';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport { Form, Input, Textarea, Title } from './NeedHelpForm.styled';\n// import { SendLetterThunk } from 'redux/thunks';\n\nconst NeedHelpForm = () => {\n  //   const dispatch = useDispatch();\n\n  //   const email='helenblyzniuk@gmail.com'\n  //   const text=\"need help\"\n\n  // dispatch(SendLetterThunk({email,text}))\n\n  return (\n    <>\n      <Form>\n        <Title>Need help</Title>\n\n        <Input placeholder=\"Email address\" />\n\n        <Textarea placeholder=\"Comment\"></Textarea>\n\n        <ButtonForForms textButton={() => 'Send'} />\n      </Form>\n    </>\n  );\n};\nexport default NeedHelpForm;\n","import React, { useState } from 'react';\n\nimport sprite from '../../images/sprite.svg';\nimport {\n  Button,\n  ButtonText,\n  Container,\n  Image,\n  Span,\n  Svg,\n  Text,\n} from './NeedHelp.styled';\nimport Modal from 'components/Modal/Modal';\nimport NeedHelpForm from 'components/NeedHelpForm/NeedHelpForm';\n\nconst NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Image\n            src={require(\"images/flower.png\")}\n            alt=\"flower\"\n        />\n\n        <Text>\n          If you need help with <Span>TaskPro</Span>, check out our support\n          resources or reach out to our customer support team.\n        </Text>\n\n        <Button onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-help-circle'}></use>\n          </Svg>\n        <ButtonText>Need help?</ButtonText>\n        </Button>\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <NeedHelpForm />\n        </Modal>\n      </Container>\n    </>\n  );\n};\n\nexport default NeedHelp;","import styled from '@emotion/styled';\n\nexport const StyledWrapper = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\nmargin-bottom: 70px;\n\n@media screen and (min-width: 768px) {\n  margin-left: 24px;\n  margin-bottom: 60px;\n}\n&::before {\n  content: '';\n  width: 32px;\n  height: 32px;\n  background-color: var(--sidebar-logo--bg-color);\n  cursor: pointer;\n  border-radius: 8px;\n}\n`;\n\nexport const StyledLogo = styled.svg`\nfill: var(--primary-text-color);\nposition: absolute;\n`;\n\nexport const StyledSpanLogo = styled.span`\nfont-size: 16px;\nfont-style: normal;\nline-height: normal;\nfont-weight: 600;\nletter-spacing: -0.64px;\ncolor: var(--primary-text-color);\n`;\n","import sprite from 'images/sprite.svg';\nimport { StyledLogo, StyledWrapper, StyledSpanLogo } from './LogoComponent.styled';\n\nconst LogoComponent = () => {\n\n  return (\n      <StyledWrapper>\n        <StyledLogo width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logo-lightning`} />\n        </StyledLogo>\n        <StyledSpanLogo>Task Pro</StyledSpanLogo>\n      </StyledWrapper>\n  );\n};\n\nexport default LogoComponent;","import styled from '@emotion/styled';\n\nexport const StyledSidebar = styled.aside`\nz-index: 1;\nposition: absolute;\nvisibility: hidden;\nopacity: 0;\ntop: 0px;\nleft: -450px;\nbottom: 0px;\nwidth: 225px;\nheight: 100vh;\nmargin: 0;\nbackground-color: var(--sidebar-bg-color);\ntransform: translateX(-225px);\ntransition: transform 250ms ease-in 0s, opacity 250ms ease-in 0s, visibility 250ms ease-in 0s;\n\n&.isOpen {\n    visibility: visible;\n    opacity: 1;\n    left: 0px;\n    transform: translateX(0);\n}\n\n@media screen and (min-width: 768px){\n    width: 260px;\n    transform: translateX(-260px);\n}\n\n@media screen and (min-width: 1440px){\n    position: static;\n    top: 0px;\n    left: 0px;\n    bottom: 0px;\n    width: 260px;\n    height: 100vh;\n    transition: transform 0s ease-in 0s, opacity 0s ease-in 0s,\n    visibility 0s ease-in 0s;\n}\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-between;\nalign-items: space-between;\npadding-top: 18px;\npadding-bottom: 24px;\nheight: 100%;\nbackground-color: var(--sidebar-bg-color);\n\n@media screen and (min-width: 768px){\n    padding-top: 24px;\n}\n`;\n","import BoardList from 'components/BoardList/BoardList';\nimport LogoutBtn from 'components/LogoutBtn/LogoutBtn';\nimport NeedHelp from 'components/NeedHelp/NeedHelp';\nimport LogoComponent from 'components/LogoComponent/LogoComponent';\nimport { StyledSidebar, Container } from './Sidebar.styled';\n\nfunction Sidebar({ isOpen }) {\n  return (\n    <StyledSidebar className={isOpen ? 'isOpen' : null}>\n      <Container>\n        <LogoComponent />\n        <BoardList />\n        <NeedHelp />\n\n        <LogoutBtn />\n      </Container>\n    </StyledSidebar>\n  );\n}\n\nexport default Sidebar;","import Modal from 'components/Modal';\nimport ModalTitle from 'components/ModalTitle';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createNewBoardThunk } from 'redux/dashboards/thunks';\n\nexport const TestNewBoardModal = ({ closeModal, isOpen }) => {\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n  const handleCreateBoard = () => {\n    dispatch(\n      createNewBoardThunk({\n        title: title,\n        icon: '1111',\n        background: '11111',\n      })\n    );\n  };\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n  return (\n    <Modal onClose={closeModal} isOpen={isOpen}>\n      <ModalTitle>New board</ModalTitle>\n      <input onChange={handleTitleChange} value={title} />\n      <button onClick={handleCreateBoard}>Create test board</button>\n    </Modal>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Header from 'components/Header/Header';\n\n//-------vit--------\nimport NewDashboard from 'components/NewDashboard/NewDashboard';\nimport { selectCurrentBoard } from 'redux/dashboards/selectors';\n//-------vit--------\n\nimport {\n  // useDispatch,\n  useSelector,\n} from 'react-redux';\n// import { getAllBoardsThunk } from 'redux/dashboards/thunks';\n// import {\n//   createNewBoardThunk,\n//   createNewColumnThunk,\n//   getCurrentBoardThunk,\n// } from 'redux/dashboards/thunks';\n\n// import ScreensPage from 'components/ScreensPage/ScreensPage';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { TestNewBoardModal } from 'TestNewBoardModal/TestNewBoardModal';\n// import Backdrop from '../components/Sidebar/Backdrop';\n\nconst HomePage = () => {\n  const user = useSelector(state => state.auth.user.theme);\n  console.log(user);\n  const myRef = useRef(null);\n  const [size, setSize] = useState({});\n  const resizeHandler = () => {\n    const { clientHeight, clientWidth } = myRef.current || {};\n    setSize({ clientHeight, clientWidth });\n  };\n  useEffect(() => {\n    window.addEventListener('resize', resizeHandler);\n    resizeHandler();\n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, []);\n\n  const [showSidebar, setShowSidebar] = useState(true);\n  const [showTestModal, setShowTestModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowTestModal(prevShowTestModal => !prevShowTestModal);\n  };\n\n  //-------vit--------\n  const currentBoard = useSelector(selectCurrentBoard);\n  //-------vit--------\n\n  // const dispatch = useDispatch();\n\n  // dispatch(getCurrentBoardThunk('64ee3083db29eb5fa80b1b35'));\n  // dispatch(\n  //   createNewBoardThunk({ title: '111', icon: '1111', background: '11111' })\n  // );\n  // dispatch(\n  //   createNewColumnThunk({\n  //     boardId: '64ee3083db29eb5fa80b1b35',\n  //     body: { title: 'scszcscs' },\n  //   })\n  // );\n  // const toggleSidebar = () => {\n  //   setShowSidebar(!showSidebar);\n  // };\n\n  const handleWindowResize = () => {\n    if (window.innerWidth < 1440) {\n      setShowSidebar(false);\n    } else {\n      setShowSidebar(true);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (size.clientWidth > 1439) {\n      setShowSidebar(true);\n    } else {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [size.clientWidth]);\n\n  const openSidebar = () => {\n    setShowSidebar(true);\n  };\n\n  const handleClickOutside = e => {\n    const modal = document.getElementById('modal-root');\n    if (!myRef.current.contains(e.target) && !modal.contains(e.target)) {\n      setShowSidebar(false);\n    }\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div ref={myRef}>\n          <Sidebar isOpen={showSidebar} />\n        </div>\n        {/* {showSidebar && <Backdrop onClick={toggleSidebar} />} */}\n        <div\n          style={{\n            flexGrow: '1',\n            // height: '100vh',\n            // maxHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: 'var(--screens-page-bg-color)',\n          }}\n        >\n          <Header openSidebar={openSidebar} />\n\n          {/* -------vit-------- */}\n          {currentBoard ? <Outlet /> : <NewDashboard />}\n          {/* -------vit-------- */}\n\n          <button\n            onClick={toggleModal}\n            style={{\n              position: 'absolute',\n              bottom: '100px',\n              right: '30px',\n              width: '200px',\n              height: '30px',\n            }}\n          >\n            Open Test Modal\n          </button>\n          {showTestModal && (\n            <TestNewBoardModal\n              closeModal={toggleModal}\n              isOpen={showTestModal}\n            />\n          )}\n          {/* <ScreensPage /> */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["TitleStyled","styled","children","Wrapper","AvatarWrapper","IconUser","FileInputWrapper","FileInput","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","SendBtn","ErrorText","ErrorMessage","onClose","useState","showPassword","setShowPassword","onSubmit","e","preventDefault","initialValues","name","email","password","href","sprite","type","accept","autoFocus","placeholder","component","className","onClick","src","stroke","closeModal","isOpen","Modal","custom","Container","UserName","AvasarSetin","IconAvatar","showModal","setShowModal","toggleModal","IconBM","HeaderInfo","CustomSelect","CustomOptionList","props","open","CustomOption","selected","TheamBtn","IconDown","onToggleSidebar","theme","setTheme","useLayoutEffect","document","documentElement","setAttribute","useTheme","selectedTheme","setSelectedTheme","isCustomOptionListOpen","setCustomOptionListOpen","useEffect","body","classList","add","remove","toggleCustomOptionList","Section","InfoContainer","InfoText","InfoTextAccent","alert","selectCurrentBoard","state","boards","currentBoard","ButtonForm","textButton","ContainerSvg","ChildButtonNewBoard","textContent","width","height","NewBoardTitle","Input","IconTitle","IconWrap","Icon","BackgroundTitle","useForm","mode","register","handleSubmit","setValue","errors","formState","selectedIcon","setSelectedIcon","dispatch","useDispatch","data","createNewBoardThunk","then","id","onChange","event","target","value","toString","title","message","map","icon","handleIconSelect","Text","Button","isModalOpen","setModalOpen","Title","navigate","useNavigate","useSelector","getAllBoardsThunk","_id","getCurrentBoardThunk","normalizedTitle","toLowerCase","replace","handleOpenBoard","style","display","justifyContent","color","boardId","stopPropagation","console","log","handleEditBoard","deleteBoardByIdThunk","handleDeleteBoard","Span","LogOutBtn","LogOutThunk","Image","ButtonText","Form","Textarea","setIsModalOpen","require","alt","StyledWrapper","StyledLogo","StyledSpanLogo","StyledSidebar","TestNewBoardModal","setTitle","background","user","auth","myRef","useRef","size","setSize","resizeHandler","current","clientHeight","clientWidth","window","addEventListener","removeEventListener","showSidebar","setShowSidebar","showTestModal","setShowTestModal","prevShowTestModal","handleWindowResize","innerWidth","handleClickOutside","modal","getElementById","contains","ref","flexGrow","flexDirection","backgroundColor","openSidebar","position","bottom","right"],"sourceRoot":""}