{"version":3,"file":"static/js/353.d3856e41.chunk.js","mappings":"uVAEaA,EAAcC,EAAAA,EAAAA,GAAH,8K,SCIxB,EAJmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OAAO,SAACF,EAAD,UAAcE,GACtB,E,wCCDYC,EAAUF,EAAAA,EAAAA,IAAH,yHAOPG,EAAgBH,EAAAA,EAAAA,IAAH,gFAMbI,GAAWJ,EAAAA,EAAAA,IAAH,mIAQRK,GAAYL,EAAAA,EAAAA,IAAH,iFAMTM,GAAmBN,EAAAA,EAAAA,MAAH,saAsBhBO,GAAYP,EAAAA,EAAAA,MAAH,0CAITQ,GAASR,EAAAA,EAAAA,IAAH,6ZAsBNS,GAAgBT,EAAAA,EAAAA,IAAH,0GAObU,GAAeV,EAAAA,EAAAA,KAAH,iGAOZW,GAAeX,EAAAA,EAAAA,IAAH,qFAOZY,GAAMZ,EAAAA,EAAAA,IAAH,qFAOHa,GAAUb,EAAAA,EAAAA,OAAH,ubA2BPc,IAAYd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,iECmCtB,GA9IiB,SAAC,GAAiB,IAAfgB,EAAc,EAAdA,QACZC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAENF,GAASG,EAAAA,EAAAA,MAIZ,GAAE,CAACH,IAEJ,IAAMI,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,IAAf,IAElCC,QAAQC,IAAIN,GAEZ,OAAgCO,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,UAASP,EAASY,MAAlD,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCP,EAAAA,EAAAA,UAASP,EAASe,OAApD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCV,EAAAA,EAAAA,WAAS,GAAjD,eAAOW,EAAP,KAAqBC,EAArB,MAMArB,EAAAA,EAAAA,YAAU,WACR,GAAIY,EAAW,CACb,IAAMU,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAAC,GACdd,EAAYc,EAAMC,OAAOC,OAC1B,EACDL,EAAOM,cAAchB,EACtB,CACF,GAAE,CAACA,IA6BJ,OACE,+BACE,iBAAMiB,SAzBS,SAAAC,GACjBA,EAAEC,iBAEF,MAAkCD,EAAEJ,OAAOM,SAAnClB,EAAR,EAAQA,KAAMG,EAAd,EAAcA,MAAOgB,EAArB,EAAqBA,SAEfC,EAAc,CAClBpB,KAAMA,EAAKqB,OAASpB,EACpBE,MAAOA,EAAMkB,OAASjB,GAGpBe,EAASE,QACXD,EAAYD,SAAWA,EAASE,OAG9BvB,IACFsB,EAAYE,OAASxB,GAGvBd,GAASuC,EAAAA,EAAAA,IAAgB,CAAEC,GAAIpC,EAASoC,GAAIpC,SAAUgC,KAEtDrC,GACD,EAIG,UACE,SAAC,KAAD,CACE0C,cAAe,CACbzB,KAAMC,EACNE,MAAOC,EACPe,SAAU,IAEZO,iBAAkBC,EAAAA,GANpB,UAQE,UAAC1D,EAAD,YACE,UAACC,EAAD,WACI0B,GAAaR,EAASwC,WAKtB,SAACxD,GAAD,CACEyD,IAAKjC,GAAYR,EAASwC,UAC1BE,IAAI,SACJC,MAAO,GACPC,OAAQ,MARV,SAAC7D,GAAD,WACE,gBAAK8D,KAAI,UAAKC,EAAAA,EAAL,qBAWb,UAAC7D,GAAD,YACE,SAACC,GAAD,CACE6D,KAAK,OACLC,SAxDS,SAAAzB,GACvBZ,EAAaY,EAAMC,OAAOyB,MAAM,GACjC,EAuDeC,OAAO,qCACP,WAKN,UAAC/D,GAAD,YACE,SAAC,KAAD,CACEgE,WAAS,EACTvC,KAAK,OACLmC,KAAK,OACLd,MAAOpB,EACPmC,SAAU,SAAApB,GAAC,OAAId,EAAYc,EAAEJ,OAAOS,MAAzB,KAEb,SAAC,KAAD,CACErB,KAAK,QACLmC,KAAK,QACLd,MAAOjB,EACPgC,SAAU,SAAApB,GAAC,OAAIX,EAAaW,EAAEJ,OAAOS,MAA1B,KAEb,UAAC7C,GAAD,YACE,SAAC,KAAD,CACEwB,KAAK,WACLmC,KAAM7B,EAAe,OAAS,WAC9BkC,YAAY,cAEd,SAAC3D,GAAD,CAAWmB,KAAK,WAAWyC,UAAU,SACrC,SAAChE,GAAD,CACEiE,UAAS,UAAKjE,GAAL,YAAqBC,IAC9BiE,QApGU,WACxBpC,GAAiBD,EAClB,EAgGa,SAIGA,GACC,SAAC5B,GAAD,CAAcmD,IAAG,UAAKK,EAAAA,EAAL,qBAEjB,SAACvD,GAAD,WACE,gBAAKiE,OAAO,OAAOX,KAAI,UAAKC,EAAAA,EAAL,0BAOjC,SAACtD,GAAD,CAASuD,KAAK,SAAd,SAAuB,iBAMlC,ECvJD,GATyB,SAAC,GAA4B,IAA1BU,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACtC,OACE,UAACC,EAAA,EAAD,CAAOhE,QAAS8D,EAAYC,OAAQA,EAAQE,QAAQ,EAApD,WACE,SAAC,EAAD,UAAY,kBACZ,SAAC,GAAD,CAAUjE,QAAS8D,MAGxB,ECXYI,GAAYlF,EAAAA,EAAAA,IAAH,qGAOTmF,GAAWnF,EAAAA,EAAAA,IAAH,4DAIRoF,GAAcpF,EAAAA,EAAAA,IAAH,mEAKXqF,GAAarF,EAAAA,EAAAA,IAAH,sWCiBvB,IDHyBA,EAAAA,EAAAA,IAAH,4NCnBL,WACf,OAAkC4B,EAAAA,EAAAA,WAAS,GAA3C,eAAO0D,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,WAClBD,GAAcD,EACf,EAED,OACE,UAACJ,GAAD,YACE,SAACC,GAAD,UAAU,UACV,UAACC,GAAD,YACE,SAACC,GAAD,CAAYT,QAASY,EAArB,UACE,gBAAKtB,KAAI,UAAKC,EAAAA,EAAL,oBAEVmB,IACC,SAAC,GAAD,CAAkBR,WAAYU,EAAaT,OAAQO,SAK5D,GCzBYG,GAAY,SAAAlE,GAAK,OAAEA,EAAMC,KAAKC,KAAKiE,KAAlB,ECNjBR,GAAYlF,EAAAA,EAAAA,OAAH,2bAqBT2F,GAAS3F,EAAAA,EAAAA,IAAH,wKAWN4F,GAAa5F,EAAAA,EAAAA,IAAH,kEAKV6F,GAAe7F,EAAAA,EAAAA,IAAH,+CAIZ8F,GAAmB9F,EAAAA,EAAAA,GAAH,wXAEhB,SAAA+F,GAAK,OAAKA,EAAMC,KAAO,QAAU,MAA5B,IAaLC,GAAejG,EAAAA,EAAAA,GAAH,+MASlB,SAAA+F,GAAK,OACRA,EAAMG,UAAN,+BADQ,IAOCC,GAAWnG,EAAAA,EAAAA,IAAH,4KAURoG,GAAWpG,EAAAA,EAAAA,IAAH,sJC2BrB,GA3Fe,SAAC,GAAqB,IAAnBqG,EAAkB,EAAlBA,YAChB,EChBsB,WACtB,IAAMC,GAAehF,EAAAA,EAAAA,IAAYmE,IACjC,GAA0B7D,EAAAA,EAAAA,UAAS0E,GAAgB,QAAnD,eAAOZ,EAAP,KAAca,EAAd,KAMA,OAJAC,EAAAA,EAAAA,kBAAgB,WACdC,SAASC,gBAAgBC,aAAa,aAAcjB,EACrD,GAAE,CAACA,IAEG,CAAEA,MAAAA,EAAOa,SAAAA,EACjB,CDO6BK,GAApBlB,EAAR,EAAQA,MAAOa,EAAf,EAAeA,SACf,GAA0C3E,EAAAA,EAAAA,UAAS,QAAnD,eAAOiF,EAAP,KAAsBC,EAAtB,KAEM7F,GAAWC,EAAAA,EAAAA,MAEjB,GAA0DU,EAAAA,EAAAA,WAAS,GAAnE,eAAOmF,EAAP,KAA+BC,EAA/B,MAEA7F,EAAAA,EAAAA,YAAU,WAER,OADAsF,SAASQ,KAAKC,UAAUC,IAAIzB,GACrB,WACLe,SAASQ,KAAKC,UAAUE,OAAO1B,EAChC,CACF,GAAE,CAACA,IAEJ,IAAM2B,EAAyB,WAC7BL,GAAyBD,EAC1B,EAuBD,OACE,UAAC,GAAD,YACE,gBACEnC,QAAS,WACPyB,GAAY,EACb,EAHH,UAKE,SAACV,GAAD,WACE,gBAAKzB,KAAI,UAAKC,EAAAA,EAAL,qBAIb,UAACyB,GAAD,YACE,UAACO,GAAD,CAAUvB,QAASyC,EAAnB,UAA2C,SAEzC,SAACjB,GAAD,WACE,gBAAKlC,KAAI,UAAKC,EAAAA,EAAL,8BAIb,SAAC0B,GAAD,CAAcH,MAAOA,EAArB,UACE,UAACI,GAAD,CAAkBE,KAAMe,EAAxB,WACE,SAACd,GAAD,CACErB,QAAS,kBA3CnB2B,EAAS,SACTO,EAAiB,SACjB7F,GAASqG,EAAAA,EAAAA,IAAiB,eAC1BD,GAwCmB,EACTnB,SAA4B,UAAlBW,EAFZ,SAGC,WAID,SAACZ,GAAD,CACErB,QAAS,kBA3CnB2B,EAAS,QACTO,EAAiB,QACjB7F,GAASqG,EAAAA,EAAAA,IAAiB,cAC1BD,GAwCmB,EACTnB,SAA4B,SAAlBW,EAFZ,SAGC,UAID,SAACZ,GAAD,CACErB,QAAS,kBA3CnB2B,EAAS,UACTO,EAAiB,UACjB7F,GAASqG,EAAAA,EAAAA,IAAiB,gBAC1BD,GAwCmB,EACTnB,SAA4B,WAAlBW,EAFZ,SAGC,iBAML,SAAC,GAAD,SAIP,EE3GYU,GAAUvH,EAAAA,EAAAA,QAAH,iGAKPwH,GAAgBxH,EAAAA,EAAAA,IAAH,iIAQbyH,GAAWzH,EAAAA,EAAAA,EAAH,iOAWR0H,GAAiB1H,EAAAA,EAAAA,KAAH,0E,WCc3B,GA1BqB,WAKnB,OACE,UAACuH,GAAD,YACE,UAAC,MAAD,CAAYnD,KAAK,SAASuD,UAAU,EAAM/C,QANxB,SAAA3B,GACpB2E,MAAM,wBACP,EAIG,WACE,UAAC,MAAD,WAAgB,MACZ,gBAAK1D,KAAMC,EAAAA,EAAS,oBACP,aAInB,SAACqD,GAAD,WACE,UAACC,GAAD,WAAU,iDAER,SAACC,GAAD,UAAgB,wBAAoC,6LAQ7D,E,uDCrCYG,GAAa7H,EAAAA,EAAAA,OAAH,yeCSvB,I,MAAA,GATA,YAA0C,IAAf8H,EAAc,EAAdA,WACzB,OACE,+BACE,UAACD,GAAD,CAAYzD,KAAK,SAAjB,UAA0B,IAAE0D,QAIjC,ECPYC,GAAe/H,EAAAA,EAAAA,OAAH,oWAiBZY,GAAMZ,EAAAA,EAAAA,IAAH,qECfD,SAASgI,GAAT,GAA+C,IAAhBC,EAAe,EAAfA,YAC5C,OACE,iCACE,SAACF,GAAD,WACE,SAAC,GAAD,CAAK/D,MAAM,OAAOC,OAAO,OAAzB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,oBAIxB,uBAAI8D,MAGT,C,0ECbYC,GAAgBlI,EAAAA,EAAAA,GAAH,qQAcbe,GAAef,EAAAA,EAAAA,EAAH,6GAMZmI,GAAQnI,EAAAA,EAAAA,MAAH,2xBAsCLoI,GAAYpI,EAAAA,EAAAA,GAAH,uMAUTqI,GAAWrI,EAAAA,EAAAA,IAAH,iDAIfsI,IAAoBC,EAAAA,GAAAA,IAAH,uEAIVC,GAAOxI,EAAAA,EAAAA,IAAH,gSAQb,SAAA+F,GAAK,OAAuB,IAAnBA,EAAMG,UAAqBoC,EAA/B,IAMIG,GAAkBzI,EAAAA,EAAAA,GAAH,uMAUf0I,GAAS1I,EAAAA,EAAAA,IAAH,8IASN2I,GAAiB3I,EAAAA,EAAAA,IAAH,kQAIf,qBAAG4I,SAA2B,kBAAoB,MAAlD,IACA,qBAAGA,SAA2B,kBAAoB,MAAlD,IAQCC,GAAkB7I,EAAAA,EAAAA,IAAH,2DAKf8I,GAAkB9I,EAAAA,EAAAA,IAAH,wGC+C5B,GAtJiB,SAAC,GAAiB,IAAD,EAgB5B+I,EAhBc/H,EAAc,EAAdA,QAClB,GAKIgI,EAAAA,GAAAA,IAAQ,CAEVC,KAAM,aANNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,SACaC,EAJf,EAIEC,UAAaD,OAKf,GAAwCzH,EAAAA,EAAAA,UAAS,IAAjD,eAAO2H,EAAP,KAAqBC,EAArB,KACMC,GAAcnI,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMmI,OAAOD,WAAjB,IACrC,GAAoD7H,EAAAA,EAAAA,UAAS,IAA7D,eAAO+H,EAAP,KAA2BC,EAA3B,KACM3I,GAAWC,EAAAA,EAAAA,MACX2I,GAAWC,EAAAA,EAAAA,MAyBXC,EAAyB,SAAAC,GAC7B,IACEJ,EAAsBI,GACtBZ,EAAS,aAAcY,EAGxB,CAFC,SACAC,GAAAA,GAAAA,MAAY,6BACb,CACF,EA4ED,OACE,4BACE,SAAC/B,GAAD,UAAe,eACf,kBAAMlF,SAAUmG,GA7EM,SAAAe,GACxBjJ,GAASkJ,EAAAA,GAAAA,IAAoBD,IAC1BE,MAAK,WACJ,IAAMC,EAAkBH,EAAKI,MAAMC,cAAcC,QAAQ,OAAQ,KACjEX,EAASQ,GACTjB,EAAS,QAAS,IAClBA,EAAS,OAAQ,IACjBA,EAAS,aAAc,IACvBpI,GACD,IACAyJ,OAAM,SAAAC,GACLT,GAAAA,GAAAA,MAAY,0CACb,GACJ,IAgEG,WACE,SAAC9B,IAAD,kBACE1E,GAAG,gBACHW,KAAK,OACLK,YAAY,SACRyE,EAAS,QAAS,CAAEyB,SAAU,uBAJpC,IAKEtG,SAjHkB,SAAAzB,GACxB,IAAMgI,EAAWhI,EAAMC,OAAOS,MAAMuH,WACpCC,aAAa/B,GACbA,EAAYgC,YAAW,WACrB,IACE3B,EAAS,QAASwB,EAGnB,CAFC,SACAX,GAAAA,GAAAA,MAAY,uBACb,CACF,GAAE,KACJ,MAyGK,SAAClJ,GAAD,oBAAesI,EAAOiB,aAAtB,aAAe,EAAcU,WAE7B,SAAC5C,GAAD,UAAW,WACX,SAACC,GAAD,UAxEU,CACZ,eACA,YACA,eACA,oBACA,iBACA,sBACA,cACA,gBAGW4C,KAAI,SAAAC,GAAI,OACnB,SAAC1C,GAAD,CAEEtC,SAAUqD,IAAiB2B,EAC3BtG,QAAS,kBAjDU,SAAAsG,GACvB,IACE1B,EAAgB0B,GAChB9B,EAAS,OAAQ8B,EAGlB,CAFC,SACAjB,GAAAA,GAAAA,MAAY,0CACb,CACF,CA0CoBkB,CAAiBD,EAAvB,EAHX,UAKE,gBAAKhH,KAAI,UAAKC,EAAAA,EAAL,YAAe+G,MAJnBA,EAFY,OA+DjB,SAACzC,GAAD,UAAiB,gBACjB,SAACC,GAAD,UArDoB,WACxB,IAAMjE,GACJ,SAACkE,GAAD,CAEEC,SAAiC,SAAvBe,EACV/E,QAAS,kBAAMmF,EAAuB,OAA7B,EAHX,UAKE,gBACEqB,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZvH,MAAO,OACPC,OAAQ,QANZ,UASE,SAAC6E,GAAD,CAAiBsC,MAAO,CAAEpH,MAAO,OAAQC,OAAQ,QAAjD,UACE,gBAAKC,KAAMC,EAAAA,EAAS,0BAdpB,QAoBFqH,EAAkB/B,EAAYwB,KAAI,SAAAQ,GAAI,OAC1C,SAAC9C,GAAD,CAEEC,SAAUe,IAAuB8B,EAAKC,IACtC9G,QAAS,kBAAMmF,EAAuB0B,EAAKC,IAAlC,EAHX,UAKE,SAAC7C,GAAD,CAAiB/E,IAAK2H,EAAKE,WAAY5H,IAAI,gBAJtC0H,EAAKE,WAF8B,IAU5C,MAAM,CAAElH,GAAR,gBAAwB+G,GACzB,CAmBcI,MAET,SAAC,GAAD,CACE9D,WAAY,kBAAM,SAACE,GAAD,CAAqBC,YAAY,UAAvC,EACZ7D,KAAK,gBAKd,EC7KYlE,GAAUF,EAAAA,EAAAA,IAAH,qXAkBP6L,GAAO7L,EAAAA,EAAAA,EAAH,0IAQJ8L,GAAS9L,EAAAA,EAAAA,OAAH,+SAiBNY,GAAMZ,EAAAA,EAAAA,IAAH,0ECPhB,I,yDAAA,GAhCA,WACE,OAAoC4B,EAAAA,EAAAA,WAAS,GAA7C,eAAOmK,EAAP,KAAoBC,EAApB,KAOMlH,EAAa,WACjBkH,GAAa,EACd,EAED,OACE,iCACE,UAAC,GAAD,YACE,SAACH,GAAD,UAAM,wBACN,SAACC,GAAD,CAAQ1H,KAAK,SAASQ,QAZV,WAChBoH,GAAa,EACd,EAUK,UACE,SAAC,GAAD,CAAKhI,MAAM,OAAOC,OAAO,OAAzB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,sBAKzB4H,IACC,SAAC/G,EAAA,EAAD,CAAOD,OAAQgH,EAAa/K,QAAS8D,EAArC,UACE,SAAC,GAAD,CAAgB9D,QAAS8D,QAKlC,EC9BYmH,IAJUjM,EAAAA,EAAAA,IAAH,gDAICA,EAAAA,EAAAA,GAAH,sQCHLkI,GAAgBlI,EAAAA,EAAAA,GAAH,4QAcbmI,GAAQnI,EAAAA,EAAAA,MAAH,ivBAsCLoI,GAAYpI,EAAAA,EAAAA,GAAH,qMAUTqI,GAAWrI,EAAAA,EAAAA,IAAH,iDAGfsI,IAAoBC,EAAAA,GAAAA,IAAH,uEAIVC,GAAOxI,EAAAA,EAAAA,IAAH,oSASb,SAAA+F,GAAK,OAAuB,IAAnBA,EAAMG,UAAqBoC,EAA/B,IAOIG,GAAkBzI,EAAAA,EAAAA,GAAH,qMAUf0I,GAAS1I,EAAAA,EAAAA,IAAH,8IASN2I,GAAiB3I,EAAAA,EAAAA,IAAH,kQAIf,qBAAG4I,SAA2B,kBAAoB,MAAlD,IACA,qBAAGA,SAA2B,kBAAoB,MAAlD,IAQCC,GAAkB7I,EAAAA,EAAAA,IAAH,2DAKf8I,GAAkB9I,EAAAA,EAAAA,IAAH,wGCoE5B,GAtKsB,SAAC,GAA0B,IAyB3C+I,EAzBmB/H,EAAuB,EAAvBA,QAASkL,EAAc,EAAdA,QAChC,GAKIlD,EAAAA,GAAAA,MAJFE,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,SAGF,GAAwCxH,EAAAA,EAAAA,UAAS,IAAjD,eAAO2H,EAAP,KAAqBC,EAArB,KACA,GAAwD5H,EAAAA,EAAAA,UAAS,IAAjE,eAAOuK,EAAP,KAA6BC,EAA7B,KACM3C,GAAcnI,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMmI,OAAOD,WAAjB,IAE/BxI,GAAWC,EAAAA,EAAAA,MACX2I,GAAWC,EAAAA,EAAAA,MACXuC,GAAQ/K,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMmI,OAAO4C,YAAjB,KAE/BnL,EAAAA,EAAAA,YAAU,WACRF,GAASsL,EAAAA,GAAAA,IAAqBL,GAC/B,GAAE,CAACjL,EAAUiL,KAEd/K,EAAAA,EAAAA,YAAU,WACRiI,EAAS,QAASiD,EAAM/B,OACxBd,EAAgB6C,EAAMnB,MACtBkB,EAAwBC,EAAMG,WAC/B,GAAE,CAACH,EAAM/B,MAAO+B,EAAMG,WAAYH,EAAMnB,KAAM9B,IAG/C,IAoBMW,EAAyB,SAAAC,GAC7B,IACEoC,EAAwBpC,GACxBZ,EAAS,uBAAwBY,EAGlC,CAFC,SACAC,GAAAA,GAAAA,MAAY,6BACb,CACF,EAuFD,OACE,4BACE,SAAC,GAAD,UAAe,gBAEf,kBAAMjH,SAAUmG,GAzFQ,SAAAe,GAC1BxI,QAAQC,IAAIuI,GACZ,IAAMuC,EAAY,CAChBhJ,GAAI4I,EAAMX,IACVzE,KAAM,CACJqD,MAAOJ,EAAKI,MACZY,KAAMhB,EAAKgB,KACXsB,WAAYtC,EAAKiC,uBAIrBlL,GAASyL,EAAAA,GAAAA,IAAqBD,IAC3BE,SACAvC,MAAK,SAAAwC,GACJxD,EAAS,QAASc,EAAKI,OACvBlB,EAAS,OAAQ,IACjBA,EAAS,eAAgBc,EAAKgB,MAC9B9B,EAAS,qBAAsBc,EAAKiC,sBACpCnL,GACD,IACAyJ,OAAM,SAAAC,GACLT,GAAAA,GAAAA,MAAY,0CACZvI,QAAQgJ,MAAM,SAAUA,EACzB,IAEHb,EAAS,GAAD,OAAIK,EAAKI,MAAMC,eACxB,IA+DG,WACE,SAAC,IAAD,kBACE9G,GAAG,gBACHW,KAAK,OACLK,YAAY,SACRyE,EAAS,QAAS,CAAEyB,SAAU,uBAJpC,IAKEtG,SA5HkB,SAAAzB,GACxBkI,aAAa/B,GACbA,EAAYgC,YAAW,WACrB,IACE3B,EAAS,QAASxG,EAAMC,OAAOS,MAGhC,CAFC,SACA2G,GAAAA,GAAAA,MAAY,uBACb,CACF,GAAE,KACJ,MAqHK,SAAC,GAAD,UAAW,WACX,SAAC,GAAD,UArEU,CACZ,eACA,YACA,eACA,oBACA,iBACA,sBACA,cACA,gBAGWgB,KAAI,SAAAC,GAAI,OACnB,SAAC,GAAD,CAEEhF,SAAUqD,IAAiB2B,EAC3BtG,QAAS,kBA9DU,SAAAsG,GACvB,IACE1B,EAAgB0B,GAChB9B,EAAS,OAAQ8B,EAGlB,CAFC,SACAjB,GAAAA,GAAAA,MAAY,0CACb,CACF,CAuDoBkB,CAAiBD,EAAvB,EAHX,UAKE,gBAAKhH,KAAI,UAAKC,EAAAA,EAAL,YAAe+G,MAJnBA,EAFY,OA4DjB,SAAC,GAAD,UAAiB,gBACjB,SAAC,GAAD,UAlDoB,WACxB,IAAMzG,GACJ,SAAC,GAAD,CAEEmE,SAAmC,oBAAzBuD,EACVvH,QAAS,kBAAMmF,EAAuB,kBAA7B,EAHX,UAKE,gBACEqB,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZvH,MAAO,OACPC,OAAQ,QANZ,UASE,SAAC,GAAD,CAAiBmH,MAAO,CAAEpH,MAAO,OAAQC,OAAQ,QAAjD,UACE,gBAAKC,KAAMC,EAAAA,EAAS,0BAdpB,mBAmBFqH,EAAkB/B,EAAYwB,KAAI,SAAAQ,GAAI,OAC1C,SAAC,GAAD,CAEE7C,SAAUuD,IAAyBV,EAAKC,IACxC9G,QAAS,kBAAMmF,EAAuB0B,EAAKC,IAAlC,EAHX,UAKE,SAAC,GAAD,CAAiB5H,IAAK2H,EAAKE,WAAY5H,IAAI,gBAJtC0H,EAAKE,WAF8B,IAS5C,MAAM,CAAElH,GAAR,gBAAwB+G,GACzB,CAkBcI,MACT,SAAC,GAAD,CACE9D,WAAY,kBAAM,SAACE,GAAD,CAAqBC,YAAY,UAAvC,EACZ7D,KAAK,gBAKd,EC7LYlE,GAAUF,EAAAA,EAAAA,GAAH,ktBAoCPY,GAAMZ,EAAAA,EAAAA,IAAH,2EAIHiM,GAAQjM,EAAAA,EAAAA,EAAH,2LASL6M,GAAY7M,EAAAA,EAAAA,IAAH,+RAWT8M,GAAa9M,EAAAA,EAAAA,OAAH,iIAQV+M,GAAe/M,EAAAA,EAAAA,IAAH,yDC+CzB,I,GAAA,GAhGA,YAA0C,IAAnBiC,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,GAAIyH,EAAQ,EAARA,KAC/B,GAAoCtJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOmK,EAAP,KAAoBC,EAApB,KACM/K,GAAWC,EAAAA,EAAAA,MAEX2I,GAAWC,EAAAA,EAAAA,MACjB,GAA4BlI,EAAAA,EAAAA,WAAS,GAArC,eAAOoL,EAAP,KAAeC,EAAf,KACA,GAAgBrL,EAAAA,EAAAA,WAAS,GAAlBsL,GAAP,eAMMpI,EAAa,WACjBkH,GAAa,EACd,EAiDD,OA/CA7K,EAAAA,EAAAA,YAAU,WACRF,GAASkM,EAAAA,GAAAA,MACV,GAAE,CAAClM,KAuCJE,EAAAA,EAAAA,YAAU,WACJ+L,GACFrD,EAAS,QAEZ,GAAE,CAACqD,EAAOrD,KAGT,iCACE,UAAC,GAAD,CAASlF,UAAWqI,EAAS,SAAW,GAAIpI,QAtC3B,WACnBqI,GAAU,GAEV,IAAMG,EAAgBnL,EAAKsI,cAAcC,QAAQ,UAAW,KAC5DvJ,GAASsL,EAAAA,GAAAA,IAAqB,GAAD,OAAI9I,KACjCoG,EAASuD,EACV,EAgCG,WACE,SAAC,GAAD,CAAKpJ,MAAM,OAAOC,OAAO,OAAzB,UACE,gBAAKC,KAAMC,EAAAA,EAAM,WAAO+G,QAE1B,SAAC,GAAD,CAAOE,MAAO,CAAEiC,MAAO,SAAvB,SAAmCpL,IAClC+K,IACC,UAACD,GAAD,YACE,UAACD,GAAD,CAAY1I,KAAK,SAASQ,QAAS,SAAA3B,GAAC,OA5BtB,SAACA,EAAGiJ,GAC1BjJ,EAAEqK,kBAEFtB,GAAa,EAGd,CAsBiDuB,CAAgBtK,EAApB,EAApC,WACE,SAAC4J,GAAD,CAAW7I,MAAM,OAAOC,OAAO,OAA/B,UACE,gBAAKC,KAAMC,EAAAA,EAAS,sBACV,WAGd,UAAC2I,GAAD,CAAY1I,KAAK,SAASQ,QAAS,SAAA3B,GAAC,OA1BpB,SAACA,EAAGiJ,GAC5BjJ,EAAEqK,kBACFrM,GAASuM,EAAAA,GAAAA,IAAqBtB,GAC/B,CAuBiDuB,CAAkBxK,EAAGQ,EAAzB,EAApC,WACE,SAACoJ,GAAD,CAAW7I,MAAM,OAAOC,OAAO,OAA/B,UACE,gBAAKC,KAAMC,EAAAA,EAAS,kBACV,kBAMnB4H,IACC,SAAC/G,EAAA,EAAD,CAAOD,OAAQgH,EAAa/K,QAAS8D,EAArC,UACE,SAAC,GAAD,CAAe9D,QAAS8D,EAAYoH,QAASzI,QAKtD,ECjHYiK,GAAO1N,EAAAA,EAAAA,GAAH,oVCwDjB,OA/CA,WAEE,IAAMiB,GAAWC,EAAAA,EAAAA,MACX2I,GAAWC,EAAAA,EAAAA,MACXJ,GAASpI,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMmI,OAAOA,MAAjB,IAuBhC,OAlBAvI,EAAAA,EAAAA,YAAU,WAIRF,GAASkM,EAAAA,GAAAA,MACV,GAAE,CAAClM,KAcF,+BACE,SAACyM,GAAD,UAEGhE,EAAOuB,KAAI,gBAAGS,EAAH,EAAGA,IAAKpB,EAAR,EAAQA,MAAR,EAAeY,KAAf,EAAqB8B,OAArB,OACV,SAAC,GAAD,CAEE/K,KAAMqI,EACN1F,QAAS,kBAnBK,SAACnB,EAAI6G,GAC3BrJ,GAASsL,EAAAA,GAAAA,IAAqB9I,IAE9B,IAAM4G,EAAkBC,EAAMC,cAAcC,QAAQ,UAAW,KAC/D9I,QAAQC,IAAI,wCACZD,QAAQC,IAAI,mBAAoB0I,GAChC3I,QAAQC,IAAI,wCAEZkI,EAASQ,EACV,CAUwBsD,CAAgBjC,EAAKpB,EAA3B,EACTc,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAC1C7H,GAAIiI,GAJCA,EAFG,OAcnB,ECYD,I,sDAAA,GApDA,WAEE,IAAMzK,GAAWC,EAAAA,EAAAA,MA2BjB,OAtBAC,EAAAA,EAAAA,YAAU,WACRF,GAASkM,EAAAA,GAAAA,MACV,GAAE,CAAClM,KAqBF,iCACE,SAACgL,GAAD,UAAO,eACP,SAAC,GAAD,KAcA,SAAC,GAAD,MAIL,EChEY2B,GAAO5N,EAAAA,EAAAA,KAAH,yHAOJ6N,GAAY7N,EAAAA,EAAAA,OAAA,iLAYZwI,GAAOxI,EAAAA,EAAAA,IAAH,oHCGjB,GAnBkB,WAChB,IAAMiB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,+BACE,UAAC2M,GAAD,CAAWjJ,QANf,WACE3D,GAAS6M,EAAAA,EAAAA,MACV,EAIG,WACE,SAAC,GAAD,CAAM9J,MAAM,OAAOC,OAAO,OAA1B,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,oBAEX,SAACyJ,GAAD,UAAM,gBAIb,ECpBY1I,GAAYlF,EAAAA,EAAAA,IAAH,qXAmBT6L,GAAO7L,EAAAA,EAAAA,EAAH,oRAeJ4N,GAAO5N,EAAAA,EAAAA,KAAH,0DAIJ8L,GAAS9L,EAAAA,EAAAA,OAAH,+QAeNY,GAAMZ,EAAAA,EAAAA,IAAH,uEAIH+N,GAAQ/N,EAAAA,EAAAA,IAAH,gDAILgO,GAAahO,EAAAA,EAAAA,KAAH,+IC7DViO,GAAOjO,EAAAA,EAAAA,KAAH,oIASJiM,GAAQjM,EAAAA,EAAAA,GAAH,yHAQLmI,GAAQnI,EAAAA,EAAAA,MAAH,oUAiBLkO,GAAWlO,EAAAA,EAAAA,SAAH,4UC6BrB,IDX4BA,EAAAA,EAAAA,EAAH,0GChDJ,WAQnB,OAAyC4B,EAAAA,EAAAA,UAAS,IAAlD,eAAOuM,EAAP,KAAmBC,EAAnB,KACA,GAAgDxM,EAAAA,EAAAA,UAAS,IAAzD,eAAOyM,EAAP,KAAyBC,EAAzB,KACA,GAAoC1M,EAAAA,EAAAA,UAAS,IAA7C,eAAO2M,EAAP,KAAmBC,EAAnB,KACMvN,GAAWC,EAAAA,EAAAA,MAqBjB,OACE,+BACE,UAAC+M,GAAD,CAAMQ,OAAO,GAAb,WACE,SAAC,GAAD,UAAO,eAEP,SAAC,GAAD,CACErK,KAAK,OACLqK,OAAO,GACPhK,YAAY,gBACZnB,MAAO6K,EACP9J,SAAU,SAAAzB,GAAK,OAAIwL,EAAmBxL,EAAMC,OAAOS,MAApC,IAEhBiL,IAAc,uBAAIA,KAEnB,SAACL,GAAD,CACE9J,KAAK,OACLqK,OAAO,GACPhK,YAAY,UACZnB,MAAO+K,EACPhK,SAAU,SAAAzB,GAAK,OAAI0L,EAAoB1L,EAAMC,OAAOS,MAArC,KAGjB,SAAC,GAAD,CAAgBc,KAAK,SAASpB,SApCf,WAJL,kDACD0L,KAIKP,IAChBlN,GACE0N,EAAAA,EAAAA,IAAgB,CACdvM,MAAO+L,EACPS,QAASP,KAGbG,EAAc,KAEdA,EAAc,wBAEjB,EAwB2D1G,WAAY,iBAAM,MAAN,QAIzE,GCVD,GAvCiB,WACf,OAAsClG,EAAAA,EAAAA,WAAS,GAA/C,eAAOmK,EAAP,KAAoB8C,EAApB,KAUA,OACE,+BACE,UAAC,GAAD,YACE,SAACd,GAAD,CACIjK,IAAKgL,EAAQ,KACb/K,IAAI,YAGR,UAAC,GAAD,WAAM,0BACkB,SAAC,GAAD,UAAM,YAAc,mFAI5C,UAAC,GAAD,CAAQa,QArBI,WAChBiK,GAAe,EAChB,EAmBK,WACE,SAAC,GAAD,CAAK7K,MAAM,OAAOC,OAAO,OAAzB,UACE,gBAAKC,KAAMC,EAAAA,EAAQ,yBAErB,SAAC6J,GAAD,UAAY,qBAGd,SAAChJ,EAAA,EAAD,CAAOD,OAAQgH,EAAa/K,QAxBf,WACjB6N,GAAe,EAChB,EAsBK,UACE,SAAC,GAAD,UAKT,EClDYE,GAAgB/O,EAAAA,EAAAA,IAAH,maAuBbgP,GAAahP,EAAAA,EAAAA,IAAH,yFAMViP,GAAiBjP,EAAAA,EAAAA,KAAH,uKChB3B,GAZsB,WAEpB,OACI,UAAC+O,GAAD,YACE,SAACC,GAAD,CAAYhL,MAAM,OAAOC,OAAO,OAAhC,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,6BAEX,SAAC8K,GAAD,UAAgB,eAGvB,ECXY/J,GAAYlF,EAAAA,EAAAA,IAAH,4YAQP,qBAAG+E,OACL,gBAAkB,mBADhB,ICOf,OAXA,YAA8B,IAAXA,EAAU,EAAVA,OACjB,OACE,UAAC,GAAD,CAAWJ,UAAU,UAAUI,OAAQA,EAAvC,WACE,SAAC,GAAD,KACA,SAAC,GAAD,KACA,SAAC,GAAD,KACA,SAAC,GAAD,MAGL,E,WC4ED,GA7EiB,WAEf,IAAM9D,GAAWC,EAAAA,EAAAA,MACjB,GAA0CU,EAAAA,EAAAA,WAAS,GAAnD,eAAOsN,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,GAAAA,eAAc,CAAEC,SAAU,QAE3CnO,EAAAA,EAAAA,YAAU,WACR,IAAMoO,EAAgB,mCAAG,uGAEftO,GAASuO,EAAAA,GAAAA,OAFM,sDAIrB9N,QAAQgJ,MAAM,oIAAd,MAJqB,wDAAH,qDAQtB6E,GACD,GAAE,CAACtO,IAGJ,IAAMqL,GAAehL,EAAAA,EAAAA,IAAYmO,GAAAA,IAgCjC,OA7BAtO,EAAAA,EAAAA,YAAU,WACR,IAAI4H,EAEE2G,EAAqB,SAAA9M,GACzB,GAAIwM,GAAYF,EAAe,CAC7B,IAAMS,EAAiBlJ,SAASmJ,cAAc,YAC1CD,IAAmBA,EAAeE,SAASjN,EAAMC,SACnDsM,GAAiB,EAEpB,CACF,EAaD,OAXKC,GACHD,GAAiB,GAEfD,EACFnG,EAAYgC,YAAW,WACrBtE,SAASqJ,iBAAiB,QAASJ,EACpC,GAAE,KAEHjJ,SAASsJ,oBAAoB,QAASL,GAGjC,WACL5E,aAAa/B,GACbtC,SAASsJ,oBAAoB,QAASL,EACvC,CACF,GAAE,CAACR,EAAeE,KAGjB,+BACE,iBAAKhE,MAAO,CAAEC,QAAS,QAAvB,WACE,SAAC,GAAD,CAAStG,OAAQmK,KACjB,iBACE9D,MAAO,CACL4E,SAAU,IAGV3E,QAAS,OACT4E,cAAe,UANnB,WAWE,SAAC,GAAD,CAAQ5J,YAAa8I,IAGpB7C,GAAe,SAAC,KAAD,KAAa,SAAC,GAAD,WAMtC,C,sHCvFY4D,EAAuBC,EAAAA,GAAW,CAC7ClO,KAAMkO,EAAAA,KAAaxF,SAAS,oBAAoByF,IAAI,GAAGC,IAAI,IAC3DjO,MAAO+N,EAAAA,KACJxF,SAAS,qBACTvI,MAAM,yBACTgB,SAAU+M,EAAAA,KAAaxF,SAAS,wBAAwByF,IAAI,GAAGC,IAAI,MAGxDC,EAA4BH,EAAAA,GAAW,CAClD/N,MAAO+N,EAAAA,KACJxF,SAAS,qBACTvI,MAAM,yBACTgB,SAAU+M,EAAAA,KAAaxF,SAAS,wBAAwByF,IAAI,GAAGC,IAAI,MAGxDzM,EAAmBuM,EAAAA,KAAaI,MAAM,CACjDnO,MAAO+N,EAAAA,KACJ/N,MAAM,iBACNoO,QAAQ,mDAAoD,CAC3DxF,QAAS,cACTyF,oBAAoB,IAExBrN,SAAU+M,EAAAA,KACPC,IAAI,EAAG,0CACPI,QAAQ,iBAAkB,CACzBxF,QAAS,iBACTyF,oBAAoB,K","sources":["components/ModalTitle/ModalTitle.styled.jsx","components/ModalTitle/ModalTitle.jsx","components/EditUser/EditUser.styled.js","components/EditUser/EditUser.jsx","components/ModalEditProfile/ModalEditProfile.jsx","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.jsx","redux/auth/authSelectors.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/hooks/useTheme.js","components/NewDashboard/NewDashBoard.styled.js","components/NewDashboard/NewDashboard.js","components/ButtonForForms/ButtonForForms.styled.jsx","components/ButtonForForms/ButtonForForms.jsx","components/ButtonForForms/ChildButtonNewBoard.styled.jsx","components/ButtonForForms/ChildButtonNewBoard.jsx","components/NewBoard/NewBoard.styled.jsx","components/NewBoard/NewBoard.jsx","components/AddBoardButton/AddBoardButton.styled.jsx","components/AddBoardButton/AddBoardButton.jsx","components/BoardList/BoardList.styled.jsx","components/EditBoardForm/EditBoardForm.styled.jsx","components/EditBoardForm/EditBoardForm.jsx","components/BoardButton/BoardButton.styled.jsx","components/BoardButton/BoardButton.jsx","components/ButtonList/ButtonList.styled.jsx","components/ButtonList/ButtonList.jsx","components/BoardList/BoardList.jsx","components/LogoutBtn/LogoutBtn.styled.jsx","components/LogoutBtn/LogoutBtn.jsx","components/NeedHelp/NeedHelp.styled.jsx","components/NeedHelpForm/NeedHelpForm.styled.jsx","components/NeedHelpForm/NeedHelpForm.jsx","components/NeedHelp/NeedHelp.jsx","components/LogoComponent/LogoComponent.styled.jsx","components/LogoComponent/LogoComponent.js","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","pages/HomePages.js","validation/authValidation.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TitleStyled = styled.h2`\n  margin-bottom: 24px;\n  color: var(--modal-title-color);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.36px;\n`;\n","import { TitleStyled } from './ModalTitle.styled';\n\nconst ModalTitle = ({ children }) => {\n  return <TitleStyled>{children}</TitleStyled>;\n};\n\nexport default ModalTitle;\n","import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n  fill: #1f1f1f;\n  stroke: rgba(21, 21, 21, 1);\n`;\n\nexport const AvatarImg = styled.img`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n`;\n\nexport const FileInputWrapper = styled.label`\n  position: absolute;\n  bottom: -12px;\n  left: 50%;\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  transform: translateX(-50%);\n  color: #161616;\n  border-radius: 20%;\n  background-color: #bedbb0;\n  font-size: 18px;\n  font-size: 14px;\n  &:hover {\n    background-color: #9dc888;\n  }\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 24px;\n  gap: 14px;\n\n  input {\n    top: 107px;\n    left: 40px;\n    height: 49px;\n    padding-left: 18px;\n    opacity: 0.4;\n    color: #ffffff;\n    border: 1px solid #bedbb0;\n    border-radius: 8px;\n    outline: none;\n    background: #1f1f1f;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Svg = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const SendBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  cursor: pointer;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #161616;\n  border: none;\n  border-radius: 8px;\n  background: #bedbb0;\n  font-size: 14px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 21px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: #bedbb070;\n  font-size: 14px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Formik, Field } from 'formik';\n\nimport { UpdateUserSchema } from '../../validation/authValidation';\n\nimport { GetCurrentUserThunk, UpdateUserThunk } from 'redux/auth/thunks';\n\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  Wrapper,\n  AvatarWrapper,\n  FileInputWrapper,\n  IconUser,\n  AvatarImg,\n  Inputs,\n  FileInput,\n  PasswordView,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n  SendBtn,\n  ErrorText,\n} from './EditUser.styled';\n\nconst EditUser = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchCurrentUser = () => {\n      dispatch(GetCurrentUserThunk());\n    };\n\n    fetchCurrentUser();\n  }, [dispatch]);\n\n  const userData = useSelector(state => state.auth.user);\n\n  console.log(userData);\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [userName, setUserName] = useState(userData.name);\n  const [userEmail, setUserEmail] = useState(userData.email);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  useEffect(() => {\n    if (imageFile) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setImageUrl(event.target.result);\n      };\n      reader.readAsDataURL(imageFile);\n    }\n  }, [imageFile]);\n\n  const handleFileChange = event => {\n    setImageFile(event.target.files[0]);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = e.target.elements;\n\n    const newUserData = {\n      name: name.value || userName,\n      email: email.value || userEmail,\n    };\n\n    if (password.value) {\n      newUserData.password = password.value;\n    }\n\n    if (imageFile) {\n      newUserData.avatar = imageFile;\n    }\n\n    dispatch(UpdateUserThunk({ id: userData.id, userData: newUserData }));\n\n    onClose();\n  };\n\n  return (\n    <>\n      <form onSubmit={formSubmit}>\n        <Formik\n          initialValues={{\n            name: userName,\n            email: userEmail,\n            password: '',\n          }}\n          validationSchema={UpdateUserSchema}\n        >\n          <Wrapper>\n            <AvatarWrapper>\n              {!imageUrl && !userData.avatarURL ? (\n                <IconUser>\n                  <use href={`${sprite}#icon-avatar`}></use>\n                </IconUser>\n              ) : (\n                <AvatarImg\n                  src={imageUrl || userData.avatarURL}\n                  alt=\"avatar\"\n                  width={68}\n                  height={68}\n                />\n              )}\n\n              <FileInputWrapper>\n                <FileInput\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  accept=\"image/jpeg, image/png, image/gif\"\n                />\n                +\n              </FileInputWrapper>\n            </AvatarWrapper>\n\n            <Inputs>\n              <Field\n                autoFocus\n                name=\"name\"\n                type=\"text\"\n                value={userName}\n                onChange={e => setUserName(e.target.value)}\n              />\n              <Field\n                name=\"email\"\n                type=\"email\"\n                value={userEmail}\n                onChange={e => setUserEmail(e.target.value)}\n              />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={onPasswordVisible}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={`${sprite}#icon-eye-hide`} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n\n            <SendBtn type=\"submit\">Send</SendBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </>\n  );\n};\n\nexport default EditUser;\n","import React from 'react';\n\nimport Modal from 'components/Modal';\nimport ModalTitle from 'components/ModalTitle';\nimport EditUser from 'components/EditUser';\n\nconst ModalEditProfile = ({ closeModal, isOpen }) => {\n  return (\n    <Modal onClose={closeModal} isOpen={isOpen} custom={true}>\n      <ModalTitle>Edit profile</ModalTitle>\n      <EditUser onClose={closeModal} />\n    </Modal>\n  );\n};\n\nexport default ModalEditProfile;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 14px;\n`;\n\nexport const UserName = styled.div`\n  color: var(--header-name-color);\n`;\n\nexport const AvasarSetin = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const IconAvatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  border: 1px solid var(--header-theme-select-border-color);\n  border-radius: 8px;\n  fill: var(--header-user-fill);\n  stroke: var(--header-user-stroke);\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n","import React, { useState } from 'react';\n\nimport ModalEditProfile from 'components/ModalEditProfile';\n\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  UserName,\n  IconAvatar,\n  Container,\n  AvasarSetin,\n} from './UserInfo.styled';\n\nconst UserInfo = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Container>\n      <UserName>User</UserName>\n      <AvasarSetin>\n        <IconAvatar onClick={toggleModal}>\n          <use href={`${sprite}#icon-avatar`}></use>\n        </IconAvatar>\n        {showModal && (\n          <ModalEditProfile closeModal={toggleModal} isOpen={showModal} />\n        )}\n      </AvasarSetin>\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","\n\nexport const selectUser=state=>state.auth.user;\n\nexport const selectToken=state=>state.auth.token;\n\nexport const selectIsLoading=state=>state.auth.isLoading;\n\nexport const selectTheme=state=>state.auth.user.theme;","import styled from '@emotion/styled';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 68px;\n  padding-right: 24px;\n  color: var(--header-theme-select-text-color);\n  background-color: var(--header-bg-color);\n\n  @media (max-width: 767px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media (max-width: 1439px) {\n    padding-left: 20px;\n    padding-right: 32px;\n  }\n`;\n\nexport const IconBM = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--header-name-color);\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CustomSelect = styled.div`\n  position: relative;\n`;\n\nexport const CustomOptionList = styled.ul`\n  position: absolute;\n  display: ${props => (props.open ? 'block' : 'none')};\n  top: 20px;\n  left: -105px;\n  margin: 0;\n  padding: 18px 44px 18px 18px;\n  list-style: none;\n  border: solid 1px var(--header-theme-select-border-color);\n  border-radius: 8px;\n  background-color: var(--header-theme-select-bg-color);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  z-index: 1;\n`;\n\nexport const CustomOption = styled.li`\n  padding: 5px 10px;\n  cursor: pointer;\n  color: var(--header-theme-select-text-color);\n\n  &:hover {\n    color: var(--header-theme-select-text-color-hover);\n  }\n\n  /* ${props =>\n    props.selected &&\n    `\n      color: #bedbb0;\n    `} */\n`;\n\nexport const TheamBtn = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  /* &:hover {\n    padding: 5px;\n    box-shadow: 0px 6px 7px -5px #9dc888;\n  } */\n`;\n\nexport const IconDown = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  fill: transparent;\n  stroke: var(--header-theme-select-text-color);\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { UpdateThemeThunk } from 'redux/auth/thunks';\nimport { useTheme } from '../hooks/useTheme';\n\nimport {\n  Container,\n  IconBM,\n  HeaderInfo,\n  CustomSelect,\n  CustomOption,\n  CustomOptionList,\n  IconDown,\n  TheamBtn,\n} from './Header.styled';\n\nimport sprite from '../../images/sprite.svg';\n\nconst Header = ({ openSidebar }) => {\n  const { theme, setTheme } = useTheme();\n  const [selectedTheme, setSelectedTheme] = useState('dark');\n\n  const dispatch = useDispatch();\n\n  const [isCustomOptionListOpen, setCustomOptionListOpen] = useState(false);\n\n  useEffect(() => {\n    document.body.classList.add(theme);\n    return () => {\n      document.body.classList.remove(theme);\n    };\n  }, [theme]);\n\n  const toggleCustomOptionList = () => {\n    setCustomOptionListOpen(!isCustomOptionListOpen);\n  };\n\n  const handleLightThemeClick = () => {\n    setTheme('light');\n    setSelectedTheme('light');\n    dispatch(UpdateThemeThunk('light'));\n    toggleCustomOptionList();\n  };\n\n  const handleDarkThemeClick = () => {\n    setTheme('dark');\n    setSelectedTheme('dark');\n    dispatch(UpdateThemeThunk('dark'));\n    toggleCustomOptionList();\n  };\n\n  const handleVioletThemeClick = () => {\n    setTheme('violet');\n    setSelectedTheme('violet');\n    dispatch(UpdateThemeThunk('violet'));\n    toggleCustomOptionList();\n  };\n\n  return (\n    <Container>\n      <div\n        onClick={() => {\n          openSidebar(true);\n        }}\n      >\n        <IconBM>\n          <use href={`${sprite}#icon-menu`}></use>\n        </IconBM>\n      </div>\n\n      <HeaderInfo>\n        <TheamBtn onClick={toggleCustomOptionList}>\n          Theme\n          <IconDown>\n            <use href={`${sprite}#icon-chevron-down`}></use>\n          </IconDown>\n        </TheamBtn>\n\n        <CustomSelect theme={theme}>\n          <CustomOptionList open={isCustomOptionListOpen}>\n            <CustomOption\n              onClick={() => handleLightThemeClick()}\n              selected={selectedTheme === 'light'}\n            >\n              Light\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleDarkThemeClick()}\n              selected={selectedTheme === 'dark'}\n            >\n              Dark\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleVioletThemeClick('violet')}\n              selected={selectedTheme === 'violet'}\n            >\n              Violet\n            </CustomOption>\n          </CustomOptionList>\n        </CustomSelect>\n\n        <UserInfo />\n      </HeaderInfo>\n    </Container>\n  );\n};\n\nexport default Header;\n","import { useLayoutEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectTheme } from 'redux/auth/authSelectors';\n\nexport const useTheme = () => {\n  const initialTheme = useSelector(selectTheme);\n  const [theme, setTheme] = useState(initialTheme || 'dark');\n\n  useLayoutEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  return { theme, setTheme };\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 0px 24px;\n  background-color: var(--screens-page-bg-color);\n`;\n\nexport const InfoContainer = styled.div`\n  height: 90vh;\n  widows: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  font-family: Poppins;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  text-align:center;\n  color: var(--new-dashboadr-text-color);\n`;\n\nexport const InfoTextAccent = styled.span`\n  color: var(--new-dashboadr-text-accent-color);\n`;\n","import React from 'react';\nimport {\n  Section,\n  InfoText,\n  InfoTextAccent,\n  InfoContainer,\n} from './NewDashBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  BtnFilters,\n  SvgIconFilters,\n} from '../MainDashboard/MainDashboard.styled';\n\nconst NewDashboard = () => {\n  const handleFilters = e => {\n    alert('Handel Button Filters');\n  };\n\n  return (\n    <Section>\n      <BtnFilters type=\"submit\" disabled={true} onClick={handleFilters}>\n        <SvgIconFilters>\n          + <use href={sprite + '#icon-filter'}></use>\n        </SvgIconFilters>\n        Filter\n      </BtnFilters>\n\n      <InfoContainer>\n        <InfoText>\n          Before starting your project, it is essential\n          <InfoTextAccent> to create a board </InfoTextAccent>to visualize and\n          track all the necessary tasks and milestones. This board serves as a\n          powerful tool to organize the workflow and ensure effective\n          collaboration among team members.\n        </InfoText>\n      </InfoContainer>\n    </Section>\n  );\n};\nexport default NewDashboard;\n","import styled from '@emotion/styled';\n\nexport const ButtonForm = styled.button`\nwidth: 302px;\nheight: 49px;\npadding: 10px 0 11px;\nborder-radius: 8px;\nborder: none;\n// margin: 0 auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: var(--modal-btn-bg-color);\ncolor: var(--modal-btn-text-color);\nfont-family: Poppins;\nfont-size: 14px;\nfont-weight: 500;\ntext-align: center;\ntransition: scale 250ms ease-in 0s;\n\n&:hover,\n&focus {\nscale: 1.05;\nbackground-color: var(--modal-btn-bg-color-hover);\n}\n`;\n","import { ButtonForm } from './ButtonForForms.styled';\n\nfunction ButtonForForms ({ textButton }) {\n  return (\n    <>\n      <ButtonForm type=\"submit\"> {textButton()}\n      </ButtonForm>\n    </>\n  );\n}\n\nexport default ButtonForForms;","import styled from '@emotion/styled';\n\nexport const ContainerSvg = styled.button`\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--modal-plus-btn-bg-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  text-align: center;\n\n  & + p {\n    color: var(--modal-btn-text-color);\n    letter-spacing: -0.28px;\n  }\n`;\nexport const Svg = styled.svg`\nstroke: var(--modal-selected-plus-color);\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerSvg, Svg } from './ChildButtonNewBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport default function ChildButtonNewBoard({ textContent }) {\n  return (\n    <>     \n      <ContainerSvg>\n        <Svg width=\"28px\" height=\"28px\">\n          <use href={sprite + '#icon-plus'}></use>\n        </Svg>\n      </ContainerSvg>\n\n      <p>{textContent}</p>\n    </>\n  );\n}\n\nChildButtonNewBoard.propTypes = {\n  textContent: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const NewBoardTitle = styled.h2`\n  width: 96px;\n  margin: 0 0 24px 0;\n  height: 27px;\n  left: 24px;\n  top: 24px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const ErrorMessage = styled.p`\n  color: var(--modal-title-color);\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  margin: 0 0 24px 0;\n  width: 287px;\n  height: 49px;\n  padding-left: 20px;\n  background: transparent;\n  opacity: 0.4;\n  border: 1px solid var(--modal-input-border-color);\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n  color: var(--modal-title-color);\n\n  &::placeholder {\n    width: 28px;\n    height: 21px;\n    left: 18px;\n    top: 14px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    color: var(-modal-input-placeholder-color);\n  }\n\n  &:not(:placeholder-shown) {\n    opacity: 1;\n    color: var(--modal-title-color);\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const IconTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const IconWrap = styled.div`\n  margin: 0 0 24px 0;\n`;\n\nconst selectedIconStyle = css`\n  stroke: var(--modal-selected-icon-color);\n`;\n\nexport const Icon = styled.svg`\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n  background-color: var(--modal-button-plus-bg-color);\n  ${props => props.selected === true && selectedIconStyle};\n  &:hover {\n    stroke: var(--modal-selected-icon-color);\n  }\n`;\n\nexport const BackgroundTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const BgIcon = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 260px;\n  gap: 4px;\n  margin-bottom: 40px;\n`;\n\nexport const BackgroundItem = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s;\n  background-color: var(--sidebar-active-board-bg-color);\n  filter: ${({ isActive }) => (isActive ? 'grayscale(100%)' : 'none')};\n  filter: ${({ isActive }) => (isActive ? 'brightness(60%)' : 'none')};\n  border-radius: 6px;\n  overflow: hidden;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const BackgroundImage = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const BasicBackground = styled.svg`\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport sprite from '../../images/sprite.svg';\nimport { createNewBoardThunk } from 'redux/dashboards/thunks';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport ChildButtonNewBoard from 'components/ButtonForForms/ChildButtonNewBoard';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  NewBoardTitle,\n  IconTitle,\n  IconWrap,\n  Icon,\n  BackgroundTitle,\n  BgIcon,\n  BackgroundItem,\n  BackgroundImage,\n  Input,\n  ErrorMessage,\n  BasicBackground,\n} from './NewBoard.styled';\nimport { useNavigate } from 'react-router-dom';\n// import { yupResolver } from '@hookform/resolvers/yup';\n// import { TitleSchema } from 'schemas';\n\nconst NewBoard = ({ onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    // resolver: yupResolver(TitleSchema),\n    mode: 'onChange',\n  });\n  const [selectedIcon, setSelectedIcon] = useState('');\n  const backgrounds = useSelector(state => state.boards.backgrounds);\n  const [selectedBackground, setSelectedBackground] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  let timeoutId;\n\n  const handleTitleChange = event => {\n    const newValue = event.target.value.toString();\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      try {\n        setValue('title', newValue);\n      } catch {\n        toast.error('Error changing title');\n      }\n    }, 1500);\n  };\n\n  const handleIconSelect = icon => {\n    try {\n      setSelectedIcon(icon);\n      setValue('icon', icon);\n    } catch {\n      toast.error('Error occurred while selecting the icon');\n    }\n  };\n\n  const handleBackgroundSelect = backgroundId => {\n    try {\n      setSelectedBackground(backgroundId);\n      setValue('background', backgroundId);\n    } catch {\n      toast.error('Error selecting background');\n    }\n  };\n\n  const handleCreateBoard = data => {\n    dispatch(createNewBoardThunk(data))\n      .then(() => {\n        const normalizedTitle = data.title.toLowerCase().replace(/\\s+/g, '-');\n        navigate(normalizedTitle);\n        setValue('title', '');\n        setValue('icon', '');\n        setValue('background', '');\n        onClose();\n      })\n      .catch(error => {\n        toast.error('Error occurred while creating the board');\n      });\n  };\n\n  const renderIcons = () => {\n    const icons = [\n      'icon-Project',\n      'icon-star',\n      'icon-loading',\n      'icon-puzzle-piece',\n      'icon-container',\n      'icon-lightning-icon',\n      'icon-colors',\n      'icon-hexagon',\n    ];\n\n    return icons.map(icon => (\n      <Icon\n        key={icon}\n        selected={selectedIcon === icon}\n        onClick={() => handleIconSelect(icon)}\n      >\n        <use href={`${sprite}#${icon}`} />\n      </Icon>\n    ));\n  };\n\n  const renderBackgrounds = () => {\n    const placeholder = (\n      <BackgroundItem\n        key=\"null\"\n        isActive={selectedBackground === 'null'}\n        onClick={() => handleBackgroundSelect('null')}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '28px',\n            height: '28px',\n          }}\n        >\n          <BasicBackground style={{ width: '16px', height: '16px' }}>\n            <use href={sprite + '#null-background'}></use>\n          </BasicBackground>\n        </div>\n      </BackgroundItem>\n    );\n\n    const backgroundItems = backgrounds.map(item => (\n      <BackgroundItem\n        key={item.previewURL}\n        isActive={selectedBackground === item._id}\n        onClick={() => handleBackgroundSelect(item._id)}\n      >\n        <BackgroundImage src={item.previewURL} alt=\"Background\" />\n      </BackgroundItem>\n    ));\n\n    return [placeholder, ...backgroundItems];\n  };\n\n  return (\n    <div>\n      <NewBoardTitle>New Board</NewBoardTitle>\n      <form onSubmit={handleSubmit(handleCreateBoard)}>\n        <Input\n          id=\"newBoardInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          {...register('title', { required: 'Title is required' })}\n          onChange={handleTitleChange}\n        />\n        <ErrorMessage>{errors.title?.message}</ErrorMessage>\n\n        <IconTitle>Icons</IconTitle>\n        <IconWrap>{renderIcons()}</IconWrap>\n\n        <BackgroundTitle>Background</BackgroundTitle>\n        <BgIcon>{renderBackgrounds()}</BgIcon>\n\n        <ButtonForForms\n          textButton={() => <ChildButtonNewBoard textContent=\"Create\" />}\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default NewBoard;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 87.6%;\nheight: 70px;\nmargin-left: 14px;\nmargin-bottom: 40px;\npadding: 14px 4px 14px 0;\nborder-top: 1px solid rgba(255, 255, 255, 0.1);\nborder-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\n@media screen and (max-width: 767px) {\nmargin-left: 24px;\nwidth: 81.5%;\npadding: 14px 0;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 76px;\ncolor: var(--primary-text-color);\nfont-size: 14px;\nfont-weight: 500;\nletter-spacing: -0.28px;\n`;\n\nexport const Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 40px;\nheight: 36px;\nbackground-color: var(--sidebar-button-plus-bg-color);\nborder-radius: 6px;\nborder: none;\n\n&:hover,\n&:focus {\nscale: 1.05;\nbackground-color: var(--modal-btn-bg-color-hover);\n}\n`;\n\nexport const Svg = styled.svg`\nstroke: var(--sidebar-button-plus-icon-color);\n`;\n\n","import { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport CreateNewBoard from 'components/NewBoard/NewBoard';\nimport { Wrapper, Text, Button, Svg } from './AddBoardButton.styled';\n\nfunction AddBoardButton() {\n  const [isModalOpen, setModalOpen] = useState(false);\n  \n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Text>Create a new board</Text>\n        <Button type=\"button\" onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus'}></use>\n          </Svg>\n        </Button>\n      </Wrapper>\n\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <CreateNewBoard onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default AddBoardButton;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nmargin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\nmargin-left: 14px;\nmargin-bottom: 8px;\nalign-self: flex-start;\ncolor: var(--secondary-text-color);\nfont-size: 12px;\nfont-weight: 400;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {  \n  margin-left: 24px;\n}\n`;\n\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const NewBoardTitle = styled.h2`\n  margin: 0 0 24px 0;\n  width: 96px;\n  height: 27px;\n  left: 24px;\n  top: 24px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--modal-primary-text-color);\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  margin: 0 0 24px 0;\n  width: 287px;\n  height: 49px;\n  padding-left: 20px;\n  background: transparent;\n  opacity: 0.4;\n  border: 1px solid #bedbb0;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n  color: var(--modal-input-text-color);\n\n  &::placeholder {\n    width: 28px;\n    height: 21px;\n    left: 18px;\n    top: 14px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    color: #bedbb0;\n  }\n\n  &:not(:placeholder-shown) {\n    opacity: 1;\n    color: var(--modal-input-text-color);\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const IconTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const IconWrap = styled.div`\n  margin: 0 0 24px 0;\n`;\nconst selectedIconStyle = css`\n  stroke: var(--modal-selected-icon-color);\n`;\n\nexport const Icon = styled.svg`\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n  background-color: var(--modal-button-plus-bg-color);\n\n  ${props => props.selected === true && selectedIconStyle};\n\n  &:hover {\n    stroke: var(--modal-selected-icon-color);\n  }\n`;\n\nexport const BackgroundTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const BgIcon = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 260px;\n  gap: 4px;\n  margin-bottom: 40px;\n`;\n\nexport const BackgroundItem = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s;\n  background-color: var(--sidebar-active-board-bg-color);\n  filter: ${({ isActive }) => (isActive ? 'grayscale(100%)' : 'none')};\n  filter: ${({ isActive }) => (isActive ? 'brightness(60%)' : 'none')};\n  border-radius: 6px;\n  overflow: hidden;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const BackgroundImage = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const BasicBackground = styled.svg`\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  getCurrentBoardThunk,\n  updateBoardByIdThunk,\n} from 'redux/dashboards/thunks';\nimport sprite from '../../images/sprite.svg';\n// import { useBoardData } from 'components/hooks';\nimport ChildButtonNewBoard from 'components/ButtonForForms/ChildButtonNewBoard';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  NewBoardTitle,\n  IconTitle,\n  IconWrap,\n  Icon,\n  BackgroundTitle,\n  BgIcon,\n  BackgroundItem,\n  BackgroundImage,\n  Input,\n  BasicBackground,\n} from './EditBoardForm.styled';\n\nconst EditBoardForm = ({ onClose, boardId }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    // formState: { errors },\n  } = useForm();\n  const [selectedIcon, setSelectedIcon] = useState('');\n  const [selectedBackgroundId, setSelectedBackgroundId] = useState('');\n  const backgrounds = useSelector(state => state.boards.backgrounds);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const board = useSelector(state => state.boards.currentBoard);\n\n  useEffect(() => {\n    dispatch(getCurrentBoardThunk(boardId));\n  }, [dispatch, boardId]);\n\n  useEffect(() => {\n    setValue('title', board.title);\n    setSelectedIcon(board.icon);\n    setSelectedBackgroundId(board.background);\n  }, [board.title, board.background, board.icon, setValue]);\n\n  let timeoutId;\n  const handleTitleChange = event => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      try {\n        setValue('title', event.target.value);\n      } catch {\n        toast.error('Error changing title');\n      }\n    }, 1500);\n  };\n\n  const handleIconSelect = icon => {\n    try {\n      setSelectedIcon(icon);\n      setValue('icon', icon);\n    } catch {\n      toast.error('Error occurred while selecting the icon');\n    }\n  };\n\n  const handleBackgroundSelect = backgroundId => {\n    try {\n      setSelectedBackgroundId(backgroundId);\n      setValue('selectedBackgroundId', backgroundId);\n    } catch {\n      toast.error('Error selecting background');\n    }\n  };\n\n  const handleEditBoardForm = data => {\n    console.log(data);\n    const boardData = {\n      id: board._id,\n      body: {\n        title: data.title,\n        icon: data.icon,\n        background: data.selectedBackgroundId,\n      },\n    };\n\n    dispatch(updateBoardByIdThunk(boardData))\n      .unwrap()\n      .then(response => {\n        setValue('title', data.title);\n        setValue('icon', '');\n        setValue('selectedIcon', data.icon);\n        setValue('selectedBackground', data.selectedBackgroundId);\n        onClose();\n      })\n      .catch(error => {\n        toast.error('Error occurred while editing the board');\n        console.error('Error:', error);\n      });\n\n    navigate(`${data.title.toLowerCase()}`);\n  };\n\n  const renderIcons = () => {\n    const icons = [\n      'icon-Project',\n      'icon-star',\n      'icon-loading',\n      'icon-puzzle-piece',\n      'icon-container',\n      'icon-lightning-icon',\n      'icon-colors',\n      'icon-hexagon',\n    ];\n\n    return icons.map(icon => (\n      <Icon\n        key={icon}\n        selected={selectedIcon === icon}\n        onClick={() => handleIconSelect(icon)}\n      >\n        <use href={`${sprite}#${icon}`} />\n      </Icon>\n    ));\n  };\n\n  const renderBackgrounds = () => {\n    const placeholder = (\n      <BackgroundItem\n        key=\"null-background\"\n        isActive={selectedBackgroundId === 'null-background'}\n        onClick={() => handleBackgroundSelect('null-background')}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '28px',\n            height: '28px',\n          }}\n        >\n          <BasicBackground style={{ width: '16px', height: '16px' }}>\n            <use href={sprite + '#null-background'}></use>\n          </BasicBackground>\n        </div>\n      </BackgroundItem>\n    );\n    const backgroundItems = backgrounds.map(item => (\n      <BackgroundItem\n        key={item.previewURL}\n        isActive={selectedBackgroundId === item._id}\n        onClick={() => handleBackgroundSelect(item._id)}\n      >\n        <BackgroundImage src={item.previewURL} alt=\"Background\" />\n      </BackgroundItem>\n    ));\n    return [placeholder, ...backgroundItems];\n  };\n\n  return (\n    <div>\n      <NewBoardTitle>Edit Board</NewBoardTitle>\n\n      <form onSubmit={handleSubmit(handleEditBoardForm)}>\n        <Input\n          id=\"newBoardInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          {...register('title', { required: 'Title is required' })}\n          onChange={handleTitleChange}\n        />\n        <IconTitle>Icons</IconTitle>\n        <IconWrap>{renderIcons()}</IconWrap>\n\n        <BackgroundTitle>Background</BackgroundTitle>\n        <BgIcon>{renderBackgrounds()}</BgIcon>\n        <ButtonForForms\n          textButton={() => <ChildButtonNewBoard textContent=\"Create\" />}\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default EditBoardForm;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 20px 14px;\n  opacity: 0.4;\n  scroll-snap-align: start;\n  opacity: 0.4;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 24px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n\n  &.active {\n    background-color: var(--sidebar-active-board-bg-color);\n    opacity: 1;\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      border-left: 4px solid var(--sidebar-border-left-color);\n      border-bottom-left-radius: 4px;\n      border-top-left-radius: 4px;\n    }\n  }\n`;\n\nexport const Svg = styled.svg`\n  fill: var(--sidebar-active-board-text-color);\n`;\n\nexport const Title = styled.p`\n  margin-left: 4px;\n  margin-right: auto;\n  color: var(--sidebar-active-board-text-color);\n  font-size: 14;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const ActiveSvg = styled.svg`\n  fill: var(--sidebar-inactive-icon-color);\n  transition: scale 250ms ease-in 0s, stroke 250ms ease-in 0s;\n  &:hover,\n  &:focus {\n    border: 1.5px solid var(--sidebar-active-icon-color);\n    fill: var(--sidebar-active-icon-color);\n    scale: 1.08;\n  }\n`;\n\nexport const IconButton = styled.button`\n  display: block;\n  width: 16px;\n  height: 16px;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const IconsWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport EditBoardForm from 'components/EditBoardForm/EditBoardForm';\n\nimport {\n  Svg,\n  Wrapper,\n  Title,\n  ActiveSvg,\n  IconsWrapper,\n  IconButton,\n} from './BoardButton.styled';\nimport {\n  deleteBoardByIdThunk,\n  getAllBoardsThunk,\n  getCurrentBoardThunk,\n} from 'redux/dashboards/thunks';\n\nfunction BoardButton({ name, id, icon }) {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  // const params = useParams();\n  const navigate = useNavigate();\n  const [active, setActive] = useState(false);\n  const [click] = useState(false);\n\n  // const openModal = () => {\n  //   setModalOpen(true);\n  // };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  // console.log(id);\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n  //   if (name.toString().toLowerCase() !== params.boardName) {\n  //     setActive(false);\n  //   }\n  //   if (name.toString().toLowerCase() === params.boardName) {\n  //     setActive(true);\n  //   }\n  // }, [dispatch, params.boardName, name]);\n\n  const handleActive = () => {\n    setActive(true);\n\n    const normalizeName = name.toLowerCase().replace(/[\\s/]+/g, '-');\n    dispatch(getCurrentBoardThunk(`${id}`));\n    navigate(normalizeName);\n  };\n\n  // const handleDelete = id => {\n  //   dispatch(deleteBoardByIdThunk(id));\n  //   setClick(true);\n  // };\n  // const handleOpenBoard = (id, title) => {\n  //   dispatch(getCurrentBoardThunk(id));\n  // const normalizedTitle = title.toLowerCase().replace(/\\s+/g, '-');\n  // navigate(normalizedTitle);\n  // };\n  const handleEditBoard = (e, boardId) => {\n    e.stopPropagation();\n    // console.log('handleEditBoard');\n    setModalOpen(true);\n    // Зупиняє подальше поширення кліку до обгортки\n    // Додайте код для редагування дошки з ID `boardId`\n  };\n\n  const handleDeleteBoard = (e, boardId) => {\n    e.stopPropagation();\n    dispatch(deleteBoardByIdThunk(boardId));\n  };\n\n  useEffect(() => {\n    if (click) {\n      navigate('/home');\n    }\n  }, [click, navigate]);\n\n  return (\n    <>\n      <Wrapper className={active ? 'active' : ''} onClick={handleActive}>\n        <Svg width=\"18px\" height=\"18px\">\n          <use href={sprite + `#${icon}`}></use>\n        </Svg>\n        <Title style={{ color: 'white' }}>{name}</Title>\n        {active && (\n          <IconsWrapper>\n            <IconButton type=\"button\" onClick={e => handleEditBoard(e, id)}>\n              <ActiveSvg width=\"16px\" height=\"16px\">\n                <use href={sprite + '#icon-pencil-01'}></use>\n              </ActiveSvg>\n              Edit\n            </IconButton>\n            <IconButton type=\"button\" onClick={e => handleDeleteBoard(e, id)}>\n              <ActiveSvg width=\"16px\" height=\"16px\">\n                <use href={sprite + '#icon-trash'}></use>\n              </ActiveSvg>\n              Delete\n            </IconButton>\n          </IconsWrapper>\n        )}\n      </Wrapper>\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <EditBoardForm onClose={closeModal} boardId={id} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default BoardButton;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  min-height: 61px;\n  margin-bottom: 40px;\n  height: calc(100vh - 611px);\n  scroll-behavior: smooth;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n\n  @media only screen and (min-width: 768px) {\n    height: calc(100vh - 646px);\n  }\n\n  &::-webkit-scrollbar {\n    width: 0px;\n  }\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useAllBoards } from 'components/hooks';\nimport BoardButton from 'components/BoardButton/BoardButton';\nimport { List } from './ButtonList.styled';\nimport {\n  getCurrentBoardThunk,\n  getAllBoardsThunk,\n} from 'redux/dashboards/thunks';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ButtonList() {\n  // const allBoards = useAllBoards();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const boards = useSelector(state => state.boards.boards);\n  // const boardID = useBoardId();\n  // const ref = useRef(null);\n  // const { onMouseDown } = useDraggable(ref, { direction: 'vertical' });\n\n  useEffect(() => {\n    // if (allBoards.length !== 0 && boardID) {\n    //   dispatch(getCurrentBoardThunk(boardID));\n    // }\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n  const handleOpenBoard = (id, title) => {\n    dispatch(getCurrentBoardThunk(id));\n\n    const normalizedTitle = title.toLowerCase().replace(/[\\s/]+/g, '-');\n    console.log('====================================');\n    console.log('normalizedTitle:', normalizedTitle);\n    console.log('====================================');\n\n    navigate(normalizedTitle);\n  };\n\n  return (\n    <>\n      <List>\n        {/* {boards.length !== 0 && */}\n        {boards.map(({ _id, title, icon, active }) => (\n          <BoardButton\n            key={_id}\n            name={title}\n            onClick={() => handleOpenBoard(_id, title)}\n            style={{ display: 'flex', justifyContent: 'space-between' }}\n            id={_id}\n            // icon={icon}\n            // isActive={active}s\n          />\n        ))}\n      </List>\n    </>\n  );\n}\n\nexport default ButtonList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AddBoardButton from 'components/AddBoardButton';\nimport { Title } from './BoardList.styled';\nimport {\n  // deleteBoardByIdThunk,\n  getAllBoardsThunk,\n  // getCurrentBoardThunk,\n} from 'redux/dashboards/thunks';\n// import { useAllBoards } from 'components/hooks';\n// import { useNavigate } from 'react-router-dom';\nimport ButtonList from 'components/ButtonList/ButtonList';\n\n// import EditBoardForm from 'components/EditBoardForm/EditBoardForm';\n// import Modal from 'components/Modal/Modal';\n\nfunction BoardList() {\n  // const allBoards = useAllBoards();\n  const dispatch = useDispatch();\n\n  // const navigate = useNavigate();\n  // const boards = useSelector(state => state.boards.boards);\n\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n  // const handleOpenBoard = (id, title) => {\n  //   dispatch(getCurrentBoardThunk(id));\n\n  //   const normalizedTitle = title.toLowerCase().replace(/\\s+/g, '-');\n  //   navigate(normalizedTitle);\n  // };\n\n  // const handleEditBoard = (e, boardId) => {\n  //   e.stopPropagation();\n  //   console.log('handleEditBoard'); // Зупиняє подальше поширення кліку до обгортки\n  //   // Додайте код для редагування дошки з ID `boardId`\n  // };\n\n  // const handleDeleteBoard = (e, boardId) => {\n  //   e.stopPropagation();\n  //   dispatch(deleteBoardByIdThunk(boardId));\n  // };\n\n  return (\n    <>\n      <Title>My boards</Title>\n      <AddBoardButton />\n      {/* {boards.map(({ _id, title }) => (\n        <div\n          key={_id}\n          onClick={() => handleOpenBoard(_id, title)}\n          style={{ display: 'flex', justifyContent: 'space-between' }}\n        >\n          <span style={{ color: 'white' }}>{title}</span>\n          <div>\n            <button onClick={e => handleEditBoard(e, _id)}>Edit</button>\n            <button onClick={e => handleDeleteBoard(e, _id)}>Delete</button>\n          </div>\n        </div>\n      ))} */}\n      <ButtonList />\n      {/* {boards.length !== 0 && <ButtonList />} */}\n    </>\n  );\n}\n\nexport default BoardList;\n","import styled from '@emotion/styled';\n\nexport const Span = styled.span`\nfont-family: Poppins;\ncolor: var(--primary-text-color);\nfont-size: 16px;\nfont-weight: 500;\n`;\n\nexport const LogOutBtn = styled.button(`\ndisplay: flex;\ngap: 14px;\njustify-content: left;\nalign-items: center;\nmargin-left: 24px;\nwidth: 305px;\nheight: 32px;\nbackground-color: transparent;\nborder: none;\n`);\n\nexport const Icon = styled.svg`\nwidth: 32px;\nheight: 32px;\nstroke: var(--sidebar-logout-icon-color);\ncursor: pointer;\n`;\n","import sprite from '../../images/sprite.svg';\nimport { LogOutBtn, Span, Icon } from './LogoutBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { LogOutThunk } from 'redux/auth/thunks';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n\n  function onClick() {\n    dispatch(LogOutThunk());\n  }\n\n  return (\n    <>\n      <LogOutBtn onClick={onClick}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-login`} />\n        </Icon>\n        <Span>Log out</Span>\n      </LogOutBtn>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nalign-self: center;\nbackground-color: var(--sidebar-active-board-bg-color);\nborder-radius: 8px;\nwidth: 197px;\nheight: 238px;\nmargin-bottom: 28px;\nmargin-left: auto;\nmargin-right: auto;\npadding: 15px;\n\n@media screen and (min-width: 768px) {\n    width: 212px;\n    height: 272px;\n    padding: 20px;\n    margin: auto 24px 28px 24px;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 150px;\nmargin-bottom: 19px;\ncolor: var(--primary-text-color);\nfont-size: 12px;\nline-height: 1.34;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {\n  font-size: 14px;\n  line-height: 1.4;\n  letter-spacing: -0.28px;\n}\n`;\n\nexport const Span = styled.span`\ncolor: var(--link-text-color);\n`;\n\nexport const Button = styled.button`\ncolor: var(--primary-text-color);\nwidth: 197px;\nfont-size: 12px;\nfont-weight: 500;\ndisplay: flex;\njustify-content: left;\nalign-items: center;\nheight: 20px;\nbackground-color: transparent;\nborder: none;\ngap: 8px;\npadding-bottom: 19px;\n`;\n\nexport const Svg = styled.svg`\nstroke: var(--sidebar-needhelp-icon-color);\n`;\n\nexport const Image = styled.img`\nmargin-bottom: 14px;\n`;\n\nexport const ButtonText = styled.span`\nfont-family: Poppins;\n// margin-left: 8px;\ncolor: var(--primary-text-color);\nfont-size: 12px;\nfont-weight: 500;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nwidth: 335px;\ncolor: var(--modal-bg-color);\n\n@media screen and (min-width: 768px) {\nwidth: 400px;\n}\n`;\n\nexport const Title = styled.h3`\nfont-size: 18px;\nfont-weight: 500;\ncolor: var(--modal-title-color);\nmargin-bottom: 24px;\n\n`;\n\nexport const Input = styled.input`\nfont-size: 14px;\nwidth: 302px;\nheight: 49px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\ncolor: var(--modal-primary-text-color);\nborder-radius: 8px;\nopacity: 0.4;\nmargin-bottom: 4px;\n&:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const Textarea = styled.textarea`\nfont-size: 14px;\nwidth: 302px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\nborder-radius: 8px;\ncolor: var(--modal-primary-text-color);\nopacity: 0.4;\nmin-height: 120px;\nmargin-bottom: 15px;\n\n&:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const ErrorMessage = styled.p`\ncolor: var(--modal-btn-text-color);\nmargin-bottom: 10px;\ntext-align: center;\n`;","import {  useDispatch } from 'react-redux';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport { Form, Input, Textarea, Title } from './NeedHelpForm.styled';\nimport { useState } from 'react';\nimport { SendLetterThunk } from 'redux/auth/thunks';\n\nconst NeedHelpForm = () => {\n  //   const dispatch = useDispatch();\n\n  //   const email='helenblyzniuk@gmail.com'\n  //   const text=\"need help\"\n\n  // dispatch(SendLetterThunk({email,text}))\n\n  const [emailValue, setEmailValueValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const dispatch = useDispatch();\n\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return regex.test(email);\n  };\n\n  const handleSubmit = () => {\n    if (validateEmail(emailValue)) {\n      dispatch(\n        SendLetterThunk({\n          email: emailValue,\n          comment: descriptionValue,\n        })\n      );\n      setEmailError('');\n    } else {\n      setEmailError('Invalid email address');\n    }\n  };\n\n  return (\n    <>\n      <Form action=''>\n        <Title>Need help</Title>\n\n        <Input \n          type=\"text\"\n          action=\"\"\n          placeholder=\"Email address\"\n          value={emailValue}\n          onChange={event => setEmailValueValue(event.target.value)} />\n\n        {emailError && <p>{emailError}</p>}\n\n        <Textarea \n          type=\"text\"\n          action=\"\"\n          placeholder=\"Comment\"\n          value={descriptionValue}\n          onChange={event => setDescriptionValue(event.target.value)}>\n        </Textarea>\n\n        <ButtonForForms type=\"submit\" onSubmit={handleSubmit} textButton={() => 'Send'} />\n      </Form>\n    </>\n  );\n};\nexport default NeedHelpForm;\n","import React, { useState } from 'react';\n\nimport sprite from '../../images/sprite.svg';\nimport {\n  Button,\n  ButtonText,\n  Container,\n  Image,\n  Span,\n  Svg,\n  Text,\n} from './NeedHelp.styled';\nimport Modal from 'components/Modal/Modal';\nimport NeedHelpForm from 'components/NeedHelpForm/NeedHelpForm';\n\nconst NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Image\n            src={require(\"images/flower.png\")}\n            alt=\"flower\"\n        />\n\n        <Text>\n          If you need help with <Span>TaskPro</Span>, check out our support\n          resources or reach out to our customer support team.\n        </Text>\n\n        <Button onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite +'#icon-help-circle'}></use>\n          </Svg>\n          <ButtonText> Need help? </ButtonText>\n        </Button>\n        \n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <NeedHelpForm />\n        </Modal>\n      </Container>\n    </>\n  );\n};\n\nexport default NeedHelp;","import styled from '@emotion/styled';\n\nexport const StyledWrapper = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\nmargin-bottom: 70px;\n\n@media screen and (min-width: 768px) {\n  margin-left: 24px;\n  margin-bottom: 60px;\n}\n&::before {\n  content: '';\n  width: 32px;\n  height: 32px;\n  background-color: var(--sidebar-logo--bg-color);\n  cursor: pointer;\n  border-radius: 8px;\n}\n`;\n\nexport const StyledLogo = styled.svg`\nfill: var(--sidebar-logo--icon-color);\nposition: absolute;\n\n`;\n\nexport const StyledSpanLogo = styled.span`\nfont-size: 16px;\nfont-style: normal;\nline-height: normal;\nfont-weight: 600;\nletter-spacing: -0.64px;\ncolor: var(--primary-text-color);\n`;\n","import sprite from 'images/sprite.svg';\nimport { StyledLogo, StyledWrapper, StyledSpanLogo } from './LogoComponent.styled';\n\nconst LogoComponent = () => {\n\n  return (\n      <StyledWrapper>\n        <StyledLogo width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logo-lightning`} />\n        </StyledLogo>\n        <StyledSpanLogo>Task Pro</StyledSpanLogo>\n      </StyledWrapper>\n  );\n};\n\nexport default LogoComponent;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 24px;\n  margin: 0;\n  background: var(--sidebar-bg-color);\n  transform: ${({ isOpen }) =>\n    isOpen ? 'translateX(0)' : 'translateX(-100%)'};\n  z-index: 100;\n  width: 260px;\n\n  // mobile\n\n  @media (max-width: 1439px) {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    transition: transform 500ms;\n  }\n`;\n","import BoardList from 'components/BoardList/BoardList';\nimport LogoutBtn from 'components/LogoutBtn/LogoutBtn';\nimport NeedHelp from 'components/NeedHelp/NeedHelp';\nimport LogoComponent from 'components/LogoComponent/LogoComponent';\nimport { Container } from './Sidebar.styled';\n\nfunction Sidebar({ isOpen }) {\n  return (\n    <Container className=\"sidebar\" isOpen={isOpen}>\n      <LogoComponent />\n      <BoardList />\n      <NeedHelp />\n      <LogoutBtn />\n    </Container>\n  );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Header from 'components/Header/Header';\n\n//-------vit--------\nimport NewDashboard from 'components/NewDashboard/NewDashboard';\nimport { selectCurrentBoard } from 'redux/dashboards/selectors';\n//-------vit--------\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { getAllBackgroundsThunk } from 'redux/dashboards/thunks';\nimport { useMediaQuery } from 'react-responsive';\n\nconst HomePage = () => {\n  // const user = useSelector(state => state.auth.user.theme);\n  const dispatch = useDispatch();\n  const [openedSidebar, setOpenedSidebar] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 1439 });\n\n  useEffect(() => {\n    const fetchBackgrounds = async () => {\n      try {\n        await dispatch(getAllBackgroundsThunk());\n      } catch (error) {\n        console.error('Помилка отримання фонів:', error);\n      }\n    };\n\n    fetchBackgrounds();\n  }, [dispatch]);\n\n  //-------vit--------\n  const currentBoard = useSelector(selectCurrentBoard);\n  //-------vit--------\n\n  useEffect(() => {\n    let timeoutId;\n\n    const handleOutsideClick = event => {\n      if (isMobile && openedSidebar) {\n        const sidebarElement = document.querySelector('.sidebar');\n        if (sidebarElement && !sidebarElement.contains(event.target)) {\n          setOpenedSidebar(false);\n        }\n      }\n    };\n\n    if (!isMobile) {\n      setOpenedSidebar(true);\n    }\n    if (openedSidebar) {\n      timeoutId = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [openedSidebar, isMobile]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <Sidebar isOpen={openedSidebar} />\n        <div\n          style={{\n            flexGrow: '1',\n            // height: '100vh',\n            // maxHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n\n            // backgroundColor: 'var(--screens-page-bg-color)', //-----vit------\n          }}\n        >\n          <Header openSidebar={setOpenedSidebar} />\n\n          {/* -------vit-------- */}\n          {currentBoard ? <Outlet /> : <NewDashboard />}\n          {/* -------vit-------- */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import * as Yup from 'yup';\n\nexport const authValidationSchema = Yup.object({\n  name: Yup.string().required('name is required').min(2).max(32),\n  email: Yup.string()\n    .required('email is required')\n    .email('Invalid email address'),\n  password: Yup.string().required('password is required').min(8).max(64),\n});\n\nexport const authLoginValidationSchema = Yup.object({\n  email: Yup.string()\n    .required('email is required')\n    .email('Invalid email address'),\n  password: Yup.string().required('password is required').min(8).max(64),\n});\n\nexport const UpdateUserSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    }),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters')\n    .matches(/^[a-zA-Z0-9]+$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    }),\n});\n"],"names":["TitleStyled","styled","children","Wrapper","AvatarWrapper","IconUser","AvatarImg","FileInputWrapper","FileInput","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","SendBtn","ErrorText","ErrorMessage","onClose","dispatch","useDispatch","useEffect","GetCurrentUserThunk","userData","useSelector","state","auth","user","console","log","useState","imageUrl","setImageUrl","imageFile","setImageFile","name","userName","setUserName","email","userEmail","setUserEmail","showPassword","setShowPassword","reader","FileReader","onload","event","target","result","readAsDataURL","onSubmit","e","preventDefault","elements","password","newUserData","value","avatar","UpdateUserThunk","id","initialValues","validationSchema","UpdateUserSchema","avatarURL","src","alt","width","height","href","sprite","type","onChange","files","accept","autoFocus","placeholder","component","className","onClick","stroke","closeModal","isOpen","Modal","custom","Container","UserName","AvasarSetin","IconAvatar","showModal","setShowModal","toggleModal","selectTheme","theme","IconBM","HeaderInfo","CustomSelect","CustomOptionList","props","open","CustomOption","selected","TheamBtn","IconDown","openSidebar","initialTheme","setTheme","useLayoutEffect","document","documentElement","setAttribute","useTheme","selectedTheme","setSelectedTheme","isCustomOptionListOpen","setCustomOptionListOpen","body","classList","add","remove","toggleCustomOptionList","UpdateThemeThunk","Section","InfoContainer","InfoText","InfoTextAccent","disabled","alert","ButtonForm","textButton","ContainerSvg","ChildButtonNewBoard","textContent","NewBoardTitle","Input","IconTitle","IconWrap","selectedIconStyle","css","Icon","BackgroundTitle","BgIcon","BackgroundItem","isActive","BackgroundImage","BasicBackground","timeoutId","useForm","mode","register","handleSubmit","setValue","errors","formState","selectedIcon","setSelectedIcon","backgrounds","boards","selectedBackground","setSelectedBackground","navigate","useNavigate","handleBackgroundSelect","backgroundId","toast","data","createNewBoardThunk","then","normalizedTitle","title","toLowerCase","replace","catch","error","required","newValue","toString","clearTimeout","setTimeout","message","map","icon","handleIconSelect","style","display","justifyContent","alignItems","backgroundItems","item","_id","previewURL","renderBackgrounds","Text","Button","isModalOpen","setModalOpen","Title","boardId","selectedBackgroundId","setSelectedBackgroundId","board","currentBoard","getCurrentBoardThunk","background","boardData","updateBoardByIdThunk","unwrap","response","ActiveSvg","IconButton","IconsWrapper","active","setActive","click","getAllBoardsThunk","normalizeName","color","stopPropagation","handleEditBoard","deleteBoardByIdThunk","handleDeleteBoard","List","handleOpenBoard","Span","LogOutBtn","LogOutThunk","Image","ButtonText","Form","Textarea","emailValue","setEmailValueValue","descriptionValue","setDescriptionValue","emailError","setEmailError","action","test","SendLetterThunk","comment","setIsModalOpen","require","StyledWrapper","StyledLogo","StyledSpanLogo","openedSidebar","setOpenedSidebar","isMobile","useMediaQuery","maxWidth","fetchBackgrounds","getAllBackgroundsThunk","selectCurrentBoard","handleOutsideClick","sidebarElement","querySelector","contains","addEventListener","removeEventListener","flexGrow","flexDirection","authValidationSchema","Yup","min","max","authLoginValidationSchema","shape","matches","excludeEmptyString"],"sourceRoot":""}