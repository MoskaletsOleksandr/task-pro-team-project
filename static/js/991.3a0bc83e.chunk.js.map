{"version":3,"file":"static/js/991.3a0bc83e.chunk.js","mappings":"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","sources":["components/ModalTitle/ModalTitle.styled.jsx","components/ModalTitle/ModalTitle.jsx","components/EditUser/EditUser.styled.js","components/EditUser/EditUser.jsx","components/ModalEditProfile/ModalEditProfile.jsx","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/ButtonForForms/ButtonForForms.styled.jsx","components/ButtonForForms/ButtonForForms.jsx","components/ButtonForForms/ChildButtonNewBoard.styled.jsx","components/ButtonForForms/ChildButtonNewBoard.jsx","components/NewBoard/NewBoard.styled.jsx","components/NewBoard/NewBoard.jsx","components/NewDashboard/NewDashBoard.styled.js","components/NewDashboard/NewDashboard.js","components/AddBoardButton/AddBoardButton.styled.jsx","components/AddBoardButton/AddBoardButton.jsx","components/BoardList/BoardList.styled.jsx","components/EditBoardForm/EditBoardForm.styled.jsx","components/EditBoardForm/EditBoardForm.jsx","components/BoardButton/BoardButton.styled.jsx","components/BoardButton/BoardButton.jsx","components/ButtonList/ButtonList.styled.jsx","components/ButtonList/ButtonList.jsx","components/BoardList/BoardList.jsx","components/LogoutBtn/LogoutBtn.styled.jsx","components/LogoutBtn/LogoutBtn.jsx","components/NeedHelp/NeedHelp.styled.jsx","components/NeedHelpForm/NeedHelpForm.styled.jsx","components/NeedHelpForm/NeedHelpForm.jsx","components/NeedHelp/NeedHelp.jsx","components/LogoComponent/LogoComponent.styled.jsx","components/LogoComponent/LogoComponent.js","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","pages/HomePages.js","validation/authValidation.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TitleStyled = styled.h2`\n  margin-bottom: 24px;\n  color: var(--modal-title-color);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.36px;\n`;\n","import { TitleStyled } from './ModalTitle.styled';\n\nconst ModalTitle = ({ children }) => {\n  return <TitleStyled>{children}</TitleStyled>;\n};\n\nexport default ModalTitle;\n","import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n  fill: #1f1f1f;\n  stroke: rgba(21, 21, 21, 1);\n`;\n\nexport const AvatarImg = styled.img`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n`;\n\nexport const FileInputWrapper = styled.label`\n  position: absolute;\n  bottom: -12px;\n  left: 50%;\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  transform: translateX(-50%);\n  color: #161616;\n  border-radius: 20%;\n  background-color: #bedbb0;\n  font-size: 18px;\n  font-size: 14px;\n  &:hover {\n    background-color: #9dc888;\n  }\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 24px;\n  gap: 14px;\n\n  input {\n    top: 107px;\n    left: 40px;\n    height: 49px;\n    padding-left: 18px;\n    opacity: 0.4;\n    color: #ffffff;\n    border: 1px solid #bedbb0;\n    border-radius: 8px;\n    outline: none;\n    background: #1f1f1f;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Svg = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const SendBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  cursor: pointer;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #161616;\n  border: none;\n  border-radius: 8px;\n  background: #bedbb0;\n  font-size: 14px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 21px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: #bedbb070;\n  font-size: 14px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Formik, Field } from 'formik';\n\nimport { UpdateUserSchema } from '../../validation/authValidation';\n\nimport {\n  GetCurrentUserThunk,\n  UpdateUserPhotoThunk,\n  UpdateUserThunk,\n} from 'redux/auth/thunks';\n\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  Wrapper,\n  AvatarWrapper,\n  FileInputWrapper,\n  IconUser,\n  AvatarImg,\n  Inputs,\n  FileInput,\n  PasswordView,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n  SendBtn,\n  ErrorText,\n} from './EditUser.styled';\n\nconst EditUser = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchCurrentUser = () => {\n      dispatch(GetCurrentUserThunk());\n    };\n\n    fetchCurrentUser();\n  }, [dispatch]);\n\n  const userData = useSelector(state => state.auth.user);\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [userName, setUserName] = useState(userData.name);\n  const [userEmail, setUserEmail] = useState(userData.email);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  useEffect(() => {\n    if (userData.photo) {\n      setImageUrl(userData.photo);\n    }\n    if (imageFile) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setImageUrl(event.target.result);\n      };\n      reader.readAsDataURL(imageFile);\n    }\n  }, [imageFile, userData.photo]);\n\n  const handleFileChange = event => {\n    setImageFile(event.target.files[0]);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    const {\n      // name, email,\n      password,\n    } = e.target.elements;\n\n    const newUserData = {\n      name: userName,\n      email: userEmail,\n    };\n\n    if (password.value) {\n      newUserData.password = password.value;\n    }\n    // if (imageFile) {\n    //   newUserData.photo = imageFile;\n    // }\n\n    dispatch(UpdateUserThunk({ userData: newUserData }));\n    dispatch(UpdateUserPhotoThunk(imageFile));\n\n    onClose();\n  };\n\n  return (\n    <>\n      <form onSubmit={formSubmit}>\n        <Formik\n          initialValues={{\n            name: userName,\n            email: userEmail,\n            password: '',\n          }}\n          validationSchema={UpdateUserSchema}\n        >\n          <Wrapper>\n            <AvatarWrapper>\n              {!imageUrl && !userData.avatarURL ? (\n                <IconUser>\n                  <use href={`${sprite}#icon-avatar`}></use>\n                </IconUser>\n              ) : (\n                <AvatarImg\n                  src={imageUrl || userData.avatarURL}\n                  alt=\"avatar\"\n                  width={68}\n                  height={68}\n                />\n              )}\n\n              <FileInputWrapper>\n                <FileInput\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  accept=\"image/jpeg, image/png, image/gif\"\n                />\n                +\n              </FileInputWrapper>\n            </AvatarWrapper>\n\n            <Inputs>\n              <Field\n                autoFocus\n                name=\"name\"\n                type=\"text\"\n                value={userName}\n                onChange={e => setUserName(e.target.value)}\n              />\n              <Field\n                name=\"email\"\n                type=\"email\"\n                value={userEmail}\n                onChange={e => setUserEmail(e.target.value)}\n              />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={onPasswordVisible}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={`${sprite}#icon-eye-hide`} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n\n            <SendBtn type=\"submit\">Send</SendBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </>\n  );\n};\n\nexport default EditUser;\n","import React from 'react';\n\nimport Modal from 'components/Modal';\nimport ModalTitle from 'components/ModalTitle';\nimport EditUser from 'components/EditUser';\n\nconst ModalEditProfile = ({ closeModal, isOpen }) => {\n  return (\n    <Modal onClose={closeModal} isOpen={isOpen} custom={true}>\n      <ModalTitle>Edit profile</ModalTitle>\n      <EditUser onClose={closeModal} />\n    </Modal>\n  );\n};\n\nexport default ModalEditProfile;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 14px;\n`;\n\nexport const UserName = styled.div`\n  color: var(--header-name-color);\n`;\n\nexport const AvasarSetin = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const IconAvatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  border: 1px solid var(--header-theme-select-border-color);\n  border-radius: 8px;\n  fill: var(--header-user-fill);\n  stroke: var(--header-user-stroke);\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n\nexport const Name = styled.p`\n  font-weight: medium;\n`;\n","import React, { useState } from 'react';\nimport ModalEditProfile from 'components/ModalEditProfile';\nimport sprite from '../../images/sprite.svg';\nimport {\n  UserName,\n  IconAvatar,\n  Container,\n  AvasarSetin,\n  AvatarImg,\n  Name,\n} from './UserInfo.styled';\nimport { useSelector } from 'react-redux';\n\nconst UserInfo = () => {\n  const [showModal, setShowModal] = useState(false);\n  const user = useSelector(state => state.auth.user);\n\n  // const parsedUser = JSON.parse(user);\n  const { name, photo } = user;\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Container>\n      <UserName>\n        <Name>{name}</Name>\n      </UserName>\n      <AvasarSetin onClick={toggleModal}>\n        {photo ? (\n          <AvatarImg src={photo} />\n        ) : (\n          <IconAvatar>\n            <use href={`${sprite}#icon-avatar`}></use>\n          </IconAvatar>\n        )}\n        {showModal && (\n          <ModalEditProfile closeModal={toggleModal} isOpen={showModal} />\n        )}\n      </AvasarSetin>\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 68px;\n  padding-right: 24px;\n  color: var(--header-theme-select-text-color);\n  background-color: var(--header-bg-color);\n\n  @media (max-width: 767px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media (max-width: 1439px) {\n    padding-left: 20px;\n    padding-right: 32px;\n  }\n`;\n\nexport const IconBM = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--header-name-color);\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CustomSelect = styled.div`\n  position: relative;\n`;\n\nexport const CustomOptionList = styled.ul`\n  position: absolute;\n  display: ${props => (props.open ? 'block' : 'none')};\n  top: 20px;\n  left: -105px;\n  margin: 0;\n  padding: 18px 44px 18px 18px;\n  list-style: none;\n  border: solid 1px var(--header-theme-select-border-color);\n  border-radius: 8px;\n  background-color: var(--header-theme-select-bg-color);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  z-index: 1;\n`;\n\nexport const CustomOption = styled.li`\n  padding: 5px 10px;\n  cursor: pointer;\n  color: var(--header-theme-select-text-color);\n\n  &:hover {\n    color: var(--header-theme-select-text-color-hover);\n  }\n\n  ${props =>\n    props.selected &&\n    `\n      color: var(--header-theme-select-text-color-hover)\n    `}\n`;\n\nexport const TheamBtn = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  /* &:hover {\n    padding: 5px;\n    box-shadow: 0px 6px 7px -5px #9dc888;\n  } */\n`;\n\nexport const IconDown = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  fill: transparent;\n  stroke: var(--header-theme-select-text-color);\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { UpdateThemeThunk } from 'redux/auth/thunks';\n\nimport {\n  Container,\n  IconBM,\n  HeaderInfo,\n  CustomSelect,\n  CustomOption,\n  CustomOptionList,\n  IconDown,\n  TheamBtn,\n} from './Header.styled';\n\nimport sprite from '../../images/sprite.svg';\n\nconst Header = ({ openSidebar }) => {\n  const theme = useSelector(state => state.auth.user.theme);\n  const [isCustomOptionListOpen, setCustomOptionListOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.body.classList.add(theme);\n    return () => {\n      document.body.classList.remove(theme);\n    };\n  }, [theme]);\n\n  const toggleCustomOptionList = () => {\n    setCustomOptionListOpen(!isCustomOptionListOpen);\n  };\n\n  const handleThemeClick = selectedTheme => {\n    dispatch(UpdateThemeThunk({ theme: selectedTheme }));\n    toggleCustomOptionList();\n  };\n\n  return (\n    <Container>\n      <div\n        onClick={() => {\n          openSidebar(true);\n        }}\n      >\n        <IconBM>\n          <use href={`${sprite}#icon-menu`}></use>\n        </IconBM>\n      </div>\n\n      <HeaderInfo>\n        <TheamBtn onClick={toggleCustomOptionList}>\n          Theme\n          <IconDown>\n            <use href={`${sprite}#icon-chevron-down`}></use>\n          </IconDown>\n        </TheamBtn>\n\n        <CustomSelect theme={theme}>\n          <CustomOptionList open={isCustomOptionListOpen}>\n            <CustomOption\n              onClick={() => handleThemeClick('light')}\n              selected={theme === 'light'}\n            >\n              Light\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleThemeClick('dark')}\n              selected={theme === 'dark'}\n            >\n              Dark\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleThemeClick('violet')}\n              selected={theme === 'violet'}\n            >\n              Violet\n            </CustomOption>\n          </CustomOptionList>\n        </CustomSelect>\n\n        <UserInfo />\n      </HeaderInfo>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nexport const ButtonForm = styled.button`\nwidth: 302px;\nheight: 49px;\npadding: 10px 0 11px;\nborder-radius: 8px;\nborder: none;\n// margin: 0 auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: var(--modal-btn-bg-color);\ncolor: var(--modal-btn-text-color);\nfont-family: Poppins;\nfont-size: 14px;\nfont-weight: 500;\ntext-align: center;\n// transition: scale 250ms ease-in 0s;\n\n&:hover,\n&focus {\n// scale: 1.05;\nbackground-color: var(--modal-btn-bg-color-hover);\n}\n`;\n","import { ButtonForm } from './ButtonForForms.styled';\n\nfunction ButtonForForms ({ textButton }) {\n  return (\n    <>\n      <ButtonForm type=\"submit\"> {textButton()}\n      </ButtonForm>\n    </>\n  );\n}\n\nexport default ButtonForForms;","import styled from '@emotion/styled';\n\nexport const ContainerSvg = styled.button`\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  border: none;\n  background-color: var(--modal-plus-btn-bg-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  text-align: center;\n\n  & + p {\n    color: var(--modal-btn-text-color);\n    letter-spacing: -0.28px;\n  }\n`;\nexport const Svg = styled.svg`\nstroke: var(--modal-selected-plus-color);\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerSvg, Svg } from './ChildButtonNewBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport default function ChildButtonNewBoard({ textContent }) {\n  return (\n    <>     \n      <ContainerSvg>\n        <Svg width=\"28px\" height=\"28px\">\n          <use href={sprite + '#icon-plus'}></use>\n        </Svg>\n      </ContainerSvg>\n\n      <p>{textContent}</p>\n    </>\n  );\n}\n\nChildButtonNewBoard.propTypes = {\n  textContent: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const NewBoardTitle = styled.h2`\n  width: 96px;\n  margin: 0 0 24px 0;\n  height: 27px;\n  left: 24px;\n  top: 24px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const ErrorMessage = styled.p`\n  color: var(--modal-title-color);\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  margin: 0 0 24px 0;\n  width: 287px;\n  height: 49px;\n  padding-left: 20px;\n  background: transparent;\n  opacity: 0.4;\n  border: 1px solid var(--modal-input-border-color);\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n  color: var(--modal-title-color);\n\n  &::placeholder {\n    width: 28px;\n    height: 21px;\n    left: 18px;\n    top: 14px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    color: var(-modal-input-placeholder-color);\n  }\n\n  &:not(:placeholder-shown) {\n    opacity: 1;\n    color: var(--modal-title-color);\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const IconTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const IconWrap = styled.div`\n  margin: 0 0 24px 0;\n`;\n\nconst selectedIconStyle = css`\n  stroke: var(--modal-selected-icon-color);\n`;\n\nexport const Icon = styled.svg`\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n  background-color: var(--modal-button-plus-bg-color);\n  ${props => props.selected === true && selectedIconStyle};\n  &:hover {\n    stroke: var(--modal-selected-icon-color);\n  }\n`;\n\nexport const BackgroundTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const BgIcon = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 260px;\n  gap: 4px;\n  margin-bottom: 40px;\n`;\n\nexport const BackgroundItem = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s;\n  background-color: var(--sidebar-active-board-bg-color);\n  filter: ${({ isActive }) => (isActive ? 'grayscale(100%)' : 'none')};\n  filter: ${({ isActive }) => (isActive ? 'brightness(30%)' : 'none')};\n  border-radius: 6px;\n  overflow: hidden;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const BackgroundImage = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const BasicBackground = styled.svg`\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../images/sprite.svg';\nimport { createNewBoardThunk } from 'redux/dashboards/thunks';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport ChildButtonNewBoard from 'components/ButtonForForms/ChildButtonNewBoard';\nimport { toast } from 'react-hot-toast';\nimport {\n  NewBoardTitle,\n  IconTitle,\n  IconWrap,\n  Icon,\n  BackgroundTitle,\n  BgIcon,\n  BackgroundItem,\n  BackgroundImage,\n  Input,\n  ErrorMessage,\n  BasicBackground,\n} from './NewBoard.styled';\nimport { useNavigate } from 'react-router-dom';\n\nconst NewBoard = ({ onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n  });\n  const [selectedIcon, setSelectedIcon] = useState('');\n  const backgrounds = useSelector(state => state.boards.backgrounds);\n  const [selectedBackground, setSelectedBackground] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  let timeoutId;\n\n  const handleTitleChange = event => {\n    const newValue = event.target.value.toString();\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      try {\n        setValue('title', newValue);\n      } catch {\n        toast.error('Error changing title');\n      }\n    }, 1500);\n  };\n\n  const handleIconSelect = icon => {\n    try {\n      setSelectedIcon(icon);\n      setValue('icon', icon);\n    } catch {\n      toast.error('Error occurred while selecting the icon');\n    }\n  };\n\n  const handleBackgroundSelect = backgroundId => {\n    try {\n      setSelectedBackground(backgroundId);\n      setValue('background', backgroundId);\n    } catch {\n      toast.error('Error selecting background');\n    }\n  };\n\n  const handleCreateBoard = data => {\n    if (!data.title) {\n      toast.error('Title is required');\n      return;\n    }\n\n    if (!data.icon) {\n      toast.error('Icon is required');\n      return;\n    }\n\n    if (!data.background) {\n      toast.error('Background is required');\n      return;\n    }\n\n    dispatch(createNewBoardThunk(data))\n      .then(() => {\n        const normalizedTitle = data.title.toLowerCase().replace(/\\s+/g, '-');\n        navigate(normalizedTitle);\n        setValue('title', '');\n        setValue('icon', '');\n        setValue('background', '');\n        onClose();\n      })\n      .catch(error => {\n        toast.error('Error occurred while creating the board');\n      });\n  };\n\n  const renderIcons = () => {\n    const icons = [\n      'icon-Project',\n      'icon-star',\n      'icon-loading',\n      'icon-puzzle-piece',\n      'icon-container',\n      'icon-lightning-icon',\n      'icon-colors',\n      'icon-hexagon',\n    ];\n\n    return icons.map(icon => (\n      <Icon\n        key={icon}\n        selected={selectedIcon === icon}\n        onClick={() => handleIconSelect(icon)}\n      >\n        <use href={`${sprite}#${icon}`} />\n      </Icon>\n    ));\n  };\n\n  const renderBackgrounds = () => {\n    const placeholder = (\n      <BackgroundItem\n        key=\"null\"\n        isActive={selectedBackground === 'null'}\n        onClick={() => handleBackgroundSelect('null')}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '28px',\n            height: '28px',\n          }}\n        >\n          <BasicBackground style={{ width: '16px', height: '16px' }}>\n            <use href={sprite + '#null-background'}></use>\n          </BasicBackground>\n        </div>\n      </BackgroundItem>\n    );\n\n    const backgroundItems = backgrounds.map(item => (\n      <BackgroundItem\n        key={item.previewURL}\n        isActive={selectedBackground === item._id}\n        onClick={() => handleBackgroundSelect(item._id)}\n      >\n        <BackgroundImage src={item.previewURL} alt=\"Background\" />\n      </BackgroundItem>\n    ));\n\n    return [placeholder, ...backgroundItems];\n  };\n\n  return (\n    <div>\n      <NewBoardTitle>New Board</NewBoardTitle>\n      <form onSubmit={handleSubmit(handleCreateBoard)}>\n        <Input\n          id=\"newBoardInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          {...register('title', { required: 'Title is required' })}\n          onChange={handleTitleChange}\n        />\n        <ErrorMessage>{errors.title?.message}</ErrorMessage>\n\n        <IconTitle>Icons</IconTitle>\n        <IconWrap>{renderIcons()}</IconWrap>\n        <ErrorMessage>{errors.icon?.message}</ErrorMessage>\n\n        <BackgroundTitle>Background</BackgroundTitle>\n        <BgIcon>{renderBackgrounds()}</BgIcon>\n        <ErrorMessage>{errors.background?.message}</ErrorMessage>\n\n        <ButtonForForms\n          textButton={() => <ChildButtonNewBoard textContent=\"Create\" />}\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default NewBoard;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 0px 24px;\n  background-color: var(--screens-page-bg-color);\n`;\n\nexport const InfoContainer = styled.div`\n  height: calc(100vh - 102px);\n  widows: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  font-family: Poppins;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  text-align:center;\n  color: var(--new-dashboadr-text-color);\n`;\n\nexport const InfoTextAccent = styled.span`\n  color: var(--new-dashboadr-text-accent-color);\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport CreateNewBoard from 'components/NewBoard/NewBoard';\nimport {\n  Section,\n  InfoText,\n  InfoTextAccent,\n  InfoContainer,\n} from './NewDashBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  BtnFilters,\n  SvgIconFilters,\n} from '../MainDashboard/MainDashboard.styled';\n\n\n  \n\nconst NewDashboard = () => {\n  const handleFilters = e => {\n    alert('Handel Button Filters');\n  };\n\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Section >\n      <BtnFilters type=\"submit\" disabled={true} onClick={handleFilters}>\n        <SvgIconFilters>\n          + <use href={sprite + '#icon-filter'}></use>\n        </SvgIconFilters>\n        Filter\n      </BtnFilters>\n\n      <InfoContainer>\n        <InfoText>\n          Before starting your project, it is essential\n          <InfoTextAccent onClick={openModal}> to create a board </InfoTextAccent>to visualize and\n          track all the necessary tasks and milestones. This board serves as a\n          powerful tool to organize the workflow and ensure effective\n          collaboration among team members.\n        </InfoText>\n      </InfoContainer>\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <CreateNewBoard onClose={closeModal} />\n        </Modal>\n      )}\n    </Section>\n  );\n};\nexport default NewDashboard;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 87.6%;\nheight: 70px;\n// margin-left: 14px;\nmargin-bottom: 40px;\npadding: 14px 4px 14px 0;\nborder-top: 1px solid rgba(255, 255, 255, 0.1);\nborder-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\nmargin-left: 14px;\n@media screen and (min-width: 768px) {\n  margin-left: 24px;\n}\nwidth: 81.5%;\n// padding: 14px 0;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 76px;\ncolor: var(--primary-text-color);\nfont-size: 14px;\nfont-weight: 500;\nletter-spacing: -0.28px;\n`;\n\nexport const Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 40px;\nheight: 36px;\nbackground-color: var(--sidebar-button-plus-bg-color);\nborder-radius: 6px;\nborder: none;\n\n&:hover,\n&:focus {\nscale: 1.05;\nbackground-color: var(--modal-btn-bg-color-hover);\n}\n`;\n\nexport const Svg = styled.svg`\nstroke: var(--sidebar-button-plus-icon-color);\n`;\n\n","import { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport CreateNewBoard from 'components/NewBoard/NewBoard';\nimport { Wrapper, Text, Button, Svg } from './AddBoardButton.styled';\n\nfunction AddBoardButton() {\n  const [isModalOpen, setModalOpen] = useState(false);\n  \n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Text>Create a new board</Text>\n        <Button type=\"button\" onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus'}></use>\n          </Svg>\n        </Button>\n      </Wrapper>\n\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <CreateNewBoard onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default AddBoardButton;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nmargin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\nmargin-left: 14px;\nmargin-bottom: 8px;\nalign-self: flex-start;\ncolor: var(--secondary-text-color);\nfont-size: 12px;\nfont-weight: 400;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {  \n  margin-left: 24px;\n}\n`;\n\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const NewBoardTitle = styled.h2`\n  margin: 0 0 24px 0;\n  width: 96px;\n  height: 27px;\n  left: 24px;\n  top: 24px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--modal-primary-text-color);\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  margin: 0 0 24px 0;\n  width: 287px;\n  height: 49px;\n  padding-left: 20px;\n  background: transparent;\n  opacity: 0.4;\n  border: 1px solid #bedbb0;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n  color: var(--modal-input-text-color);\n\n  &::placeholder {\n    width: 28px;\n    height: 21px;\n    left: 18px;\n    top: 14px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    color: #bedbb0;\n  }\n\n  &:not(:placeholder-shown) {\n    opacity: 1;\n    color: var(--modal-input-text-color);\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const IconTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const IconWrap = styled.div`\n  margin: 0 0 24px 0;\n`;\nconst selectedIconStyle = css`\n  stroke: var(--modal-selected-icon-color);\n`;\n\nexport const Icon = styled.svg`\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n  background-color: var(--modal-button-plus-bg-color);\n\n  ${props => props.selected === true && selectedIconStyle};\n\n  &:hover {\n    stroke: var(--modal-selected-icon-color);\n  }\n`;\n\nexport const BackgroundTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const BgIcon = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 260px;\n  gap: 4px;\n  margin-bottom: 40px;\n`;\n\nexport const BackgroundItem = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s;\n  background-color: var(--sidebar-active-board-bg-color);\n  filter: ${({ isActive }) => (isActive ? 'grayscale(100%)' : 'none')};\n  filter: ${({ isActive }) => (isActive ? 'brightness(30%)' : 'none')};\n  border-radius: 6px;\n  overflow: hidden;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const BackgroundImage = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const BasicBackground = styled.svg`\n  stroke: var(--modal-icon-color);\n  fill: transparent;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  getCurrentBoardThunk,\n  updateBoardByIdThunk,\n} from 'redux/dashboards/thunks';\nimport sprite from '../../images/sprite.svg';\n// import { useBoardData } from 'components/hooks';\nimport ChildButtonNewBoard from 'components/ButtonForForms/ChildButtonNewBoard';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  NewBoardTitle,\n  IconTitle,\n  IconWrap,\n  Icon,\n  BackgroundTitle,\n  BgIcon,\n  BackgroundItem,\n  BackgroundImage,\n  Input,\n  BasicBackground,\n} from './EditBoardForm.styled';\n\nconst EditBoardForm = ({ onClose, boardId }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    // formState: { errors },\n  } = useForm();\n  const [selectedIcon, setSelectedIcon] = useState('');\n  const [selectedBackgroundId, setSelectedBackgroundId] = useState('');\n  const backgrounds = useSelector(state => state.boards.backgrounds);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const board = useSelector(state => state.boards.currentBoard);\n\n  useEffect(() => {\n    dispatch(getCurrentBoardThunk(boardId));\n  }, [dispatch, boardId]);\n\n  useEffect(() => {\n    setValue('title', board.title);\n    setSelectedIcon(board.icon);\n    setSelectedBackgroundId(board.background);\n  }, [board.title, board.background, board.icon, setValue]);\n\n  let timeoutId;\n  const handleTitleChange = event => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      try {\n        setValue('title', event.target.value);\n      } catch {\n        toast.error('Error changing title');\n      }\n    }, 1500);\n  };\n\n  const handleIconSelect = icon => {\n    try {\n      setSelectedIcon(icon);\n      setValue('icon', icon);\n    } catch {\n      toast.error('Error occurred while selecting the icon');\n    }\n  };\n\n  const handleBackgroundSelect = backgroundId => {\n    try {\n      setSelectedBackgroundId(backgroundId);\n      setValue('selectedBackgroundId', backgroundId);\n    } catch {\n      toast.error('Error selecting background');\n    }\n  };\n\n  const handleEditBoardForm = data => {\n    const boardData = {\n      id: board._id,\n      body: {\n        title: data.title,\n        icon: selectedIcon, // Використовуємо вибрану іконку зі стану selectedIcon\n        background: data.selectedBackgroundId\n          ? data.selectedBackgroundId\n          : selectedBackgroundId._id,\n      },\n    };\n\n    dispatch(updateBoardByIdThunk(boardData))\n      .unwrap()\n      .then(response => {\n        setValue('title', data.title);\n        setValue('icon', '');\n        setValue('selectedIcon', data.icon);\n        setValue('selectedBackground', data.selectedBackgroundId);\n        onClose();\n      })\n      .catch(error => {\n        toast.error('No fields to update');\n        console.error('Error:', error);\n      });\n\n    navigate(`${data.title.toLowerCase()}`);\n  };\n\n  const renderIcons = () => {\n    const icons = [\n      'icon-Project',\n      'icon-star',\n      'icon-loading',\n      'icon-puzzle-piece',\n      'icon-container',\n      'icon-lightning-icon',\n      'icon-colors',\n      'icon-hexagon',\n    ];\n\n    return icons.map(icon => (\n      <Icon\n        key={icon}\n        selected={selectedIcon === icon}\n        onClick={() => handleIconSelect(icon)}\n      >\n        <use href={`${sprite}#${icon}`} />\n      </Icon>\n    ));\n  };\n\n  const renderBackgrounds = () => {\n    const placeholder = (\n      <BackgroundItem\n        key=\"null-background\"\n        isActive={selectedBackgroundId === 'null-background'}\n        onClick={() => handleBackgroundSelect('null-background')}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '28px',\n            height: '28px',\n          }}\n        >\n          <BasicBackground style={{ width: '16px', height: '16px' }}>\n            <use href={sprite + '#null-background'}></use>\n          </BasicBackground>\n        </div>\n      </BackgroundItem>\n    );\n    const backgroundItems = backgrounds.map(item => (\n      <BackgroundItem\n        key={item.previewURL}\n        isActive={selectedBackgroundId === item._id}\n        onClick={() => handleBackgroundSelect(item._id)}\n      >\n        <BackgroundImage src={item.previewURL} alt=\"Background\" />\n      </BackgroundItem>\n    ));\n    return [placeholder, ...backgroundItems];\n  };\n\n  return (\n    <div>\n      <NewBoardTitle>Edit Board</NewBoardTitle>\n\n      <form onSubmit={handleSubmit(handleEditBoardForm)}>\n        <Input\n          id=\"newBoardInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          {...register('title', { required: 'Title is required' })}\n          onChange={handleTitleChange}\n        />\n        <IconTitle>Icons</IconTitle>\n        <IconWrap>{renderIcons()}</IconWrap>\n\n        <BackgroundTitle>Background</BackgroundTitle>\n        <BgIcon>{renderBackgrounds()}</BgIcon>\n        <ButtonForForms\n          textButton={() => <ChildButtonNewBoard textContent=\"Edit\" />}\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default EditBoardForm;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 20px 14px;\n  opacity: 0.4;\n  scroll-snap-align: start;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 24px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n\n  &.active {\n    background-color: var(--sidebar-active-board-bg-color);\n    opacity: 1;\n  \n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      border-left: 4px solid var(--sidebar-border-left-color);\n      border-bottom-left-radius: 4px;\n      border-top-left-radius: 4px;\n    }\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: var(--icon-stroke);\n  fill:var(--sidebar-active-board-bg-color);\n  opacity:1;\n`;\n\nexport const Title = styled.p`\n  margin-right: auto;\n  text-transform: capitalize;\n  color: var(--sidebar-active-board-text-color);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-left: 14px;\n  @media screen and (min-width: 768px) {\n    margin-left: 24px;\n  }\n`;\n\nexport const ActiveSvg = styled.svg`\n  stroke: var(--sidebar-inactive-icon-color);\n  fill:var(--sidebar-active-board-bg-color);\n  &:hover,\n  &:focus {\n     stroke: var(--progress-popup-text-color-hover);\n     cursor:pointer;\n  }\n`;\n\nexport const IconButton = styled.button`\n  display: block;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const IconsWrapper = styled.div`\n  display: flex;\n  align-items:center;\n  gap: 8px;\n`;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport EditBoardForm from 'components/EditBoardForm/EditBoardForm';\n\nimport {\n  Svg,\n  Wrapper,\n  Title,\n  ActiveSvg,\n  IconsWrapper,\n  IconButton,\n} from './BoardButton.styled';\nimport {\n  deleteBoardByIdThunk,\n  getCurrentBoardThunk,\n} from 'redux/dashboards/thunks';\n\nfunction BoardButton({ name, id, icon, active, onClick, onEdit, onDelete, onClose }) {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const closeModal = () => {\n    setModalOpen(false);\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const handleActive = () => {\n    if (onClick) {\n      onClick(id);\n    }\n    const normalizeName = name.toLowerCase().replace(/[\\s/]+/g, '-');\n    dispatch(getCurrentBoardThunk(`${id}`));\n    if (normalizeName && onClose) {\n      onClose(normalizeName);\n    }\n  };\n\n  const handleEditBoard = (e, boardId) => {\n    e.stopPropagation();\n    setModalOpen(true);\n    if (onEdit) {\n      onEdit(boardId);\n    }\n  };\n\n  const handleDeleteBoard = (e, boardId) => {\n    e.stopPropagation();\n    dispatch(deleteBoardByIdThunk(boardId));\n    if (onDelete) {\n      onDelete(boardId);\n    }\n  };\n\n\n  return (\n    <>\n      <Wrapper className={active ? 'active' : ''} onClick={handleActive}>\n        <Svg width=\"18px\" height=\"18px\">\n          <use href={`${sprite}#${icon}`}></use>\n        </Svg>\n        <Title>{name}</Title>\n        {active && (\n          <IconsWrapper>\n            <IconButton type=\"button\" onClick={e => handleEditBoard(e, id)}>\n              <ActiveSvg width=\"16px\" height=\"16px\">\n                <use href={sprite + '#icon-pencil-01'}></use>\n              </ActiveSvg>\n            </IconButton>\n            <IconButton type=\"button\" onClick={e => handleDeleteBoard(e, id)}>\n              <ActiveSvg width=\"16px\" height=\"16px\">\n                <use href={sprite + '#icon-trash'}></use>\n              </ActiveSvg>\n            </IconButton>\n          </IconsWrapper>\n        )}\n      </Wrapper>\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <EditBoardForm onClose={closeModal} boardId={id} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default BoardButton;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  min-height: 61px;\n  margin-bottom: 40px;\n  height: calc(100vh - 611px);\n  scroll-behavior: smooth;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n\n  @media only screen and (min-width: 768px) {\n    height: calc(100vh - 646px);\n  }\n\n  &::-webkit-scrollbar {\n    width: 0px;\n  }\n`;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BoardButton from 'components/BoardButton/BoardButton';\nimport { List } from './ButtonList.styled';\nimport { getCurrentBoardThunk, getAllBoardsThunk } from 'redux/dashboards/thunks';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ButtonList() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const boards = useSelector(state => state.boards.boards);\n\n  const [activeBoardId, setActiveBoardId] = useState(null);\n\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n  const handleOpenBoard = (id, title) => {\n    dispatch(getCurrentBoardThunk(id));\n    const normalizedTitle = title.toLowerCase().replace(/[\\s/]+/g, '-');\n    navigate(normalizedTitle);\n    setActiveBoardId(id); \n  };\n\n  return (\n    <>\n      <List>\n        {boards.map(({ _id, title, icon }) => (\n          <BoardButton\n            key={_id}\n            name={title}\n            onClick={() => handleOpenBoard(_id, title)}\n            style={{ display: 'flex', justifyContent: 'space-between' }}\n            id={_id}\n            active={_id === activeBoardId} \n            icon={icon}\n          />\n        ))}\n      </List>\n    </>\n  );\n}\n\nexport default ButtonList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AddBoardButton from 'components/AddBoardButton';\nimport { Title } from './BoardList.styled';\nimport {\n  getAllBoardsThunk,\n} from 'redux/dashboards/thunks';\nimport ButtonList from 'components/ButtonList/ButtonList';\n\nfunction BoardList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title>My boards</Title>\n      <AddBoardButton />\n      <ButtonList />\n    </>\n  );\n}\n\nexport default BoardList;\n","import styled from '@emotion/styled';\n\nexport const Span = styled.span`\nfont-family: Poppins;\ncolor: var(--primary-text-color);\nfont-size: 16px;\nfont-weight: 500;\n`;\n\nexport const LogOutBtn = styled.button(`\ndisplay: flex;\ngap: 14px;\njustify-content: left;\nalign-items: center;\nmargin-left: 24px;\nwidth: 305px;\nheight: 32px;\nbackground-color: transparent;\nborder: none;\n`);\n\nexport const Icon = styled.svg`\nwidth: 32px;\nheight: 32px;\nstroke: var(--sidebar-logout-icon-color);\ncursor: pointer;\n`;\n","import sprite from '../../images/sprite.svg';\nimport { LogOutBtn, Span, Icon } from './LogoutBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { LogOutThunk } from 'redux/auth/thunks';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n\n  function onClick() {\n    dispatch(LogOutThunk());\n  }\n\n  return (\n    <>\n      <LogOutBtn onClick={onClick}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-login`} />\n        </Icon>\n        <Span>Log out</Span>\n      </LogOutBtn>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nalign-self: center;\nbackground-color: var(--sidebar-active-board-bg-color);\nborder-radius: 8px;\nwidth: 197px;\nheight: 238px;\nmargin-bottom: 28px;\nmargin-left: 24px;\nmargin-right: 24px;\npadding: 15px;\n\n@media screen and (min-width: 768px) {\n    width: 212px;\n    height: 272px;\n    padding: 20px;\n    margin: auto 24px 28px 24px;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 150px;\nmargin-bottom: 19px;\ncolor: var(--primary-text-color);\nfont-size: 12px;\nline-height: 1.34;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {\n  font-size: 14px;\n  line-height: 1.4;\n  letter-spacing: -0.28px;\n}\n`;\n\nexport const Span = styled.span`\ncolor: var(--link-text-color);\n`;\n\nexport const Button = styled.button`\ncolor: var(--primary-text-color);\nwidth: 197px;\nfont-size: 12px;\nfont-weight: 500;\ndisplay: flex;\njustify-content: left;\nalign-items: center;\nheight: 20px;\nbackground-color: transparent;\nborder: none;\ngap: 8px;\npadding-bottom: 19px;\n`;\n\nexport const Svg = styled.svg`\nstroke: var(--sidebar-needhelp-icon-color);\n`;\n\nexport const Image = styled.img`\nmargin-bottom: 14px;\n`;\n\nexport const ButtonText = styled.span`\nfont-family: Poppins;\n// margin-left: 8px;\ncolor: var(--primary-text-color);\nfont-size: 12px;\nfont-weight: 500;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nwidth: 335px;\ncolor: var(--modal-bg-color);\n\n@media screen and (min-width: 768px) {\nwidth: 400px;\n}\n`;\n\nexport const Title = styled.h3`\nfont-size: 18px;\nfont-weight: 500;\ncolor: var(--modal-title-color);\nmargin-bottom: 24px;\n\n`;\n\nexport const Input = styled.input`\nfont-size: 14px;\nwidth: 302px;\nheight: 49px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\ncolor: var(--modal-input-text-color);\nborder-radius: 8px;\nopacity: 0.4;\nmargin-bottom: 14px;\n&:hover, &:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const Textarea = styled.textarea`\nfont-size: 14px;\nwidth: 302px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\nborder-radius: 8px;\ncolor: var(--modal-primary-text-color);\nopacity: 0.4;\nmin-height: 120px;\nmargin-bottom: 15px;\n\n&:hover, &:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const ErrorMessage = styled.p`\ncolor: var(--modal-btn-text-color);\nmargin-bottom: 10px;\ntext-align: center;\n`;","import {  useDispatch } from 'react-redux';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport { Form, Input, Textarea, Title } from './NeedHelpForm.styled';\nimport { useState } from 'react';\nimport { SendLetterThunk } from 'redux/auth/thunks';\n\nconst NeedHelpForm = () => {\n  //   const dispatch = useDispatch();\n\n  //   const email='helenblyzniuk@gmail.com'\n  //   const text=\"need help\"\n\n  // dispatch(SendLetterThunk({email,text}))\n\n  const [emailValue, setEmailValueValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const dispatch = useDispatch();\n\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return regex.test(email);\n  };\n\n  const handleSubmit = () => {\n    if (validateEmail(emailValue)) {\n      dispatch(\n        SendLetterThunk({\n          email: emailValue,\n          comment: descriptionValue,\n        })\n      );\n      setEmailError('');\n    } else {\n      setEmailError('Invalid email address');\n    }\n  };\n\n  return (\n    <>\n      <Form action=''>\n        <Title>Need help</Title>\n\n        <Input \n          type=\"text\"\n          action=\"\"\n          placeholder=\"Email address\"\n          value={emailValue}\n          onChange={event => setEmailValueValue(event.target.value)} />\n\n        {emailError && <p>{emailError}</p>}\n\n        <Textarea \n          type=\"text\"\n          action=\"\"\n          placeholder=\"Comment\"\n          value={descriptionValue}\n          onChange={event => setDescriptionValue(event.target.value)}>\n        </Textarea>\n\n        <ButtonForForms type=\"submit\" onSubmit={handleSubmit} textButton={() => 'Send'} />\n      </Form>\n    </>\n  );\n};\nexport default NeedHelpForm;\n","import React, { useState } from 'react';\n\nimport sprite from '../../images/sprite.svg';\nimport {\n  Button,\n  ButtonText,\n  Container,\n  Image,\n  Span,\n  Svg,\n  Text,\n} from './NeedHelp.styled';\nimport Modal from 'components/Modal/Modal';\nimport NeedHelpForm from 'components/NeedHelpForm/NeedHelpForm';\n\nconst NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Image\n            src={require(\"images/flower.png\")}\n            alt=\"flower\"\n        />\n\n        <Text>\n          If you need help with <Span>TaskPro</Span>, check out our support\n          resources or reach out to our customer support team.\n        </Text>\n\n        <Button onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite +'#icon-help-circle'}></use>\n          </Svg>\n          <ButtonText> Need help? </ButtonText>\n        </Button>\n        \n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <NeedHelpForm />\n        </Modal>\n      </Container>\n    </>\n  );\n};\n\nexport default NeedHelp;","import styled from '@emotion/styled';\n\nexport const StyledWrapper = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\nmargin-bottom: 70px;\n\n@media screen and (min-width: 768px) {\n  margin-left: 24px;\n  margin-bottom: 60px;\n}\n&::before {\n  content: '';\n  width: 32px;\n  height: 32px;\n  background-color: var(--sidebar-logo--bg-color);\n  cursor: pointer;\n  border-radius: 8px;\n}\n`;\n\nexport const StyledLogo = styled.svg`\nfill: var(--sidebar-logo--icon-color);\nposition: absolute;\n\n`;\n\nexport const StyledSpanLogo = styled.span`\nfont-size: 16px;\nfont-style: normal;\nline-height: normal;\nfont-weight: 600;\nletter-spacing: -0.64px;\ncolor: var(--primary-text-color);\n`;\n","import sprite from 'images/sprite.svg';\nimport { StyledLogo, StyledWrapper, StyledSpanLogo } from './LogoComponent.styled';\n\nconst LogoComponent = () => {\n\n  return (\n      <StyledWrapper>\n        <StyledLogo width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logo-lightning`} />\n        </StyledLogo>\n        <StyledSpanLogo>Task Pro</StyledSpanLogo>\n      </StyledWrapper>\n  );\n};\n\nexport default LogoComponent;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-top: 24px;\n  padding-bottom: 24px;\n  margin: 0;\n  background: var(--sidebar-bg-color);\n  transform: ${({ isOpen }) =>\n    isOpen ? 'translateX(0)' : 'translateX(-100%)'};\n  z-index: 100;\n  width: 260px;\n  height:100vh;\n\n  @media (max-width: 1439px) {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    transition: transform 500ms;\n  }\n`;\n\n\nexport const BackDropHidden = styled.div`\n  display: none;\n  @media (max-width: 1439px) {\n    display: ${({ isOpen }) => (isOpen ? 'block' : 'none')}; /* Show only on tablets and mobile */\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: var(--progress-backdrop);\n    overflow-y: auto;\n    z-index: 1;\n  }\n`;","import React from 'react';\nimport BoardList from 'components/BoardList/BoardList';\nimport LogoutBtn from 'components/LogoutBtn/LogoutBtn';\nimport NeedHelp from 'components/NeedHelp/NeedHelp';\nimport LogoComponent from 'components/LogoComponent/LogoComponent';\nimport { Container, BackDropHidden } from './Sidebar.styled';\n\n\nfunction Sidebar({ isOpen }) {\n  return (\n    <>\n      {isOpen && <BackDropHidden isOpen={isOpen} />}\n      <Container className=\"sidebar\" isOpen={isOpen}>\n        <LogoComponent />\n        <BoardList />\n        <NeedHelp />\n        <LogoutBtn />\n      </Container>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Header from 'components/Header/Header';\n\n//-------vit--------\nimport NewDashboard from 'components/NewDashboard/NewDashboard';\nimport { selectCurrentBoard } from 'redux/dashboards/selectors';\n//-------vit--------\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { getAllBackgroundsThunk } from 'redux/dashboards/thunks';\nimport { useMediaQuery } from 'react-responsive';\n// import { setToken } from 'api/axiosConfig';\nimport { GetCurrentUserThunk } from 'redux/auth/thunks';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const [openedSidebar, setOpenedSidebar] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 1439 });\n\n  useEffect(() => {\n    // const authData = JSON.parse(localStorage.getItem('persist:auth'));\n\n    // if (authData && authData.accessToken) {\n    //   setToken(`Bearer ${authData.accessToken}`);\n    dispatch(GetCurrentUserThunk());\n    // }\n  }, [dispatch]);\n\n  useEffect(() => {\n    const fetchBackgrounds = async () => {\n      try {\n        await dispatch(getAllBackgroundsThunk());\n      } catch (error) {\n        console.error('Помилка отримання фонів:', error);\n      }\n    };\n\n    fetchBackgrounds();\n  }, [dispatch]);\n\n  //-------vit--------\n  const currentBoard = useSelector(selectCurrentBoard);\n  //-------vit--------\n\n  useEffect(() => {\n    let timeoutId;\n\n    const handleOutsideClick = event => {\n      if (isMobile && openedSidebar) {\n        const sidebarElement = document.querySelector('.sidebar');\n        if (sidebarElement && !sidebarElement.contains(event.target)) {\n          setOpenedSidebar(false);\n        }\n      }\n    };\n\n    if (!isMobile) {\n      setOpenedSidebar(true);\n    }\n    if (openedSidebar) {\n      timeoutId = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [openedSidebar, isMobile]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <Sidebar isOpen={openedSidebar} />\n        <div\n          style={{\n            flexGrow: '1',\n            overflowX: 'hidden',\n            overflowY: 'hidden',\n            // maxHeight: '100vh',\n            // maxHeight: '90vh',\n            display: 'flex',\n            flexDirection: 'column',\n\n            // backgroundColor: 'var(--screens-page-bg-color)', //-----vit------\n          }}\n        >\n          <Header openSidebar={setOpenedSidebar} />\n\n          {/* -------vit-------- */}\n          {currentBoard ? <Outlet /> : <NewDashboard />}\n          {/* -------vit-------- */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import * as Yup from 'yup';\n\nexport const authValidationSchema = Yup.object({\n  name: Yup.string().required('name is required').min(2).max(32),\n  email: Yup.string()\n    .required('email is required')\n    .email('Invalid email address'),\n  password: Yup.string().required('password is required').min(8).max(64),\n});\n\nexport const authLoginValidationSchema = Yup.object({\n  email: Yup.string()\n    .required('email is required')\n    .email('Invalid email address'),\n  password: Yup.string().required('password is required').min(8).max(64),\n});\n\nexport const UpdateUserSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    }),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters')\n    .matches(/^[a-zA-Z0-9]+$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    }),\n});\n"],"names":["TitleStyled","styled","children","Wrapper","AvatarWrapper","IconUser","AvatarImg","FileInputWrapper","FileInput","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","SendBtn","ErrorText","ErrorMessage","onClose","dispatch","useDispatch","useEffect","GetCurrentUserThunk","userData","useSelector","state","auth","user","useState","imageUrl","setImageUrl","imageFile","setImageFile","name","userName","setUserName","email","userEmail","setUserEmail","showPassword","setShowPassword","photo","reader","FileReader","onload","event","target","result","readAsDataURL","onSubmit","e","preventDefault","password","elements","newUserData","value","UpdateUserThunk","UpdateUserPhotoThunk","initialValues","validationSchema","UpdateUserSchema","avatarURL","src","alt","width","height","href","sprite","type","onChange","files","accept","autoFocus","placeholder","component","className","onClick","stroke","closeModal","isOpen","Modal","custom","Container","UserName","AvasarSetin","IconAvatar","Name","showModal","setShowModal","toggleModal","IconBM","HeaderInfo","CustomSelect","CustomOptionList","props","open","CustomOption","selected","TheamBtn","IconDown","openSidebar","theme","isCustomOptionListOpen","setCustomOptionListOpen","document","body","classList","add","remove","toggleCustomOptionList","handleThemeClick","selectedTheme","UpdateThemeThunk","ButtonForm","textButton","ContainerSvg","ChildButtonNewBoard","textContent","NewBoardTitle","Input","IconTitle","IconWrap","selectedIconStyle","css","Icon","BackgroundTitle","BgIcon","BackgroundItem","isActive","BackgroundImage","BasicBackground","timeoutId","useForm","mode","register","handleSubmit","setValue","errors","formState","selectedIcon","setSelectedIcon","backgrounds","boards","selectedBackground","setSelectedBackground","navigate","useNavigate","handleBackgroundSelect","backgroundId","toast","data","title","icon","background","createNewBoardThunk","then","normalizedTitle","toLowerCase","replace","catch","error","id","required","newValue","toString","clearTimeout","setTimeout","message","map","handleIconSelect","style","display","justifyContent","alignItems","backgroundItems","item","_id","previewURL","renderBackgrounds","Section","InfoContainer","InfoText","InfoTextAccent","isModalOpen","setModalOpen","disabled","alert","Text","Button","Title","boardId","selectedBackgroundId","setSelectedBackgroundId","board","currentBoard","getCurrentBoardThunk","boardData","updateBoardByIdThunk","unwrap","response","console","ActiveSvg","IconButton","IconsWrapper","active","onEdit","onDelete","normalizeName","stopPropagation","handleEditBoard","deleteBoardByIdThunk","handleDeleteBoard","List","activeBoardId","setActiveBoardId","getAllBoardsThunk","handleOpenBoard","Span","LogOutBtn","LogOutThunk","Image","ButtonText","Form","Textarea","emailValue","setEmailValueValue","descriptionValue","setDescriptionValue","emailError","setEmailError","action","test","SendLetterThunk","comment","setIsModalOpen","require","StyledWrapper","StyledLogo","StyledSpanLogo","BackDropHidden","openedSidebar","setOpenedSidebar","isMobile","useMediaQuery","maxWidth","fetchBackgrounds","getAllBackgroundsThunk","selectCurrentBoard","handleOutsideClick","sidebarElement","querySelector","contains","addEventListener","removeEventListener","flexGrow","overflowX","overflowY","flexDirection","authValidationSchema","Yup","min","max","authLoginValidationSchema","shape","matches","excludeEmptyString"],"sourceRoot":""}