{"version":3,"file":"static/js/910.71717dbc.chunk.js","mappings":"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","sources":["components/ModalTitle/ModalTitle.styled.jsx","components/ModalTitle/ModalTitle.jsx","components/EditUser/EditUser.styled.js","components/EditUser/EditUser.jsx","components/ModalEditProfile/ModalEditProfile.jsx","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/hooks/useTheme.js","components/NewDashboard/NewDashBoard.styled.js","components/NewDashboard/NewDashboard.js","components/ButtonForForms/ButtonForForms.styled.jsx","components/ButtonForForms/ButtonForForms.jsx","components/ButtonForForms/ChildButtonNewBoard.styled.jsx","components/ButtonForForms/ChildButtonNewBoard.jsx","components/NewBoard/NewBoard.styled.jsx","components/NewBoard/NewBoard.jsx","components/AddBoardButton/AddBoardButton.styled.jsx","components/AddBoardButton/AddBoardButton.jsx","components/BoardList/BoardList.styled.jsx","components/EditBoardForm/EditBoardForm.styled.jsx","components/EditBoardForm/EditBoardForm.jsx","components/BoardButton/BoardButton.styled.jsx","components/BoardButton/BoardButton.jsx","components/ButtonList/ButtonList.styled.jsx","components/ButtonList/ButtonList.jsx","components/BoardList/BoardList.jsx","components/LogoutBtn/LogoutBtn.styled.jsx","components/LogoutBtn/LogoutBtn.jsx","components/NeedHelp/NeedHelp.styled.jsx","components/NeedHelpForm/NeedHelpForm.styled.jsx","components/NeedHelpForm/NeedHelpForm.jsx","components/NeedHelp/NeedHelp.jsx","components/LogoComponent/LogoComponent.styled.jsx","components/LogoComponent/LogoComponent.js","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","pages/HomePages.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TitleStyled = styled.h2`\n  margin-bottom: 24px;\n  color: var(--modal-title-color);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.36px;\n`;\n","import { TitleStyled } from './ModalTitle.styled';\n\nconst ModalTitle = ({ children }) => {\n  return <TitleStyled>{children}</TitleStyled>;\n};\n\nexport default ModalTitle;\n","import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n  fill: #1f1f1f;\n  stroke: rgba(21, 21, 21, 1);\n`;\n\nexport const AvatarImg = styled.img`\n  width: 68px;\n  height: 68px;\n  border-radius: 10px;\n`;\n\nexport const FileInputWrapper = styled.label`\n  position: absolute;\n  bottom: -12px;\n  left: 50%;\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  transform: translateX(-50%);\n  color: #161616;\n  border-radius: 20%;\n  background-color: #bedbb0;\n  font-size: 18px;\n  font-size: 14px;\n  &:hover {\n    background-color: #9dc888;\n  }\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 24px;\n  gap: 14px;\n\n  input {\n    top: 107px;\n    left: 40px;\n    height: 49px;\n    padding-left: 18px;\n    opacity: 0.4;\n    color: #ffffff;\n    border: 1px solid #bedbb0;\n    border-radius: 8px;\n    outline: none;\n    background: #1f1f1f;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Svg = styled.svg`\n  top: 50%;\n  right: 4px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const SendBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  cursor: pointer;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #161616;\n  border: none;\n  border-radius: 8px;\n  background: #bedbb0;\n  font-size: 14px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 21px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: #bedbb070;\n  font-size: 14px;\n`;\n","import { useState } from 'react';\nimport { Formik, Field } from 'formik';\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  Wrapper,\n  AvatarWrapper,\n  FileInputWrapper,\n  IconUser,\n  Inputs,\n  FileInput,\n  PasswordView,\n  PasswordInput,\n  PasswordIcon,\n  Svg,\n  SendBtn,\n  ErrorText,\n} from './EditUser.styled';\n\nconst EditUser = ({ onClose }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPasswordVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    onClose();\n  };\n\n  return (\n    <>\n      <form onSubmit={formSubmit}>\n        <Formik\n          initialValues={{\n            name: 'userName',\n            email: 'userEmail',\n            password: '',\n          }}\n        >\n          <Wrapper>\n            <AvatarWrapper>\n              <IconUser>\n                <use href={`${sprite}#icon-avatar`}></use>\n              </IconUser>\n\n              <FileInputWrapper>\n                <FileInput\n                  type=\"file\"\n                  accept=\"image/jpeg, image/png, image/gif\"\n                />\n                +\n              </FileInputWrapper>\n            </AvatarWrapper>\n\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" />\n              <Field name=\"email\" type=\"email\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordView\n                  className={`${PasswordView} ${PasswordIcon}`}\n                  onClick={onPasswordVisible}\n                >\n                  {showPassword ? (\n                    <PasswordIcon src={`${sprite}#icon-eye-hide`} />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordView>\n              </PasswordInput>\n            </Inputs>\n            <SendBtn type=\"submit\">Send</SendBtn>\n          </Wrapper>\n        </Formik>\n      </form>\n    </>\n  );\n};\n\nexport default EditUser;\n","import React from 'react';\n\nimport Modal from 'components/Modal';\nimport ModalTitle from 'components/ModalTitle';\nimport EditUser from 'components/EditUser';\n\nconst ModalEditProfile = ({ closeModal, isOpen }) => {\n  return (\n    <Modal onClose={closeModal} isOpen={isOpen} custom={true}>\n      <ModalTitle>Edit profile</ModalTitle>\n      <EditUser onClose={closeModal} />\n    </Modal>\n  );\n};\n\nexport default ModalEditProfile;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 14px;\n`;\n\nexport const UserName = styled.div`\n  color: var(--header-name-color);\n`;\n\nexport const AvasarSetin = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const IconAvatar = styled.svg`\n  width: 32px;\n  height: 32px;\n  border: 1px solid var(--header-theme-select-border-color);\n  border-radius: 8px;\n  fill: var(--header-user-fill);\n  stroke: var(--header-user-stroke);\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  transition: all 0.3s ease;\n  &:hover {\n    border: 1px solid var(--header-theme-select-text-color-hover);\n    transform: scale(1.1);\n  }\n`;\n","import React, { useState } from 'react';\n\nimport ModalEditProfile from 'components/ModalEditProfile';\n\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  UserName,\n  IconAvatar,\n  Container,\n  AvasarSetin,\n} from './UserInfo.styled';\n\nconst UserInfo = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Container>\n      <UserName>User</UserName>\n      <AvasarSetin>\n        <IconAvatar onClick={toggleModal}>\n          <use href={`${sprite}#icon-avatar`}></use>\n        </IconAvatar>\n        {showModal && (\n          <ModalEditProfile closeModal={toggleModal} isOpen={showModal} />\n        )}\n      </AvasarSetin>\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 68px;\n  padding-right: 24px;\n  color: var(--header-theme-select-text-color);\n  background-color: var(--header-bg-color);\n\n  @media (max-width: 767px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media (max-width: 1439px) {\n    padding-left: 20px;\n    padding-right: 32px;\n  }\n`;\n\nexport const IconBM = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--header-name-color);\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CustomSelect = styled.div`\n  position: relative;\n`;\n\nexport const CustomOptionList = styled.ul`\n  position: absolute;\n  display: ${props => (props.open ? 'block' : 'none')};\n  top: 20px;\n  left: -105px;\n  margin: 0;\n  padding: 18px 44px 18px 18px;\n  list-style: none;\n  border: solid 1px var(--header-theme-select-border-color);\n  border-radius: 8px;\n  background-color: var(--header-theme-select-bg-color);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  z-index: 1;\n`;\n\nexport const CustomOption = styled.li`\n  padding: 5px 10px;\n  cursor: pointer;\n  color: var(--header-theme-select-text-color);\n\n  &:hover {\n    color: var(--header-theme-select-text-color-hover);\n  }\n\n  /* ${props =>\n    props.selected &&\n    `\n      color: #bedbb0;\n    `} */\n`;\n\nexport const TheamBtn = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  /* &:hover {\n    padding: 5px;\n    box-shadow: 0px 6px 7px -5px #9dc888;\n  } */\n`;\n\nexport const IconDown = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  fill: transparent;\n  stroke: var(--header-theme-select-text-color);\n`;\n","import React, { useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\n\nimport UserInfo from 'components/UserInfo/UserInfo';\n// import { updateTheme } from 'redux/auth/authOperations';\nimport { useTheme } from '../hooks/useTheme';\n\nimport {\n  Container,\n  IconBM,\n  HeaderInfo,\n  CustomSelect,\n  CustomOption,\n  CustomOptionList,\n  IconDown,\n  TheamBtn,\n} from './Header.styled';\n\nimport sprite from '../../images/sprite.svg';\n\nconst Header = ({ openSidebar }) => {\n  const { theme, setTheme } = useTheme();\n  const [selectedTheme, setSelectedTheme] = useState('dark');\n\n  // const dispatch = useDispatch();\n\n  const [isCustomOptionListOpen, setCustomOptionListOpen] = useState(false);\n\n  useEffect(() => {\n    document.body.classList.add(theme);\n    return () => {\n      document.body.classList.remove(theme);\n    };\n  }, [theme]);\n\n  const toggleCustomOptionList = () => {\n    setCustomOptionListOpen(!isCustomOptionListOpen);\n  };\n\n  const handleLightThemeClick = () => {\n    setTheme('light');\n    setSelectedTheme('light');\n    // dispatch(updateTheme('light'));\n    toggleCustomOptionList();\n  };\n\n  const handleDarkThemeClick = () => {\n    setTheme('dark');\n    setSelectedTheme('dark');\n    // dispatch(updateTheme('dark'));\n    toggleCustomOptionList();\n  };\n\n  const handleVioletThemeClick = () => {\n    setTheme('violet');\n    setSelectedTheme('violet');\n    // dispatch(updateTheme('violet'));\n    toggleCustomOptionList();\n  };\n\n  return (\n    <Container>\n      <div\n        onClick={() => {\n          openSidebar(true);\n        }}\n      >\n        <IconBM>\n          <use href={`${sprite}#icon-menu`}></use>\n        </IconBM>\n      </div>\n\n      <HeaderInfo>\n        <TheamBtn onClick={toggleCustomOptionList}>\n          Theme\n          <IconDown>\n            <use href={`${sprite}#icon-chevron-down`}></use>\n          </IconDown>\n        </TheamBtn>\n\n        <CustomSelect theme={theme}>\n          <CustomOptionList open={isCustomOptionListOpen}>\n            <CustomOption\n              onClick={() => handleLightThemeClick()}\n              selected={selectedTheme === 'light'}\n            >\n              Light\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleDarkThemeClick()}\n              selected={selectedTheme === 'dark'}\n            >\n              Dark\n            </CustomOption>\n\n            <CustomOption\n              onClick={() => handleVioletThemeClick('violet')}\n              selected={selectedTheme === 'violet'}\n            >\n              Violet\n            </CustomOption>\n          </CustomOptionList>\n        </CustomSelect>\n\n        <UserInfo />\n      </HeaderInfo>\n    </Container>\n  );\n};\n\nexport default Header;\n","import { useLayoutEffect, useState } from 'react';\n// import { useSelector } from 'react-redux';\n\n// import { getTheme } from 'redux/auth/authSelectors';\n\nexport const useTheme = () => {\n  // const initialTheme = useSelector(getTheme);\n  const [theme, setTheme] = useState(/*initialTheme ||*/ 'dark');\n\n  useLayoutEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  return { theme, setTheme };\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 0px 24px;\n  background-color: var(--screens-page-bg-color);\n`;\n\nexport const InfoContainer = styled.div`\n  height: 100vh;\n  widows: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  font-family: Poppins;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  /* color: var(--add-column-btn-text-color); */\n  color: var(--new-dashboadr-text-color);\n`;\n\nexport const InfoTextAccent = styled.span`\n  color: var(--new-dashboadr-text-accent-color);\n`;\n","import React from 'react';\nimport {\n  Section,\n  InfoText,\n  InfoTextAccent,\n  InfoContainer,\n} from './NewDashBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  BtnFilters,\n  SvgIconFilters,\n} from '../MainDashboard/MainDashboard.styled';\n\nconst NewDashboard = () => {\n  const handleFilters = e => {\n    alert('Handel Button Filters');\n  };\n\n  return (\n    <Section>\n      <BtnFilters type=\"submit\" disabled={true} onClick={handleFilters}>\n        <SvgIconFilters>\n          + <use href={sprite + '#icon-filter'}></use>\n        </SvgIconFilters>\n        Filter\n      </BtnFilters>\n\n      <InfoContainer>\n        <InfoText>\n          Before starting your project, it is essential\n          <InfoTextAccent> to create a board </InfoTextAccent>to visualize and\n          track all the necessary tasks and milestones. This board serves as a\n          powerful tool to organize the workflow and ensure effective\n          collaboration among team members.\n        </InfoText>\n      </InfoContainer>\n    </Section>\n  );\n};\nexport default NewDashboard;\n","import styled from '@emotion/styled';\n\nexport const ButtonForm = styled.button`\nwidth: 302px;\nheight: 49px;\npadding: 10px 0 11px;\nborder-radius: 8px;\n// margin: 0 auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: var(--modal-btn-bg-color);\ncolor: var(--modal-btn-text-color);\nfont-family: Poppins;\nfont-size: 14px;\nfont-weight: 500;\ntext-align: center;\ntransition: scale 250ms ease-in 0s;\n\n&:hover,\n&focus {\nscale: 1.05;\nbackground-color: var(--modal-btn-bg-color-hover);\n}\n`;\n","import { ButtonForm } from './ButtonForForms.styled';\n\nfunction ButtonForForms ({ textButton }) {\n  return (\n    <>\n      <ButtonForm type=\"submit\"> {textButton()}\n      </ButtonForm>\n    </>\n  );\n}\n\nexport default ButtonForForms;","import styled from '@emotion/styled';\n\nexport const ContainerSvg = styled.button`\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  background-color: #161616;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  text-align: center;\n\n  & + p {\n    color: var(--modal-btn-text-color);\n    letter-spacing: -0.28px;\n  }\n`;\nexport const Svg = styled.svg`\nstroke: var(--modal-selected-icon-color);\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerSvg, Svg } from './ChildButtonNewBoard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport default function ChildButtonNewBoard({ textContent }) {\n  return (\n    <>     \n      <ContainerSvg>\n        <Svg width=\"14px\" height=\"14px\">\n          <use href={sprite + '#icon-plus'}></use>\n        </Svg>\n      </ContainerSvg>\n\n      <p>{textContent}</p>\n    </>\n  );\n}\n\nChildButtonNewBoard.propTypes = {\n  textContent: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const NewBoardTitle = styled.h2`\n  width: 96px;\n  margin: 0 0 24px 0;\n  height: 27px;\n  left: 24px;\n  top: 24px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const ErrorMessage = styled.p`\n  color: var(--modal-title-color);\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  margin: 0 0 24px 0;\n  width: 287px;\n  height: 49px;\n  padding-left: 20px;\n  background: transparent;\n  opacity: 0.4;\n  border: 1px solid var(--modal-input-border-color);\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n  color: var(--modal-title-color);\n\n  &::placeholder {\n    width: 28px;\n    height: 21px;\n    left: 18px;\n    top: 14px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    color: var(-modal-input-placeholder-color);\n  }\n\n  &:not(:placeholder-shown) {\n    opacity: 1;\n    color: var(--modal-title-color);\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const IconTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const IconWrap = styled.div`\n  margin: 0 0 24px 0;\n`;\n\nconst selectedIconStyle = css`\n  fill: var(--modal-selected-icon-color);\n`;\n\nexport const Icon = styled.svg`\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n  fill: var(--modal-icon-color);\n  cursor: pointer;\n  background-color: var(--modal-button-plus-bg-color);\n  ${props => props.selected === true && selectedIconStyle};\n  &:hover {\n    fill: var(--modal-selected-icon-color);\n  }\n`;\n\nexport const BackgroundTitle = styled.h3`\n  margin: 0 0 14px 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const BgIcon = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 260px;\n  gap: 4px;\n  margin-bottom: 40px;\n`;\n\nexport const BackgroundItem = styled.div`\ncursor: pointer;\ntransition: transform 0.3s;\nborder-radius: 6px;\noverflow: hidden;\n  ${props =>\n    props.isActive &&\n    css`\n      border-color: var(--modal-selected-background-border-color);\n      transform: scale(1.05); /* Збільште розмір при активному виборі */\n    `}\n}\n`;\n\nexport const BackgroundImage = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport sprite from '../../images/sprite.svg';\nimport { createNewBoardThunk } from 'redux/dashboards/thunks';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport ChildButtonNewBoard from 'components/ButtonForForms/ChildButtonNewBoard';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  NewBoardTitle,\n  IconTitle,\n  IconWrap,\n  Icon,\n  BackgroundTitle,\n  BgIcon,\n  BackgroundItem,\n  BackgroundImage,\n  Input,\n  ErrorMessage,\n} from './NewBoard.styled';\n// import { yupResolver } from '@hookform/resolvers/yup';\n// import { TitleSchema } from 'schemas';\n\nconst NewBoard = ({ onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    // resolver: yupResolver(TitleSchema),\n    mode: 'onChange',\n  });\n  const [selectedIcon, setSelectedIcon] = useState('');\n  const backgrounds = useSelector(state => state.boards.backgrounds);\n  const [selectedBackground, setSelectedBackground] = useState('');\n  const dispatch = useDispatch();\n\n  let timeoutId;\n\n  const handleTitleChange = event => {\n    const newValue = event.target.value.toString();\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      try {\n        setValue('title', newValue);\n        toast.success('Title changed successfully');\n      } catch {\n        toast.error('Error changing title');\n      }\n    }, 1500);\n  };\n\n  const handleIconSelect = icon => {\n    try {\n      setSelectedIcon(icon);\n      setValue('icon', icon);\n      toast.success('Icon selected successfully');\n    } catch {\n      toast.error('Error occurred while selecting the icon');\n    }\n  };\n\n  const handleBackgroundSelect = backgroundId => {\n    try {\n      setSelectedBackground(backgroundId);\n      setValue('background', backgroundId);\n      toast.success('Background selected successfully');\n    } catch {\n      toast.error('Error selecting background');\n    }\n  };\n\n  const handleCreateBoard = data => {\n    dispatch(createNewBoardThunk(data))\n      .then(() => {\n        toast.success('The board was created successfully');\n        setValue('title', '');\n        setValue('icon', '');\n        setValue('background', '');\n        onClose();\n      })\n      .catch(error => {\n        toast.error('Error occurred while creating the board');\n      });\n  };\n\n  const renderIcons = () => {\n    const icons = [\n      'icon-Project',\n      'icon-star',\n      'icon-loading',\n      'icon-puzzle-piece',\n      'icon-container',\n      'icon-lightning-icon',\n      'icon-colors',\n      'icon-hexagon',\n    ];\n\n    return icons.map(icon => (\n      <Icon\n        key={icon}\n        selected={selectedIcon === icon}\n        onClick={() => handleIconSelect(icon)}\n      >\n        <use href={`${sprite}#${icon}`} />\n      </Icon>\n    ));\n  };\n\n  const renderBackgrounds = () => {\n    const placeholder = (\n      <BackgroundItem\n        key=\"null-background\"\n        isActive={selectedBackground === 'null-background'}\n        onClick={() => handleBackgroundSelect('null-background')}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '28px',\n            height: '28px',\n          }}\n        >\n          <svg style={{ width: '16px', height: '16px' }}>\n            <use href={sprite + '#null-background'}></use>\n          </svg>\n        </div>\n      </BackgroundItem>\n    );\n\n    const backgroundItems = backgrounds.map(item => (\n      <BackgroundItem\n        key={item.previewURL}\n        isActive={selectedBackground === item._id}\n        onClick={() => handleBackgroundSelect(item._id)}\n      >\n        <BackgroundImage src={item.previewURL} alt=\"Background\" />\n      </BackgroundItem>\n    ));\n\n    return [placeholder, ...backgroundItems];\n  };\n\n  return (\n    <div>\n      <NewBoardTitle>New Board</NewBoardTitle>\n      <form onSubmit={handleSubmit(handleCreateBoard)}>\n        <Input\n          id=\"newBoardInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          {...register('title')}\n          onChange={handleTitleChange}\n        />\n        <ErrorMessage>{errors.title?.message}</ErrorMessage>\n\n        <IconTitle>Icons</IconTitle>\n        <IconWrap>{renderIcons()}</IconWrap>\n\n        <BackgroundTitle>Background</BackgroundTitle>\n        <BgIcon>{renderBackgrounds()}</BgIcon>\n\n        <ButtonForForms\n          textButton={() => <ChildButtonNewBoard textContent=\"Create\" />}\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default NewBoard;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 87.6%;\nheight: 70px;\nmargin-left: 14px;\nmargin-bottom: 40px;\npadding: 14px 4px 14px 0;\nborder-top: 1px solid rgba(255, 255, 255, 0.1);\nborder-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\n@media screen and (max-width: 767px) {\nmargin-left: 24px;\nwidth: 81.5%;\npadding: 14px 0;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 76px;\ncolor: var(--primary-text-color);\nfont-size: 14px;\nfont-weight: 500;\nletter-spacing: -0.28px;\n`;\n\nexport const Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 40px;\nheight: 36px;\nbackground-color: #BEDBB0;\nborder-radius: 6px;\n\n&:hover,\n&focus {\nscale: 1.05;\nbackground-color: var(--modal-btn-bg-color-hover);\n}\n`;\n\nexport const Svg = styled.svg`\nstroke: #121212;\n`;\n\n","import { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport CreateNewBoard from 'components/NewBoard/NewBoard';\nimport { Wrapper, Text, Button, Svg } from './AddBoardButton.styled';\n\nfunction AddBoardButton() {\n  const [isModalOpen, setModalOpen] = useState(false);\n  \n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Text>Create a new board</Text>\n        <Button type=\"button\" onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite + '#icon-plus'}></use>\n          </Svg>\n        </Button>\n      </Wrapper>\n\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <CreateNewBoard onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default AddBoardButton;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nmargin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\nmargin-left: 14px;\nmargin-bottom: 8px;\nalign-self: flex-start;\ncolor: var(--secondary-text-color);\nfont-size: 12px;\nfont-weight: 400;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {  \n  margin-left: 24px;\n}\n`;\n\n","import styled from '@emotion/styled';\n\nexport const NewBoardTitle = styled.h2`\nmargin: 0 0 24px 0;\nwidth: 96px;\nheight: 27px;\nleft: 24px;\ntop: 24px;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 18px;\nline-height: 27px;\nletter-spacing: -0.02em;\ncolor: var(--modal-primary-text-color);\n`;\n\nexport const Input = styled.input`\nbox-sizing: border-box;\nmargin: 0 0 24px 0;\nwidth: 287px;\nheight: 49px;\npadding-left: 20px;\nbackground: transparent;\nopacity: 0.4;\nborder: 1px solid #bedbb0;\nbox-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\nborder-radius: 8px;\ncolor: var(--modal-input-text-color);\n\n&::placeholder {\n    width: 28px;\n    height: 21px;\n    left: 18px;\n    top: 14px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    color: #bedbb0;\n}\n\n&:not(:placeholder-shown) {\n    opacity: 1;\n    color: var(--modal-input-text-color);\n}\n\n&:focus {\n    opacity: 1;\n    outline: none;\n    border: 1px solid #bedbb0;\n}\n`;\n\nexport const IconTitle = styled.h3`\nmargin: 0 0 14px 0;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14;\nline-height: 21px;\nletter-spacing: -0.02em;\ncolor: var(--modal-title-color);\n`;\n\nexport const IconWrap = styled.div`\nmargin: 0 0 24px 0;\n`;\n\nexport const Icon = styled.svg`\nmargin-right: 8px;\nwidth: 18px;\nheight: 18px;\nstroke: var(--modal-title-color);\ncursor: pointer;\nbackground-color: var(--modal-button-plus-bg-color);\n&:hover {\n    fill: var(--modal-selected-icon-color);\n}\n`;\n\nexport const BackgroundTitle = styled.h3`\nmargin: 0 0 14px 0;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14;\nline-height: 21px;\nletter-spacing: -0.02em;\ncolor: var(--modal-title-color);\n`;\n\nexport const BgIcon = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: center;\nwidth: 260px;\ngap: 4px;\nmargin-bottom: 40px;\n`;\n\nexport const BackgroundItem = styled.div`\ncursor: pointer;\ntransition: transform 0.3s;\nfilter: ${({ isActive }) => (isActive ? 'grayscale(100%)' : 'none')};\nfilter: ${({ isActive }) => (isActive ? 'brightness(60%)' : 'none')};\nborder-radius: 6px;\noverflow: hidden;\n&:hover {\n    transform: scale(1.1);\n}\n`;\n\nexport const BackgroundImage = styled.img`\nwidth: 28px;\nheight: 28px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { updateBoardByIdThunk } from 'redux/dashboards/thunks';\nimport sprite from '../../images/sprite.svg';\n// картинки\n// import { useBoardData } from 'components/hooks';\nimport ChildButtonNewBoard from 'components/ButtonForForms/ChildButtonNewBoard';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\n\nimport {\n  NewBoardTitle,\n  IconTitle,\n  IconWrap,\n  Icon,\n  // BackgroundTitle,\n  // BgIcon,\n  // BackgroundItem,\n  // BackgroundImage,\n  Input,\n} from './EditBoardForm.styled';\n\nconst EditBoardForm = ({ onClose }) => {\n  const { register, handleSubmit, setValue } = useForm();\n  const [selectedIcon, setSelectedIcon] = useState('');\n  // const [selectedBackgroundId, setSelectedBackgroundId] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const board = useSelector(state => state.boards.currentBoard);\n  console.log(board);\n\n  useEffect(() => {\n    setValue('title', board.title);\n    // setSelectedIcon(board.icon);\n    // setSelectedBackgroundId(board.background);\n  }, [board.title, setValue]);\n  // board.background, board.icon,\n\n  const handleTitleChange = event => {\n    setValue('title', event.target.value);\n  };\n\n  const handleIconSelect = icon => {\n    // console.log(icon);\n    setSelectedIcon(icon);\n    setValue('icon', icon);\n  };\n\n  // const handleBackgroundSelect = backgroundId => {\n  //   setSelectedBackgroundId(backgroundId);\n  //   setValue('selectedBackgroundId', backgroundId);\n  // };\n\n  const handleEditBoardForm = data => {\n    console.log(data);\n    const boardData = {\n      id: board._id,\n      body: {\n        title: data.title,\n        icon: data.icon,\n        // background: data.selectedBackgroundId,\n      },\n    };\n\n    dispatch(updateBoardByIdThunk(boardData))\n      .unwrap()\n      .then(response => {\n        setValue('title', data.title);\n        setValue('icon', '');\n        setValue('selectedIcon', data.icon);\n        // setValue('selectedBackgroundId', data.selectedBackgroundId);\n        onClose();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n\n    navigate(`${data.title.toLowerCase()}`);\n  };\n\n  const renderIcons = () => {\n    const icons = [\n      'icon-Project',\n      'icon-star',\n      'icon-loading',\n      'icon-puzzle-piece',\n      'icon-container',\n      'icon-lightning-icon',\n      'icon-colors',\n      'icon-hexagon',\n    ];\n\n    return icons.map(icon => (\n      <Icon\n        key={icon}\n        selected={selectedIcon === icon}\n        onClick={() => handleIconSelect(icon)}\n      >\n        <use href={`${sprite}#${icon}`} />\n      </Icon>\n    ));\n  };\n\n  // const renderBackgrounds = () => {\n  //   return data.map(item => (\n  //     <BackgroundItem\n  //       key={item.id}\n  //       isActive={selectedBackgroundId === item.id}\n  //       onClick={() => handleBackgroundSelect(item.id)}\n  //     >\n  //       <BackgroundImage src={item.image} alt=\"Background\" />\n  //     </BackgroundItem>\n  //   ));\n  // };\n\n  return (\n    <div>\n      <NewBoardTitle>Edit Board</NewBoardTitle>\n\n      <form onSubmit={handleSubmit(handleEditBoardForm)}>\n        <Input\n          id=\"newBoardInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          {...register('title')}\n          onChange={handleTitleChange}\n        />\n        <IconTitle>Icons</IconTitle>\n        <IconWrap>{renderIcons()}</IconWrap>\n        {/* \n        <BackgroundTitle>Background</BackgroundTitle> \n         <BgIcon>{renderBackgrounds()}</BgIcon>  */}\n        <ButtonForForms\n          textButton={<ChildButtonNewBoard textContent=\"Edit\" />}\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default EditBoardForm;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 20px 14px;\n  scroll-snap-align: start;\n  opacity: 0.4;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 24px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n\n  &.active {\n    background-color: var(--sidebar-active-board-bg-color);\n    opacity: 1;\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      border-left: 4px solid #BEDBB0;\n      border-bottom-left-radius: 4px;\n      border-top-left-radius: 4px;\n      scroll-snap-align: start;\n    }\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: var(--sidebar-active-board-text-color);\n  fill: transparent;\n`;\n\nexport const Title = styled.p`\n  margin-left: 4px;\n  margin-right: auto;\n  color: var(--sidebar-active-board-text-color);\n  font-size: 14;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const ActiveSvg = styled.svg`\n  stroke: var(--sidebar-inactive-board-text-color);\n  fill: transparent;\n  transition: scale 250ms ease-in 0s, stroke 250ms ease-in 0s;\n  &:hover,\n  &:focus {\n    stroke: #BEDBB0;\n    scale: 1.08;\n  }\n`;\n\nexport const IconButton = styled.button`\n  display: block;\n  height: 16px;\n`;\n\nexport const IconsWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../images/sprite.svg';\nimport Modal from 'components/Modal/Modal';\nimport EditBoardForm from 'components/EditBoardForm/EditBoardForm';\n\nimport {\n  Svg,\n  Wrapper,\n  Title,\n  ActiveSvg,\n  IconsWrapper,\n  IconButton,\n} from './BoardButton.styled';\nimport {\n  deleteBoardByIdThunk,\n  getAllBoardsThunk,\n  getCurrentBoardThunk,\n} from 'redux/dashboards/thunks';\n\nfunction BoardButton({ name, id, icon }) {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  // const params = useParams();\n  const navigate = useNavigate();\n  const [active, setActive] = useState(false);\n  const [click] = useState(false);\n\n  // const openModal = () => {\n  //   setModalOpen(true);\n  // };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n  //   if (name.toString().toLowerCase() !== params.boardName) {\n  //     setActive(false);\n  //   }\n  //   if (name.toString().toLowerCase() === params.boardName) {\n  //     setActive(true);\n  //   }\n  // }, [dispatch, params.boardName, name]);\n\n  const handleActive = () => {\n    setActive(true);\n    dispatch(getCurrentBoardThunk(`${id}`));\n    navigate(`${name.toLowerCase()}`);\n  };\n\n  // const handleDelete = id => {\n  //   dispatch(deleteBoardByIdThunk(id));\n  //   setClick(true);\n  // };\n  // const handleOpenBoard = (id, title) => {\n  //   dispatch(getCurrentBoardThunk(id));\n  // const normalizedTitle = title.toLowerCase().replace(/\\s+/g, '-');\n  // navigate(normalizedTitle);\n  // };\n  const handleEditBoard = (e, boardId) => {\n    e.stopPropagation();\n    console.log('handleEditBoard'); // Зупиняє подальше поширення кліку до обгортки\n    // Додайте код для редагування дошки з ID `boardId`\n  };\n\n  const handleDeleteBoard = (e, boardId) => {\n    e.stopPropagation();\n    dispatch(deleteBoardByIdThunk(boardId));\n  };\n\n  useEffect(() => {\n    if (click) {\n      navigate('/home');\n    }\n  }, [click, navigate]);\n\n  return (\n    <>\n      <Wrapper className={active ? 'active' : ''} onClick={handleActive}>\n        <Svg width=\"18px\" height=\"18px\">\n          <use href={sprite + `#${icon}`}></use>\n        </Svg>\n        <Title style={{ color: 'white' }}>{name}</Title>\n        {active && (\n          <IconsWrapper>\n            <IconButton type=\"button\" onClick={e => handleEditBoard(e, id)}>\n              <ActiveSvg width=\"18px\" height=\"18px\">\n                <use href={sprite + '#icon-pencil-01'}></use>\n              </ActiveSvg>\n              Edit\n            </IconButton>\n            <IconButton type=\"button\" onClick={e => handleDeleteBoard(e, id)}>\n              <ActiveSvg width=\"16px\" height=\"16px\">\n                <use href={sprite + '#icon-trash'}></use>\n              </ActiveSvg>\n              Delete\n            </IconButton>\n          </IconsWrapper>\n        )}\n      </Wrapper>\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <EditBoardForm onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default BoardButton;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  min-height: 61px;\n  margin-bottom: 40px;\n  height: calc(100vh - 611px);\n  scroll-behavior: smooth;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n\n  @media only screen and (min-width: 768px) {\n    height: calc(100vh - 646px);\n  }\n\n  &::-webkit-scrollbar {\n    width: 0px;\n  }\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useAllBoards } from 'components/hooks';\nimport BoardButton from 'components/BoardButton/BoardButton';\nimport { List } from './ButtonList.styled';\nimport { getCurrentBoardThunk, getAllBoardsThunk } from 'redux/dashboards/thunks';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ButtonList() {\n  // const allBoards = useAllBoards();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const boards = useSelector(state => state.boards.boards);\n  // const boardID = useBoardId();\n  // const ref = useRef(null);\n  // const { onMouseDown } = useDraggable(ref, { direction: 'vertical' });\n\n  useEffect(() => {\n    // if (allBoards.length !== 0 && boardID) {\n    //   dispatch(getCurrentBoardThunk(boardID));\n    // }\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n    const handleOpenBoard = (id, title) => {\n      dispatch(getCurrentBoardThunk(id));\n  \n      const normalizedTitle = title.toLowerCase().replace(/\\s+/g, '-');\n      navigate(normalizedTitle);\n    };\n\n  \n  return (\n    <>\n      <List>\n        {/* {boards.length !== 0 && */}\n        {boards.map(({ _id, title, icon, active }) => (\n        <BoardButton\n        key={_id}\n        name={title}\n        onClick={() => handleOpenBoard(_id, title)}\n        style={{ display: 'flex', justifyContent: 'space-between' }}\n        id={_id}\n        // icon={icon}\n        // isActive={active}s\n        />\n        ))} \n      </List>\n    </>\n  );\n}\n\nexport default ButtonList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AddBoardButton from 'components/AddBoardButton';\nimport { Title } from './BoardList.styled';\nimport {\n  // deleteBoardByIdThunk,\n  getAllBoardsThunk,\n  // getCurrentBoardThunk,\n} from 'redux/dashboards/thunks';\n// import { useAllBoards } from 'components/hooks';\n// import { useNavigate } from 'react-router-dom';\nimport ButtonList from 'components/ButtonList/ButtonList';\n\n// import EditBoardForm from 'components/EditBoardForm/EditBoardForm';\n// import Modal from 'components/Modal/Modal';\n\nfunction BoardList() {\n  // const allBoards = useAllBoards();\n  const dispatch = useDispatch();\n\n  // const navigate = useNavigate();\n  // const boards = useSelector(state => state.boards.boards);\n\n  useEffect(() => {\n    dispatch(getAllBoardsThunk());\n  }, [dispatch]);\n\n  // const handleOpenBoard = (id, title) => {\n  //   dispatch(getCurrentBoardThunk(id));\n\n  //   const normalizedTitle = title.toLowerCase().replace(/\\s+/g, '-');\n  //   navigate(normalizedTitle);\n  // };\n\n  // const handleEditBoard = (e, boardId) => {\n  //   e.stopPropagation();\n  //   console.log('handleEditBoard'); // Зупиняє подальше поширення кліку до обгортки\n  //   // Додайте код для редагування дошки з ID `boardId`\n  // };\n\n  // const handleDeleteBoard = (e, boardId) => {\n  //   e.stopPropagation();\n  //   dispatch(deleteBoardByIdThunk(boardId));\n  // };\n\n  return (\n    <>\n      <Title>My boards</Title>\n      <AddBoardButton />\n      {/* {boards.map(({ _id, title }) => (\n        <div\n          key={_id}\n          onClick={() => handleOpenBoard(_id, title)}\n          style={{ display: 'flex', justifyContent: 'space-between' }}\n        >\n          <span style={{ color: 'white' }}>{title}</span>\n          <div>\n            <button onClick={e => handleEditBoard(e, _id)}>Edit</button>\n            <button onClick={e => handleDeleteBoard(e, _id)}>Delete</button>\n          </div>\n        </div>\n      ))} */}\n      <ButtonList />\n      {/* {boards.length !== 0 && <ButtonList />} */}\n    </>\n  );\n}\n\nexport default BoardList;\n","import styled from '@emotion/styled';\n\nexport const Span = styled.span`\nfont-family: Poppins;\ncolor: var(--primary-text-color);\nfont-size: 16px;\nfont-weight: 500;\n`;\n\nexport const LogOutBtn = styled.button(`\ndisplay: flex;\ngap: 14px;\njustify-content: left;\nalign-items: center;\nmargin-left: 24px;\nwidth: 305px;\nheight: 32px;\nbackground-color: transparent;\nborder: none;\n`);\n\nexport const Icon = styled.svg`\nwidth: 32px;\nheight: 32px;\nstroke: var(--sidebar-logout-icon-color);\ncursor: pointer;\n`;\n","import sprite from '../../images/sprite.svg';\nimport { LogOutBtn, Span, Icon } from './LogoutBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { LogOutThunk } from 'redux/auth/thunks';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n\n  function onClick() {\n    dispatch(LogOutThunk());\n  }\n\n  return (\n    <>\n      <LogOutBtn onClick={onClick}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-login`} />\n        </Icon>\n        <Span>Log out</Span>\n      </LogOutBtn>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nalign-self: center;\nbackground-color: var(--sidebar-active-board-bg-color);\nborder-radius: 8px;\nwidth: 197px;\nheight: 238px;\nmargin-bottom: 28px;\nmargin-left: auto;\nmargin-right: auto;\npadding: 15px;\n\n@media screen and (min-width: 768px) {\n    width: 212px;\n    height: 272px;\n    padding: 20px;\n    margin: auto 24px 28px 24px;\n}\n`;\n\nexport const Text = styled.p`\nwidth: 150px;\nmargin-bottom: 19px;\ncolor: var(--primary-text-color);\nfont-size: 12px;\nline-height: 1.34;\nletter-spacing: -0.24px;\n\n@media screen and (min-width: 768px) {\n  font-size: 14px;\n  line-height: 1.4;\n  letter-spacing: -0.28px;\n}\n`;\n\nexport const Span = styled.span`\ncolor: var(--link-text-color);\n`;\n\nexport const Button = styled.button`\ncolor: var(--primary-text-color);\nwidth: 197px;\nfont-size: 12px;\nfont-weight: 500;\ndisplay: flex;\njustify-content: left;\nalign-items: center;\nheight: 20px;\nbackground-color: transparent;\nborder: none;\ngap: 8px;\npadding-bottom: 19px;\n`;\n\nexport const Svg = styled.svg`\nstroke: var(--primary-text-color);\n`;\n\nexport const Image = styled.img`\nmargin-bottom: 14px;\n`;\n\nexport const ButtonText = styled.span`\nfont-family: Poppins;\n// margin-left: 8px;\ncolor: var(--primary-text-color);\nfont-size: 12px;\nfont-weight: 500;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nwidth: 335px;\ncolor: var(--modal-bg-color);\n\n@media screen and (min-width: 768px) {\nwidth: 400px;\n}\n`;\n\nexport const Title = styled.h3`\nfont-size: 18px;\nfont-weight: 500;\ncolor: var(--modal-title-color);\nmargin-bottom: 24px;\n\n`;\n\nexport const Input = styled.input`\nfont-size: 14px;\nwidth: 302px;\nheight: 49px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\ncolor: var(--modal-primary-text-color);\nborder-radius: 8px;\nopacity: 0.4;\nmargin-bottom: 4px;\n&:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const Textarea = styled.textarea`\nfont-size: 14px;\nwidth: 302px;\npadding: 14px 18px;\nbackground-color: transparent;\nborder: 1px solid var(--modal-input-border-color);\nborder-radius: 8px;\ncolor: var(--modal-primary-text-color);\nopacity: 0.4;\nmin-height: 120px;\nmargin-bottom: 15px;\n\n&:focus {\n  outline: none;\n  opacity: 1;\n}\n`;\n\nexport const ErrorMessage = styled.p`\ncolor: var(--modal-btn-text-color);\nmargin-bottom: 10px;\ntext-align: center;\n`;","// import {  useDispatch } from 'react-redux';\nimport ButtonForForms from 'components/ButtonForForms/ButtonForForms';\nimport { Form, Input, Textarea, Title } from './NeedHelpForm.styled';\n// import { SendLetterThunk } from 'redux/thunks';\n\nconst NeedHelpForm = () => {\n  //   const dispatch = useDispatch();\n\n  //   const email='helenblyzniuk@gmail.com'\n  //   const text=\"need help\"\n\n  // dispatch(SendLetterThunk({email,text}))\n\n  return (\n    <>\n      <Form>\n        <Title>Need help</Title>\n\n        <Input placeholder=\"Email address\" />\n\n        <Textarea placeholder=\"Comment\"></Textarea>\n\n        <ButtonForForms textButton={() => 'Send'} />\n      </Form>\n    </>\n  );\n};\nexport default NeedHelpForm;\n","import React, { useState } from 'react';\n\nimport sprite from '../../images/sprite.svg';\nimport {\n  Button,\n  ButtonText,\n  Container,\n  Image,\n  Span,\n  Svg,\n  Text,\n} from './NeedHelp.styled';\nimport Modal from 'components/Modal/Modal';\nimport NeedHelpForm from 'components/NeedHelpForm/NeedHelpForm';\n\nconst NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Image\n            src={require(\"images/flower.png\")}\n            alt=\"flower\"\n        />\n\n        <Text>\n          If you need help with <Span>TaskPro</Span>, check out our support\n          resources or reach out to our customer support team.\n        </Text>\n\n        <Button onClick={openModal}>\n          <Svg width=\"20px\" height=\"20px\">\n            <use href={sprite +'#icon-help-circle'}></use>\n          </Svg>\n          <ButtonText> Need help? </ButtonText>\n        </Button>\n        \n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <NeedHelpForm />\n        </Modal>\n      </Container>\n    </>\n  );\n};\n\nexport default NeedHelp;","import styled from '@emotion/styled';\n\nexport const StyledWrapper = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\nmargin-bottom: 70px;\n\n@media screen and (min-width: 768px) {\n  margin-left: 24px;\n  margin-bottom: 60px;\n}\n&::before {\n  content: '';\n  width: 32px;\n  height: 32px;\n  background-color: var(--sidebar-logo--bg-color);\n  cursor: pointer;\n  border-radius: 8px;\n}\n`;\n\nexport const StyledLogo = styled.svg`\nfill: var(--primary-text-color);\nposition: absolute;\n`;\n\nexport const StyledSpanLogo = styled.span`\nfont-size: 16px;\nfont-style: normal;\nline-height: normal;\nfont-weight: 600;\nletter-spacing: -0.64px;\ncolor: var(--primary-text-color);\n`;\n","import sprite from 'images/sprite.svg';\nimport { StyledLogo, StyledWrapper, StyledSpanLogo } from './LogoComponent.styled';\n\nconst LogoComponent = () => {\n\n  return (\n      <StyledWrapper>\n        <StyledLogo width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logo-lightning`} />\n        </StyledLogo>\n        <StyledSpanLogo>Task Pro</StyledSpanLogo>\n      </StyledWrapper>\n  );\n};\n\nexport default LogoComponent;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 24px;\n  margin: 0;\n  background: var(--sidebar-bg-color);\n  transform: ${({ isOpen }) =>\n    isOpen ? 'translateX(0)' : 'translateX(-100%)'};\n  z-index: 100;\n  width: 260px;\n\n  // mobile\n\n  @media (max-width: 1440px) {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    transition: transform 500ms;\n  }\n`;\n","import BoardList from 'components/BoardList/BoardList';\nimport LogoutBtn from 'components/LogoutBtn/LogoutBtn';\nimport NeedHelp from 'components/NeedHelp/NeedHelp';\nimport LogoComponent from 'components/LogoComponent/LogoComponent';\nimport { Container } from './Sidebar.styled';\n\nfunction Sidebar({ isOpen }) {\n  return (\n    <Container className=\"sidebar\" isOpen={isOpen}>\n      <LogoComponent />\n      <BoardList />\n      <NeedHelp />\n      <LogoutBtn />\n    </Container>\n  );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Header from 'components/Header/Header';\n\n//-------vit--------\nimport NewDashboard from 'components/NewDashboard/NewDashboard';\nimport { selectCurrentBoard } from 'redux/dashboards/selectors';\n//-------vit--------\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { getAllBackgroundsThunk } from 'redux/dashboards/thunks';\nimport { useMediaQuery } from 'react-responsive';\n\nconst HomePage = () => {\n  // const user = useSelector(state => state.auth.user.theme);\n  const dispatch = useDispatch();\n  const [openedSidebar, setOpenedSidebar] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 1440 });\n\n  useEffect(() => {\n    const fetchBackgrounds = async () => {\n      try {\n        await dispatch(getAllBackgroundsThunk());\n      } catch (error) {\n        console.error('Помилка отримання фонів:', error);\n      }\n    };\n\n    fetchBackgrounds();\n  }, [dispatch]);\n\n  //-------vit--------\n  const currentBoard = useSelector(selectCurrentBoard);\n  //-------vit--------\n\n  useEffect(() => {\n    let timeoutId;\n\n    const handleOutsideClick = event => {\n      if (isMobile && openedSidebar) {\n        const sidebarElement = document.querySelector('.sidebar');\n        if (sidebarElement && !sidebarElement.contains(event.target)) {\n          setOpenedSidebar(false);\n        }\n      }\n    };\n\n    if (!isMobile) {\n      setOpenedSidebar(true);\n    }\n    if (openedSidebar) {\n      timeoutId = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [openedSidebar, isMobile]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <Sidebar isOpen={openedSidebar} />\n        <div\n          style={{\n            flexGrow: '1',\n            // height: '100vh',\n            // maxHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            // backgroundColor: 'var(--screens-page-bg-color)', //-----vit------\n          }}\n        >\n          <Header openSidebar={setOpenedSidebar} />\n\n          {/* -------vit-------- */}\n          {currentBoard ? <Outlet /> : <NewDashboard />}\n          {/* -------vit-------- */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["TitleStyled","styled","children","Wrapper","AvatarWrapper","IconUser","FileInputWrapper","FileInput","Inputs","PasswordInput","PasswordView","PasswordIcon","Svg","SendBtn","ErrorText","ErrorMessage","onClose","useState","showPassword","setShowPassword","onSubmit","e","preventDefault","initialValues","name","email","password","href","sprite","type","accept","autoFocus","placeholder","component","className","onClick","src","stroke","closeModal","isOpen","Modal","custom","Container","UserName","AvasarSetin","IconAvatar","showModal","setShowModal","toggleModal","IconBM","HeaderInfo","CustomSelect","CustomOptionList","props","open","CustomOption","selected","TheamBtn","IconDown","openSidebar","theme","setTheme","useLayoutEffect","document","documentElement","setAttribute","useTheme","selectedTheme","setSelectedTheme","isCustomOptionListOpen","setCustomOptionListOpen","useEffect","body","classList","add","remove","toggleCustomOptionList","Section","InfoContainer","InfoText","InfoTextAccent","disabled","alert","ButtonForm","textButton","ContainerSvg","ChildButtonNewBoard","textContent","width","height","NewBoardTitle","Input","IconTitle","IconWrap","selectedIconStyle","css","Icon","BackgroundTitle","BgIcon","BackgroundItem","isActive","BackgroundImage","timeoutId","useForm","mode","register","handleSubmit","setValue","errors","formState","selectedIcon","setSelectedIcon","backgrounds","useSelector","state","boards","selectedBackground","setSelectedBackground","dispatch","useDispatch","handleBackgroundSelect","backgroundId","toast","data","createNewBoardThunk","then","catch","error","id","onChange","event","newValue","target","value","toString","clearTimeout","setTimeout","title","message","map","icon","handleIconSelect","style","display","justifyContent","alignItems","backgroundItems","item","_id","previewURL","alt","renderBackgrounds","Text","Button","isModalOpen","setModalOpen","Title","navigate","useNavigate","board","currentBoard","console","log","boardData","updateBoardByIdThunk","unwrap","response","toLowerCase","ActiveSvg","IconButton","IconsWrapper","active","setActive","click","getAllBoardsThunk","getCurrentBoardThunk","color","boardId","stopPropagation","handleEditBoard","deleteBoardByIdThunk","handleDeleteBoard","List","normalizedTitle","replace","handleOpenBoard","Span","LogOutBtn","LogOutThunk","Image","ButtonText","Form","Textarea","setIsModalOpen","require","StyledWrapper","StyledLogo","StyledSpanLogo","openedSidebar","setOpenedSidebar","isMobile","useMediaQuery","maxWidth","fetchBackgrounds","getAllBackgroundsThunk","selectCurrentBoard","handleOutsideClick","sidebarElement","querySelector","contains","addEventListener","removeEventListener","flexGrow","flexDirection"],"sourceRoot":""}