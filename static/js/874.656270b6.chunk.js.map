{"version":3,"file":"static/js/874.656270b6.chunk.js","mappings":"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","sources":["components/BoardPage/Card/Card.styled.js","components/BoardPage/PopUp/PopUp.styled.js","components/BoardPage/PopUp/PopUp.jsx","components/BoardPage/Card/Card.jsx","components/BoardPage/Column/Column.styled.js","components/BoardPage/AddNewCardBtn/AddNewCardBtn.styled.js","components/BoardPage/AddNewCardBtn/AddNewCardBtn.js","components/BoardPage/ColumnModal/ColumnModal.styled.js","components/BoardPage/ColumnModal/ColumnModal.jsx","components/common/Modal/Modal.styled.jsx","components/common/Modal/Modal.jsx","components/Modals/Modals.styled.jsx","components/Modals/ModalsCommon/TitleModal.jsx","components/Modals/ModalsCommon/LabelModal.jsx","components/Modals/ModalsCommon/InputModal.jsx","components/Modals/ModalsCommon/TextareaModal.jsx","components/Modals/ModalsCommon/ImgModal.jsx","components/Modals/ModalsCommon/WrapperComponentModal.jsx","components/Modals/ModalsCommon/ButtonModal.jsx","components/Modals/ModalsCommon/SvgModal.jsx","components/Modals/ModalsCommon/SvgPlusModal.jsx","components/Modals/ModalsCommon/ButtonPlusModal.jsx","components/Modals/ModalsCommon/Calendar/Calendar.jsx","components/Modals/ModalAddEditCard/radioBattons.js","components/Modals/ModalAddEditCard/ModalAddEditCard.jsx","components/BoardPage/Column/Column.jsx","components/BoardPage/Board/Board.styled.js","components/BoardPage/Board/Board.jsx","components/ModalFilters/FiltersModal.styled.js","components/ModalFilters/FilterModal.js","components/MainDashboard/MainDashboard.js","pages/ScreenPage/ScreenPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nconst CustomCard = styled.div`\n  max-height: 154px;\n  position:relative;\n  margin-bottom: 9px;\n  border-radius: 8px;\n  background-color: var(--card-bg-color);\n  color: #fff;\n  padding: 14px 24px;\n  border-left: 4px solid ${props => props.borderColor};\n  &:hover{\n    background-color: var(--card-hover);\n \n  }\n\n  @media screen and (max-width: 300px) {\n    min-width: 290px;\n} \n  @media screen  and (max-width: 374px) {\n  min-width: 300px;\n} \n  @media screen and (min-width: 375px) {\n  min-width:334px;\n}\n`;\n\nconst TruncatedText = styled.div`\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  color: var(--card-secondary-text-color);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  margin-top: 8px;\n  line-height: 1.5;\n  height: 38px;\n  border-bottom: 1px solid var(--card-border-color);\n`;\n\nconst PriorityCircle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50px;\n`;\n\nconst CardContentWrapper = styled.div`\nmargin-bottom: 14px;\nfont-size: 14px;\nfont-family: 'Poppins';\ntext-transform: capitalize;\n`;\n\nconst TitleTypography = styled.h4`\n  font-size: 14px;\n  font-family: 'Poppins';\n  color: var(--card-title-color);\n  text-transform: capitalize;\n`;\nconst PriorityTypography = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-secondary-text-color);\n`;\nconst PriorityInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-primary-text-color);\n`;\nconst DeadlineTypography = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-secondary-text-color);\n`;\nconst DeadlineInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var(--card-primary-text-color);\n`;\n\nconst PriorityWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\nconst DedlineWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst PriorityDateItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst PriorityDateContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  @media screen and (max-width: 300px) and (max-width: 374px) {\n    gap:5px;\n} \n\n@media screen and (min-width: 375px) {\n   gap:23px;\n  \n`;\nconst BottomInfo = styled.div`\n  display: flex;\n  padding-top: 14px;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst Icons = styled.div`\n  display: inline-flex;\n  gap: 8px;\n`;\n\nconst PopUpMenu = styled.div`\n  position: absolute;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  width: 160px;\n  padding: 10px;\n  max-height:85px;\n  background-color: var(--progress-popup-bg-color);\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  top: 20%;\n  right: 25%;\n`;\n\nconst ScrollContent = styled.div`\noverflow-y: ${props => props.scrollable ? 'auto' : 'hidden'};\ndisplay: flex;\nflex-direction: column;\ngap: 6px;\n\n::-webkit-scrollbar {\n  width: 8px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-thumb {\n  // background-color: var(--column-add-btn-bg-color);\n  background-color: var(--vertical-scroll-bar-bg-color);\n  border-radius: 4px;\n  // height: 10px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-track {\n  // background-color: var(--screens-page-bg-color);\n  background-color: var(--vertical-scroll-slider-bg-color);\n  border-radius: 4px;\n  margin-left:8px;\n}\n\n`;\n\n\nconst WhiteIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--card-icon-color);\n  stroke-width: 2;\n  fill: none;\n  &:hover {\n    stroke: var(--progress-popup-text-color-hover);\n    cursor: pointer\n  }\n`;\n\nconst BellIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--progress-popup-text-color-hover);\n  stroke-width: 2;\n  fill: none;\n`;\n\nconst PopUpItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--progress-popup-text-color);\n  &:hover {\n    color: var(--progress-popup-text-color-hover);\n    stroke: var(--progress-popup-text-color-hover);\n    cursor: pointer;\n  }\n`;\n\n\n// Vit\nconst BackDropHiden = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--progress-backdrop);\n  overflow-y: auto;\n  z-index: 1;\n  width: 100%;\n`;\n\n\nexport {\n  PriorityCircle,\n  TruncatedText,\n  CustomCard,\n  CardContentWrapper,\n  TitleTypography,\n  PriorityTypography,\n  DeadlineTypography,\n  PriorityWrapper,\n  DedlineWrapper,\n  PriorityDateContainer,\n  PriorityDateItem,\n  WhiteIcon,\n  Icons,\n  BottomInfo,\n  PriorityInfo,\n  DeadlineInfo,\n  PopUpMenu,\n  PopUpItem,\n  BellIcon,\n  BackDropHiden,\n  ScrollContent\n};\n","import styled from 'styled-components';\n\n\nexport const PopUpItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-right:10px;\n  color: var(--progress-popup-text-color);\n    &:hover {\n      color: var(--progress-popup-text-color-hover);\n      stroke: var(--progress-popup-text-color-hover);\n      cursor: pointer;\n\n  }\n`;\n\n","import React from 'react';\nimport { PopUpItemWrapper } from './PopUp.styled';\nimport { WhiteIcon } from '../Card/Card.styled';\n\nconst CustomPopUpItem = ({ text, iconHref, columnId, handleMoveTask }) => {\n  return (\n    <PopUpItemWrapper\n      onClick={() => {\n        handleMoveTask(columnId);\n      }}\n    >\n      <span>{text}</span>\n      <WhiteIcon className=\"icon-search\">\n        <use href={iconHref}></use>\n      </WhiteIcon>\n    </PopUpItemWrapper>\n  );\n};\n\nexport default CustomPopUpItem;\n","import React from 'react';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport {\n  PriorityCircle,\n  TruncatedText,\n  CustomCard,\n  CardContentWrapper,\n  TitleTypography,\n  PriorityTypography,\n  DeadlineTypography,\n  PriorityWrapper,\n  DedlineWrapper,\n  PriorityDateContainer,\n  PriorityDateItem,\n  WhiteIcon,\n  Icons,\n  BottomInfo,\n  DeadlineInfo,\n  PriorityInfo,\n  PopUpMenu,\n  BackDropHiden,\n  BellIcon,\n  ScrollContent\n} from '../Card/Card.styled';\nimport CustomPopUpItem from '../PopUp/PopUp';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateTasksColumnByIdThunk,\n  deleteTaskByIdThunk,\n} from 'redux/dashboards/thunks';\nimport dayjs from 'dayjs';\n\nconst TaskCard = ({\n  task,\n  columnId,\n  togglePopUpMenu,\n  isPopupOpen,\n  idTask,\n  openAddEditCardModal,\n  setNameButton,\n  setIdEditTask,\n  setTitleEditTask,\n  setTextEditTask,\n  setPriorityEditTask,\n}) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(state => state.boards.currentBoard.columns);\n  const columnsLength = useSelector(state => state.boards.currentBoard.columns.length);\n\n  const selectedTask = task;\n  if (!selectedTask) {\n    return null;\n  }\n\n  let priorityBorderColor;\n  let priorityCircleColor;\n\n  if (selectedTask.priority === 'low') {\n    priorityCircleColor = 'var(--filter-low-color)';\n    priorityBorderColor = 'var(--filter-low-color)';\n  } else if (selectedTask.priority === 'medium') {\n    priorityCircleColor = 'var(--filter-medium-color)';\n    priorityBorderColor = 'var(--filter-medium-color)';\n  } else if (selectedTask.priority === 'high') {\n    priorityCircleColor = 'var(--filter-high-color)';\n    priorityBorderColor = 'var(--filter-high-color)';\n  } else {\n    priorityCircleColor = 'var(--filter-without-priority-color)';\n    priorityBorderColor = 'var(--filter-without-priority-color)';\n  }\n\n\n  const today = new Date().toLocaleDateString('en-GB');\n  const formattedSelectedDeadline = dayjs(selectedTask.deadline).format(\n    'DD/MM/YYYY'\n  );\n  const isTodayDeadline = formattedSelectedDeadline === today;\n  const listForPopup = columns.filter(column => column._id !== columnId);\n  console.log('listForPopup: ', listForPopup);\n  const isScrollable = listForPopup.length > 3;\n\n  const handleMoveTask = columnId => {\n    console.log('handleRemoveTask to', columnId);\n    dispatch(\n      updateTasksColumnByIdThunk({\n        idTask: task._id,\n        body: { newColumnId: columnId },\n      })\n    );\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteTaskByIdThunk(idTask))\n      .unwrap()\n      .then(data => {\n        console.log('Task deleted successfully:', data);\n      })\n      .catch(error => {\n        console.error('Error deleting task:', error);\n      });\n  };\n\n  return (\n    <CustomCard borderColor={priorityBorderColor}>\n      <CardContentWrapper>\n        <TitleTypography>{selectedTask.title}</TitleTypography>\n        <TruncatedText>\n          <LinesEllipsis\n            text={selectedTask.text}\n            maxLine=\"2\"\n            ellipsis=\"...\"\n            trimRight\n            basedOn=\"words\"\n          />\n        </TruncatedText>\n        <BottomInfo>\n          <PriorityDateContainer>\n            <PriorityDateItem>\n              <PriorityTypography>Priority:</PriorityTypography>\n              <PriorityWrapper>\n                <PriorityCircle\n                  style={{ backgroundColor: priorityCircleColor }}\n                />\n                <PriorityInfo>{selectedTask.priority}</PriorityInfo>\n              </PriorityWrapper>\n            </PriorityDateItem>\n            <DedlineWrapper>\n              <DeadlineTypography>Deadline:</DeadlineTypography>\n              <DeadlineInfo>{formattedSelectedDeadline}</DeadlineInfo>\n            </DedlineWrapper>\n          </PriorityDateContainer>\n          <Icons>\n            {isTodayDeadline && (\n              <BellIcon className=\"icon-search\">\n                <use href={sprite + '#icon-bell'} style={{ color: 'yellow' }} />\n              </BellIcon>\n            )}\n            {columnsLength > 1 && (\n              <WhiteIcon\n                className=\"icon-search\"\n                onClick={() => {\n                  togglePopUpMenu(task._id);\n                }}\n              >\n                <use href={sprite + '#icon-arrow-circle-broken-right'}></use>\n              </WhiteIcon>\n            )}\n            <WhiteIcon\n              className=\"icon-search\"\n              onClick={() => {\n                openAddEditCardModal();\n                setNameButton('editCard');\n                setIdEditTask(task._id);\n                setTitleEditTask(task.title);\n                setTextEditTask(task.text);\n                // setTitleEditTask(task.title);\n                setPriorityEditTask(task.priority);\n              }}\n            >\n              <use href={sprite + '#icon-pencil-01'}></use>\n            </WhiteIcon>\n            <WhiteIcon className=\"icon-search\" onClick={handleDeleteCard}>\n              <use href={sprite + '#icon-trash'}></use>\n            </WhiteIcon>\n          </Icons>\n        </BottomInfo>\n      </CardContentWrapper>\n\n      {isPopupOpen && (\n        <BackDropHiden\n          onClick={() => togglePopUpMenu(task._id)}\n        ></BackDropHiden>\n      )}\n      {isPopupOpen && (\n        <PopUpMenu>\n          <ScrollContent scrollable={isScrollable}>\n            {listForPopup.map(({ title, _id }) => (\n              <CustomPopUpItem\n                key={_id}\n                text={title}\n                columnId={_id}\n                handleMoveTask={handleMoveTask}\n                iconHref={sprite + '#icon-arrow-circle-broken-right'}\n              />\n            ))}\n          </ScrollContent>\n        </PopUpMenu>\n      )}\n    </CustomCard>\n  );\n};\n\nexport default TaskCard;","import styled from '@emotion/styled';\n\nconst WhiteIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--card-icon-color);\n  stroke-width: 2;\n  fill: none;\n  &:hover{\n    stroke:var(--progress-popup-text-color-hover);\n    cursor: pointer;\n  }\n`;\nconst Icons = styled.div`\n  display: inline-flex;\n  gap: 8px;\n  margin-right: 27px;\n`;\n\n\nconst Title = styled.h3`\n  margin-left: 20px;\n  color: var(--card-title-color);\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-transform: capitalize;\n`;\n\nconst TitleIcon = styled.div`\n  display: inline-flex;\n  background-color: var(--card-bg-color);\n  border-radius: 8px;\n  width: 338px;\n  padding-top: 18px;\n  padding-bottom: 17px;\n  margin-bottom: 14px;\n  align-items: center;\n  justify-content: space-between;\n  \n  @media screen and (max-width: 300px) {\n    min-width: 290px;\n} \n  @media screen  and (max-width: 374px) {\n  width: 300px;\n} \n  @media screen and (min-width: 375px) {\n  width:334px;\n\n}\n`;\n\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n`;\n\n\nconst ScrollContainer = styled.div`\n  margin-bottom:14px;\n  overflow-y: hidden;\n  @media screen and (min-width: 375px) {\n    height:100%;\n  }\n`;\n\n\nconst ScrollContent = styled.div`\noverflow-y: auto;\npadding-right: 8px;\nbox-sizing: border-box;\nheight:66vh;\n\n\n::-webkit-scrollbar {\n  width: 8px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: var(--vertical-scroll-bar-bg-color);\n  border-radius: 4px;\n  height: 10px;\n  margin-left:8px;\n}\n\n::-webkit-scrollbar-track {\n  background-color: var(--vertical-scroll-slider-bg-color);\n  border-radius: 4px;\n  height: 130px;\n  margin-left:8px;\n}\n\n`;\n\nexport {\n  WhiteIcon,\n  ScrollContainer,\n  ScrollContent,\n  Title,\n  TitleIcon,\n  ColumnContainer,\n  Icons,\n};\n","import styled from '@emotion/styled';\n\nexport const BtnAddNewCard = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 334px;\n  height: 56px;\n  // margin-top: 9px;\n  // margin-left: auto;\n\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--column-add-btn-text-color);\n\n  border: none;\n  border-radius: 8px;\n  background-color: var(--column-add-btn-bg-color);\n\n  transition-property: background-color, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: var(--column-add-btn-bg-color-hover);\n    transform: background-color;\n  }\n\n  @media screen and (max-width: 300px) {\n    min-width: 290px;\n} \n@media screen  and (max-width: 374px) {\n  width: 300px;\n} \n  @media screen and (min-width: 375px) {\n  width:334px;\n}\n\n`;\n\nexport const WrapSvg = styled.div`\n  margin-right: 8px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  content: '';\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  background-color: var(--column-add-btn-plus-bg-color);\n`;\n\nexport const SvgIconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--column-add-btn-plus-color);\n  background-color: var(--column-add-btn-plus-bg-color);\n`;\n","import React from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { BtnAddNewCard, SvgIconPlus, WrapSvg } from './AddNewCardBtn.styled';\n\nconst AddNewCard = ({ openModal, setNameButton }) => {\n  \n  return (\n    <>\n      <BtnAddNewCard\n        type=\"button\"\n        name=\"addNewCard\"\n        onClick={e => {\n          openModal();\n          setNameButton(e.target.name);\n        }}\n      >\n        <WrapSvg>\n          <SvgIconPlus>\n            <use href={sprite + '#icon-plus'}></use>\n          </SvgIconPlus>\n        </WrapSvg>\n        Add another card\n      </BtnAddNewCard>      \n    </>\n  );\n};\n\nexport default AddNewCard;\n","import styled from '@emotion/styled';\n\nconst Input = styled.input`\ndisplay: flex;\nwidth: 302px;\n// hight:50px;\nmargin-top: 24px;\nmargin-bottom: 24px;\npadding: 14px 18px 14px;\nalign-items: center;\nborder-radius: 8px;\nborder: 1px solid var(--modal-input-border-color);\nopacity: 0.4;\nbox-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\nbackground-color: var(--modal-bg-color);\ncolor: var(--modal-input-text-color);\n::placeholder {\n  color: var(--modal-input-placeholder-color);\n}\n&:hover, &:focus {\n  outline: none;\n  border-color: var(--modal-input-border-color);\n  opacity: 1;\n}\n`;\n\n\nconst BtnAdd = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 302px;\n  height: 49px;\n\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-btn-text-color);\n\n  border: none;\n  border-radius: 8px;\n  background: var(--modal-btn-bg-color);\n\n  transition-property: background-color, transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: var(--modal-btn-bg-color-hover);\n    transform: background-color;\n  }\n`;\n\n const WrapSvg = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  content: '';\n  width: 28px;\n  height: 28px;\n  border-radius: 8px;\n  background-color: var(--modal-plus-btn-bg-color);\n`;\n\n const SvgIconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--modal-selected-plus-color);\n//   background-color: var(--modal-plus-btn-bg-color);\n`;\n\nexport {\n    Input,\n    BtnAdd,\n    WrapSvg,\n    SvgIconPlus\n}","import Modal from '../../../components/Modal/Modal';\nimport React, { useState } from 'react';\nimport { Input, BtnAdd, WrapSvg, SvgIconPlus } from './ColumnModal.styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\n\n\nconst ColumnModal = ({ closeModal, isOpen, name, inputPlaceholder, actionThunk, actionPayload, buttonText, initialValue }) => {\n  const [inputValue, setInputValue] = useState(initialValue || ''); // Use initialValue if provided\n  const dispatch = useDispatch();\n  const boardId = useSelector(state => state.boards.currentBoard._id);\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n      toast.error('Column name can not be empty');\n    } else {\n      dispatch(\n        actionThunk({\n          boardId,\n          ...actionPayload(inputValue),\n        })\n      );\n      setInputValue('');\n      closeModal();\n    }\n  }\n\n  return (\n    <Modal onClose={closeModal} isOpen={isOpen}>\n      <h2>{name}</h2>\n      <Input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder={inputPlaceholder}\n      />\n\n      <BtnAdd type=\"submit\" onClick={handleSubmit}>\n        <WrapSvg>\n          <SvgIconPlus>\n            <use href={sprite + '#icon-plus'}></use>\n          </SvgIconPlus>\n        </WrapSvg>\n        {buttonText}\n      </BtnAdd>\n    </Modal>\n  );\n};\nexport default ColumnModal;\n\n","import styled from '@emotion/styled';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #15151530;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n`;\n\nexport const ModalContent = styled.div`\nposition: ${props => props.position || 'absolute'};\n  background-color: var(--modal-bg-color);\n  padding: 24px;\n  border-radius: 8px;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: ${props => (props.custom ? '400px' : '350px')};\n  }\n\n  @media screen and (max-height: 500px) and (orientation: landscape) {\n    position: sticky;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%, 0%);\n  }\n\n  /* box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); */\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalBackdrop, ModalContent } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code !== 'Escape') {\n        return;\n      }\n      onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <ModalBackdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </ModalBackdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ModalTitle = styled.p`\n  font-size: ${props => props.fontSize || '18px'};\n  font-weight: ${props => props.fontWeight || '500'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  margin-bottom: ${props => props.marginBottom || '24px'};\n  color: ${props => props.color || 'var(--modal-title-color)'};\n`;\n\nexport const ModalLabel = styled.label`\n  display: ${props => props.display || 'flex'};\n  flex-direction: ${props => props.flexDirection || 'column'};\n  align-items: ${props => props.alignItems || 'center'};\n  margin-bottom: ${props => props.marginBottom || '24px'};\n  text-align: ${props => props.textAlign || 'center'};\n`;\n\nexport const ModalInput = styled.input`\n  display: ${props => props.display || 'flex'};\n  width: ${props => props.width || '100%'};\n  max-width: ${props => props.maxWidth || '302px'};\n  height: ${props => props.height || '46px'};\n  border: ${props =>\n    props.border || '1px solid var(--modal-input-border-color)'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  padding-top: ${props => props.padding || '14px'};\n  padding-right: ${props => props.padding || '18px'};\n  padding-bottom: ${props => props.padding || '14px'};\n  padding-left: ${props => props.padding || '18px'};\n  font-size: ${props => props.fontSize || '14px'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  background-color: ${props =>\n    props.backgroundColor || 'var(--modal-input-bg-color)'};\n  color: ${props => props.color || 'var(--modal-input-text-color)'};\n  outline: transparent;\n  opacity: 0.4;\n  transition: opacity var(--timing-function);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  cursor: text;\n\n  &:hover,\n  &:focus {\n    border-color: var(--modal-input-border-color);\n    opacity: 1;\n  }\n`;\n\nexport const ModalTextarea = styled.textarea`\n  /* display: ${props => props.display || 'flex'}; */\n  width: ${props => props.width || '100%'};\n  max-width: ${props => props.maxWidth || '352px'};\n  height: ${props => props.height || '120px'};\n  border: ${props =>\n    props.border || '1px solid var(--modal-input-border-color)'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  padding-top: ${props => props.padding || '14px'};\n  padding-right: ${props => props.padding || '18px'};\n  padding-bottom: ${props => props.padding || '14px'};\n  padding-left: ${props => props.padding || '18px'};\n  font-size: ${props => props.fontSize || '14px'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  background-color: var(--modal-input-bg-color);\n  color: var(--modal-input-text-color);\n  outline: transparent;\n  opacity: 0.4;\n  transition: opacity var(--timing-function);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  resize: ${props => props.resize || 'none'};\n  cursor: text;\n  overflow-y:auto;\n  &:hover,\n  &:focus {\n    border-color: var(--modal-input-border-color);\n    opacity: 1;\n  }\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--vertical-scroll-bar-bg-color);\n    border-radius: 4px;\n    height: 60px;\n    margin-right: 8px; \n  }\n  \n  ::-webkit-scrollbar-track {\n    background-color: var(--vertical-scroll-slider-bg-color);\n    border-radius: 4px;\n    margin-right:8px;\n    margin-top:11px;\n    margin-bottom:11px;\n  }\n\n`;\n\nexport const ModalSvg = styled.svg`\n  width: ${props => props.width || '18px'};\n  height: ${props => props.height || '18px'};\n  stroke: ${props => props.stroke || 'var(--modal-selected-plus-color)'};\n  cursor: pointer;\n  &:hover,\n  &:focus,\n  &:checked {\n    stroke: ${props => props.stroke || 'var(--modal-selected-plus-color)'};\n  }\n`;\n\nexport const ModalWrapperComponent = styled.div`\n  display: ${props => props.display || 'flex'};\n  justify-content: ${props => props.justifyContent || 'start'};\n  align-items: ${props => props.alignItems || 'center'};\n  flex-wrap: ${props => props.flexWrap || 'wrap'};\n  gap: ${props => props.gap || '8px'};\n  max-width: ${props => props.maxWidth || '100%'};\n  margin-bottom: ${props => props.marginBottom || '24px'};\n`;\n\nexport const ModalImg = styled.div`\n  position: relative;\n  width: ${props => props.width || '28px'};\n  height: ${props => props.height || '28px'};\n  background-color: ${props => props.backgroundColor || 'transparent'};\n  border: ${props =>\n    props.border || '1px solid var(--modal-input-border-color)'};\n  border-radius: ${props => props.borderRadius || '6px'};\n  cursor: pointer; \n`;\n\nexport const ModalButton = styled.button`\n  position: ${props => props.position || 'static'};\n  top: ${props => props.top || '0px'};\n  right: ${props => props.right || '0px'};\n  display: ${props => props.display || 'flex'};\n  justify-content: ${props => props.justifyContent || 'center'};\n  align-items: ${props => props.alignItems || 'center'};\n  width: ${props => props.width || '100%'};\n  height: ${props => props.height || '49px'};\n  padding: ${props => props.padding || '10px 0px'};\n  border: ${props => props.border || 'none'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  font-family: 'Poppins', sans-serif;\n  font-weight: ${props => props.fontWeight || '500'};\n  font-size: ${props => props.fontSize || '14px'};\n  line-height: ${props => props.lineHeight || '1.2'};\n  background-color: ${props =>\n    props.backgroundColor || 'var(--modal-btn-bg-color)'};\n  color: ${props => props.color || 'var(--modal-btn-text-color)'};\n  margin-top: ${props => props.marginTop || '0px'};\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n\n  &:hover,\n  &:focus {\n    background-color: ${props =>\n      props.backgroundColorHover || 'var(--modal-btn-bg-color-hover)'};\n    outline: none;\n  }\n`;\n\nexport const ModalSvgPlus = styled.div`\n  display: ${props => props.display || 'flex'};\n  justify-content: ${props => props.justifyContent || 'start'};\n  align-items: ${props => props.alignItems || 'center'};\n  width: ${props => props.width || '28px'};\n  height: ${props => props.height || '28px'};\n  padding: ${props => props.padding || '7px'};\n  background-color: ${props =>\n    props.backgroundColor || 'var(--modal-plus-btn-bg-color)'};\n  border-radius: ${props => props.borderRadius || '8px'};\n  margin-right: ${props => props.marginRight || '8px'};\n`;\n","import { ModalTitle } from '../Modals.styled';\n\nconst TitleModal = props => {\n  return <ModalTitle {...props} />;\n};\n\nexport default TitleModal;\n","import PropTypes from 'prop-types';\nimport { ModalLabel } from '../Modals.styled';\n\nconst LabelModal = ({ children, ...rest }) => {\n  return <ModalLabel {...rest}>{children}</ModalLabel>;\n};\n\nLabelModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default LabelModal;\n","import { ModalInput } from '../Modals.styled';\n\nconst InputModal = ({ onChange, value, ...rest }) => {\n  return <ModalInput onChange={onChange} value={value} {...rest} />;\n};\n\nexport default InputModal;\n","import { ModalTextarea } from '../Modals.styled';\n\nconst TextareaModal = props => {\n  return <ModalTextarea {...props} />;\n};\n\nexport default TextareaModal;\n","import { ModalImg } from '../Modals.styled';\n\nconst ImgModal = props => {\n  return <ModalImg {...props} />;\n};\n\nexport default ImgModal;\n","import PropTypes from 'prop-types';\nimport { ModalWrapperComponent } from '../Modals.styled';\n\nconst WrapperComponentModal = ({ children, ...rest }) => {\n  return <ModalWrapperComponent {...rest}>{children}</ModalWrapperComponent>;\n};\n\nWrapperComponentModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default WrapperComponentModal;\n","import { ModalButton } from '../Modals.styled';\n\nconst ButtonModal = ({ onClick, name, children, type, ...rest }) => {\n  return (\n    <ModalButton onClick={onClick} name={name} type={type} {...rest}>\n      {children}\n    </ModalButton>\n  );\n};\n\nexport default ButtonModal;\n","import PropTypes from 'prop-types';\nimport { ModalSvg } from '../Modals.styled';\n\nconst SvgModal = ({ children, ...rest }) => {\n  return <ModalSvg {...rest}>{children}</ModalSvg>;\n};\n\nSvgModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SvgModal;\n","import { ModalSvgPlus } from '../Modals.styled';\n\nconst SvgPlusModal = ({ children, ...rest }) => {\n  return <ModalSvgPlus {...rest}>{children}</ModalSvgPlus>;\n};\n\nexport default SvgPlusModal;\n","import ButtonModal from './ButtonModal';\nimport SvgModal from './SvgModal';\nimport SvgPlusModal from './SvgPlusModal';\n// import WrapperComponentModal from \"./WrapperComponentModal\";\nimport sprite from '../../../images/sprite.svg';\n\nconst ButtonPlusModal = ({ onClick, name, children, type, ...rest }) => {\n  return (\n    <ButtonModal onClick={onClick} name={name} type={type} {...rest}>\n      <SvgPlusModal>\n        <SvgModal>\n          <use href={sprite + '#icon-plus'} />\n        </SvgModal>\n      </SvgPlusModal>\n      {children}\n    </ButtonModal>\n  );\n};\n\nexport default ButtonPlusModal;\n","import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\n\nimport sprite from '../../../../images/sprite.svg';\nimport SvgModal from '../SvgModal';\nimport { DesktopDatePicker } from '@mui/x-date-pickers';\n\nexport const Calendar = ({ deadline }) => {\n  dayjs().format();\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DesktopDatePicker\n          defaultValue={dayjs(new Date())}\n          views={['month', 'day']}\n          disablePast={true}\n          onChange={date => {\n            const selectedDate = date.$d;\n            const formattedDate = new Date(Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()));\n            const formattedDateString = formattedDate.toISOString().split('T')[0];\n            deadline(formattedDateString);\n          }}\n          slots={{\n            openPickerIcon: () => (\n              <SvgModal\n                stroke=\"var(--modal-date-text-color)\"\n                width=\"18px\"\n                height=\"18px\"\n              >\n                <use href={sprite + '#icon-chevron-down'} />\n              </SvgModal>\n            ),\n          }}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                color: 'var(--modal-primary-text-color)',\n                backgroundColor: 'var(--modal-calendar-bg-color)',\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  textAlign: ' center',\n                  width: '125px',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  width: '100%',\n                  padding: '0',\n\n                  margin: '0',\n                  borderBottomWidth: '2px',\n                  borderBottomStyle: 'solid',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '190px',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiSvgIcon-root': {\n                  fill: 'var(--modal-primary-text-color)',\n                  height: '18px',\n                },\n                '& .MuiTypography-root': {\n                  color: 'var(--modal-secondary-text-color)',\n                  height: '24px',\n                  marginTop: '14px',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n                '& .MuiButtonBase-root': {\n                  color: 'var(--modal-primary-text-color)',\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: 'var(--modal-date-text-color)',\n                  color: 'var(--modal-input-bg-color)',\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: 'var(--modal-date-text-color)',\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': {\n                  width: '103px',\n                  height: '16px',\n                  color: 'var(--modal-date-text-color)',\n                  fontFamily: 'Poppins, sans-serif',\n                  fontSize: '14px',\n                  fontWeight: '500',\n                  padding: '0px',\n                  margin: '0px',\n                },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};\n","export const radioButtons = [\n  { priority: 'low', color: 'var(--filter-low-color)' },\n  { priority: 'medium', color: 'var(--filter-medium-color)' },\n  { priority: 'high', color: 'var(--filter-high-color)' },\n  { priority: 'without', color: 'var(--filter-without-priority-color)' },\n];\n","import { Modal } from 'components/common/Modal';\nimport sprite from '../../../images/sprite.svg';\nimport { Formik, Form } from 'formik';\nimport TitleModal from '../ModalsCommon/TitleModal';\nimport LabelModal from '../ModalsCommon/LabelModal';\nimport InputModal from '../ModalsCommon/InputModal';\nimport TextareaModal from '../ModalsCommon/TextareaModal';\nimport ImgModal from '../ModalsCommon/ImgModal';\nimport WrapperComponentModal from '../ModalsCommon/WrapperComponentModal';\nimport ButtonPlusModal from '../ModalsCommon/ButtonPlusModal';\nimport { Calendar } from '../ModalsCommon/Calendar/Calendar';\nimport { useEffect, useState } from 'react';\nimport { CloseButton, CloseSVG } from 'components/Modal/Modal.styled';\nimport { radioButtons } from './radioBattons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  createNewTaskThunk,\n  updateTaskByIdThunk,\n} from 'redux/dashboards/thunks';\nimport { toast } from 'react-hot-toast';\n\nconst ModalAddEditCard = ({\n  closeModal,\n  nameButton,\n  columnId,\n  idEditTask,\n  titleEditTask,\n  textEditTask,\n  priorityEditTask,\n  // deadlineEditTask,\n}) => {\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n  const boardId = useSelector(state => state.boards.currentBoard._id);\n  \n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [priority, setPriority] = useState('without');\n  const today = new Date().toISOString();\n  const [deadline, setDeadline] = useState('');\n\n\n  const handleChangeTitle = e => {\n    const { value } = e.currentTarget;\n    setTitle(value);\n  };\n\n  const handleChangeDescription = e => {\n    const { value } = e.currentTarget;\n    setText(value);\n  };\n\n  const onChangeColor = e => {\n    setPriority(e.target.value);\n  };\n\n  const handleSubmitAdd = async e => {\n    e.preventDefault();\n    if (title.trim() === '') {\n      toast.error('Enter title');\n      return;\n    } else if (text.trim() === '') {\n      toast.error('Enter Description');\n      return;\n    } else {\n      try {\n        const deadlineToSend = !deadline ? today : deadline; \n        await dispatch(\n          createNewTaskThunk({\n            title,\n            text,\n            priority,\n            deadline: deadlineToSend, \n            boardId,\n            columnId,\n          })\n        )\n          .unwrap()\n          .then(async res => {\n            await res;\n            reset();\n            closeModal();\n            return;\n          });\n      } catch (error) {\n        toast.error('Failed to add card');\n      }\n    }\n  };\n  \n\n  const handleSubmitEdit = async e => {\n    e.preventDefault();\n    if (title.trim() === '') {\n      toast.error('Enter title');\n      return;\n    } else if (text.trim() === '') {\n      toast.error('Enter Description');\n      return;\n    } else {\n      try {\n        const deadlineToSend = !deadline ? today : deadline; \n        await dispatch(\n          updateTaskByIdThunk({\n            idTask: idEditTask,\n            body: { title, text, priority,  deadline: deadlineToSend,  boardId, columnId },\n          })\n        )\n          .unwrap()\n          .then(async res => {\n            await res;\n            reset();\n            closeModal();\n            return;\n          });\n      } catch (error) {\n        toast.error('Failed to edit');\n      }\n    }\n  };\n\n\n  const reset = () => {\n    setTitle('');\n    setText('');\n    setDeadline('');\n  };\n\n\n  useEffect(() => {\n    if (nameButton === 'editCard') {\n      setVisible(true);\n      setTitle(titleEditTask || ''); \n      setText(textEditTask || '');\n      setPriority(priorityEditTask || 'without'); \n      // setDeadline(deadlineEditTask || '')\n    }\n  }, [nameButton, titleEditTask, textEditTask, priorityEditTask,\n    // deadlineEditTask\n  ]);\n\n  return (\n    <Modal width=\"350px\" height=\"522px\" onClose={closeModal}>\n      <>\n        <CloseButton onClick={closeModal}>\n          <CloseSVG>\n            <use href={sprite + '#icon-x-close'}></use>\n          </CloseSVG>\n        </CloseButton>\n        <Formik>\n          <Form autoComplete=\"off\">\n            <TitleModal>{!visible ? 'Add card' : 'Edit card'}</TitleModal>\n            <LabelModal>\n              <InputModal\n                onChange={handleChangeTitle}\n                value={title}\n                type=\"text\"\n                name=\"modalAddEditCardTitle\"\n                title=\"Enter title\"\n                required\n                placeholder=\"Title\"\n              />\n            </LabelModal>\n            <LabelModal>\n              <TextareaModal\n                onChange={handleChangeDescription}\n                value={text}\n                type=\"text\"\n                name=\"modalDescription\"\n                title=\"Enter title\"\n                required\n                placeholder=\"Comment\"\n                maxWidth=\"302px\"\n                height=\"154px\"\n              >\n              </TextareaModal>\n            </LabelModal>\n            <TitleModal\n              fontSize=\"12px\"\n              marginBottom=\"4px\"\n              color=\"var(--modal-secondary-text-color)\"\n            >\n              Label color\n            </TitleModal>\n            <WrapperComponentModal\n              marginBottom=\"14px\"\n              gap=\"8px\"\n              maxWidth=\"252px\"\n              justifyContent=\"start\"\n            >\n              {radioButtons.map(({ priority, color }) => {\n                return (\n                  <LabelModal key={priority} marginBottom=\"0px\">\n                    <InputModal\n                      onChange={onChangeColor}\n                      checked={\n                        !visible\n                          ? priority === { priority }\n                            ? true\n                            : false\n                          : priorityEditTask\n                      }\n                      type=\"radio\"\n                      name=\"labelColor\"\n                      value={priority}\n                      display=\"none\"\n                      aria-label={priority}\n                    />\n                    <ImgModal\n                      width=\"14px\"\n                      height=\"14px\"\n                      backgroundColor={color}\n                      border=\"transparent\"\n                      borderRadius=\"50%\"\n                    />\n                  </LabelModal>\n                );\n              })}\n            </WrapperComponentModal>\n            <TitleModal\n              fontSize=\"12px\"\n              marginBottom=\"4px\"\n              color=\"var(--modal-secondary-text-color)\"\n            >\n              Deadline\n            </TitleModal>\n            <WrapperComponentModal marginBottom=\"0px\">\n              {!deadline && (\n                <TitleModal\n                  marginBottom=\"0px\"\n                  fontSize=\"14px\"\n                  fontWeight=\"500\"\n                  color=\"var(--modal-date-text-color)\"\n                >\n                  Today,\n                </TitleModal>\n              )}\n              <Calendar deadline={setDeadline} />\n            </WrapperComponentModal>\n            <ButtonPlusModal\n              onClick={!visible ? handleSubmitAdd : handleSubmitEdit}\n              name=\"addCard\"\n              type=\"submit\"\n              marginTop=\"40px\"\n            >\n              {!visible ? 'Add' : 'Edit'}\n            </ButtonPlusModal>\n          </Form>\n        </Formik>\n      </>\n    </Modal>\n  );\n};\n\nexport default ModalAddEditCard;\n","import React, { useState } from 'react';\nimport Card from '../Card/Card';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  ScrollContainer,\n  ScrollContent,\n  TitleIcon,\n  Title,\n  ColumnContainer,\n  WhiteIcon,\n  Icons,\n} from './Column.styled';\nimport AddNewCard from 'components/BoardPage/AddNewCardBtn/AddNewCardBtn';\nimport ColumnModal from 'components/BoardPage/ColumnModal/ColumnModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteColumnByIdThunk,\n  updateColumnByIdThunk,\n} from 'redux/dashboards/thunks';\nimport ModalAddEditCard from 'components/Modals/ModalAddEditCard/ModalAddEditCard';\n// import ModalAddEditCard from 'components/Modals/ModalAddEditCard/ModalAddEditCard';\n\nconst Column = ({ title, tasks, columnId, idTask }) => {\n  const [showTestModal, setShowTestModal] = useState(false);\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n  const boardId = useSelector(state => state.boards.currentBoard._id);\n  const [showModal, setShowModal] = useState(false);\n  const [nameButton, setNameButton] = useState('');  \n  const [idEditTask, setIdEditTask] = useState('');\n  const [titleEditTask, setTitleEditTask] = useState('');\n  const [textEditTask, setTextEditTask] = useState('');\n  const [priorityEditTask, setPriorityEditTask] = useState('');\n  // const [deadlineEditTask,  setDeadlineEditTask] = useState('');\n  \n  const openAddEditCardModal = () => {\n    setShowModal(true);\n  };\n\n  console.log(inputValue);\n\n  const toggleModal = () => {\n    setShowTestModal(prevShowTestModal => !prevShowTestModal);\n    setInputValue(title);\n  };\n\n  const togglePopUpMenu = clickedTaskId => {\n    if (clickedTaskId === openTaskId) {\n      setOpenTaskId(null);\n    } else {\n      setOpenTaskId(clickedTaskId);\n    }\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(\n      deleteColumnByIdThunk({\n        boardId,\n        columnId,\n      })\n    );\n  };\n\n  return (\n    <>\n      <ColumnContainer>\n        <TitleIcon>\n          <Title>{title}</Title>\n          <Icons>\n            <WhiteIcon\n              className=\"icon-search\"\n              type=\"submit\"\n              onClick={toggleModal}\n            >\n              <use href={sprite + '#icon-pencil-01'}></use>\n            </WhiteIcon>\n            <WhiteIcon className=\"icon-search\" onClick={handleDeleteColumn}>\n              <use href={sprite + '#icon-trash'}></use>\n            </WhiteIcon>\n          </Icons>\n        </TitleIcon>\n\n        <ScrollContainer>\n          <ScrollContent>\n            {tasks.map(task => {\n              return (\n                <Card\n                  key={task._id}\n                  task={task}\n                  columnId={columnId}\n                  togglePopUpMenu={togglePopUpMenu}\n                  isPopupOpen={openTaskId === task._id}\n                  idTask={task._id}\n                  openAddEditCardModal={openAddEditCardModal}\n                  setNameButton={setNameButton}\n                  setIdEditTask={setIdEditTask}\n                  setTitleEditTask={setTitleEditTask}\n                  setTextEditTask={setTextEditTask}\n                  setPriorityEditTask={setPriorityEditTask}\n                  // setDeadline={setDeadlineEditTask}\n                />\n              );\n            })}\n          </ScrollContent>\n        </ScrollContainer>\n        <AddNewCard\n          openModal={openAddEditCardModal}\n          setNameButton={setNameButton}\n        />\n\n        <ColumnModal\n          closeModal={toggleModal}\n          isOpen={showTestModal}\n          name={'Edit column'}\n          inputPlaceholder={title}\n          actionThunk={updateColumnByIdThunk}\n          actionPayload={value => ({ columnId, body: { title: value } })}\n          buttonText={'Add'}\n          initialValue={title}\n        />\n\n        {showModal && (\n          <ModalAddEditCard\n            closeModal={() => setShowModal(false)}\n            nameButton={nameButton}\n            columnId={columnId}\n            idEditTask={idEditTask}\n            titleEditTask={titleEditTask}\n            textEditTask={textEditTask}\n            priorityEditTask={priorityEditTask}\n            // deadlineEditTask={deadlineEditTask}\n          />\n        )}\n      </ColumnContainer>\n    </>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  /* vit Закоментовано для загального бекграуда */\n  /* background-color: var(--screens-page-bg-color); */\n`;\n\nconst DashboardContent = styled.div`\n  display: flex;\n  padding-bottom: 16px;\n  gap: 14px;\n`;\n\nconst ColumnWrapper = styled.div`\n  // margin-right: 18px;\n  // margin-right: 18px;\n`;\n\nexport { ColumnWrapper, DashboardContainer, DashboardContent };\n","import { useSelector } from 'react-redux';\nimport Column from '../Column/Column';\nimport {\n  DashboardContainer,\n  ColumnWrapper,\n  DashboardContent,\n} from './Board.styled';\n\nconst Board = () => {\n  const board = useSelector(state => state.boards.currentBoard);\n  return (\n    <DashboardContainer>\n      <DashboardContent>\n        {board.columns.map(column => (\n          <ColumnWrapper key={column._id}>\n            <Column\n              title={column.title}\n              tasks={column.tasks}\n              columnId={column._id}\n            />\n          </ColumnWrapper>\n        ))}\n      </DashboardContent>\n    </DashboardContainer>\n  );\n};\n\nexport default Board;\n","import styled from '@emotion/styled';\n\nexport const FiltersContainer = styled.div`\n  padding: 0px 24px;\n  width: 300px;\n  height: 234px;\n`;\n\nexport const FiltersTitle = styled.h2`\n  padding-bottom: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.24px;\n  color: var(--modal-title-color);\n  border-bottom: 1px solid var(--modal-title-border-color);\n`;\n\nexport const WraperAllColor = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-top: 14px;\n\n  color: var(--modal-title-color);\n`;\nexport const FilterList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-top: 14px;\n`;\n\nexport const FilterItem = styled.li`\n  display: flex;\n  height: 24px;\n  color: var(--modal-title-color);\n\n  &:nth-of-type(1) {\n    accent-color: var(--filter-without-priority-color);\n  }\n  &:nth-of-type(2) {\n    accent-color: var(--filter-low-color);\n  }\n  &:nth-of-type(3) {\n    accent-color: var(--filter-medium-color);\n  }\n  &:nth-of-type(4) {\n    accent-color: var(--filter-high-color);\n  }\n`;\n\nexport const PriorityLabel = styled.label`\n  display: inline-flex;\n  align-items: center;\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n\n  color: var(--filter-popup-secondary-text-color);\n`;\n\nexport const AllColor = styled.p`\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--modal-title-color);\n`;\n\nexport const AllLabels = styled.label`\n  display: flex;\n\n  margin-left: auto;\n\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  color: var(--filter-popup-secondary-text-color);\n`;\n\nexport const InputRadioBtn = styled.input`\n  transform: scale(1.6);\n  margin-right: 16px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getFilteredTasksThunk,\n  getAllTasksThunk,\n} from 'redux/dashboards/thunks';\nimport { selectCurrentBoardId } from 'redux/dashboards/selectors';\n\nimport {\n  FiltersContainer,\n  FiltersTitle,\n  WraperAllColor,\n  AllColor,\n  InputRadioBtn,\n  AllLabels,\n  FilterItem,\n  FilterList,\n  PriorityLabel,\n} from './FiltersModal.styled';\n// import { radioButtons } from 'components/Modals/ModalAddEditCard/radioBattons';\n\nconst FiltersModal = props => {\n  const savedFilter = localStorage.getItem('filterValue');\n  const savedcurrentBoardiD = localStorage.getItem('currentBoardId');\n\n  const [selectedFilter, setSelectedFilter] = useState(savedFilter || 'all');\n  const [selectedCurrentBoardId, setCurrentBoardId] = useState(\n    savedcurrentBoardiD || ''\n  );\n\n  const currentBoardId = useSelector(selectCurrentBoardId);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (selectedCurrentBoardId !== currentBoardId) {\n      setSelectedFilter('all');\n    }\n    localStorage.setItem('currentBoardId', currentBoardId);\n    localStorage.setItem('filterValue', selectedFilter);\n  }, [currentBoardId, selectedCurrentBoardId, selectedFilter]);\n\n  const handleChange = e => {\n    const priorityStatus = e.target.value;\n    setSelectedFilter(priorityStatus);\n    setCurrentBoardId(currentBoardId);\n\n    if (priorityStatus === 'all') {\n      dispatch(getAllTasksThunk(currentBoardId));\n    } else {\n      dispatch(\n        getFilteredTasksThunk({\n          boardId: currentBoardId,\n          priority: priorityStatus,\n        })\n      );\n    }\n  };\n\n  return (\n    <FiltersContainer>\n      <FiltersTitle>Filters</FiltersTitle>\n      <WraperAllColor>\n        <AllColor>Label color</AllColor>\n        <AllLabels\n        // style={\n        //   selectedFilter === 'all'\n        //     ? { color: 'var(--filter-popup-primary-text-color)' }\n        //     : {}\n        // }\n        >\n          <InputRadioBtn\n            style={{ opacity: 0 }}\n            type=\"radio\"\n            value=\"all\"\n            checked={selectedFilter === 'all'}\n            name=\"filters\"\n            onChange={handleChange}\n          />\n          Show all\n        </AllLabels>\n      </WraperAllColor>\n      {/* List */}\n      <FilterList>\n        {/* {radioButtons.map(({ priority, color }) => {\n          return (\n            <FilterItem>\n              <PriorityLabel\n                style={\n                  selectedFilter === 'without'\n                    ? { color: 'var(--filter-popup-primary-text-color)' }\n                    : {}\n                }\n              >\n                <InputRadioBtn\n                  type=\"radio\"\n                  value=\"without\"\n                  checked={selectedFilter === 'without'}\n                  name=\"filters\"\n                  onChange={handleChange}\n                />\n                Without priority\n              </PriorityLabel>\n            </FilterItem>\n          );\n        })} */}\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'without'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"without\"\n              checked={selectedFilter === 'without'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            Without priority\n          </PriorityLabel>\n        </FilterItem>\n\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'low'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"low\"\n              checked={selectedFilter === 'low'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            Low\n          </PriorityLabel>\n        </FilterItem>\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'medium'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"medium\"\n              checked={selectedFilter === 'medium'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            Medium\n          </PriorityLabel>\n        </FilterItem>\n\n        <FilterItem>\n          <PriorityLabel\n            style={\n              selectedFilter === 'high'\n                ? { color: 'var(--filter-popup-primary-text-color)' }\n                : {}\n            }\n          >\n            <InputRadioBtn\n              type=\"radio\"\n              value=\"high\"\n              checked={selectedFilter === 'high'}\n              name=\"filters\"\n              onChange={handleChange}\n            />\n            High\n          </PriorityLabel>\n        </FilterItem>\n      </FilterList>\n    </FiltersContainer>\n  );\n};\n\nexport default FiltersModal;\n","import React, { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Column from '../../components/BoardPage/Column/Column';\nimport Board from '../../components/BoardPage/Board/Board';\nimport ColumnModal from '../../components/BoardPage/ColumnModal/ColumnModal';\nimport FiltersModal from 'components/ModalFilters/FilterModal';\nimport {\n  Section,\n  SectionTitle,\n  BtnFilters,\n  SvgIconFilters,\n  BtnAddColumn,\n  Title,\n  SvgIconPlus,\n  SectionBoards,\n  WrapSvg,\n} from './MainDashboard.styled';\nimport Modal from 'components/Modal/Modal';\nimport { createNewColumnThunk } from 'redux/dashboards/thunks';\nimport { useSelector } from 'react-redux';\nimport {\n  selectboardTitle,\n  selectBoardBackground,\n} from 'redux/dashboards/selectors';\n\nconst MainDashboard = () => {\n  // const boardTitle = useSelector(state => state.boards.currentBoard.title);\n  const boardTitle = useSelector(selectboardTitle);\n  const boardBackground = useSelector(selectBoardBackground);\n  console.log('=========');\n  console.log(boardBackground);\n  console.log('=========');\n\n  const [showTestModal, setShowTestModal] = useState(false);\n  const [\n    currentColumns,\n    // setCurrentColumns\n  ] = useState([]);\n\n  const toggleModal = () => {\n    setShowTestModal(prevShowTestModal => !prevShowTestModal);\n    if (!showTestModal) {\n    }\n  };\n\n  // Filters Modal\n  const [showFiltersModal, setShowFiltersModal] = useState(false);\n  const toggleFiltersModal = () => {\n    setShowFiltersModal(prevShowFiltersModal => !prevShowFiltersModal);\n  };\n\n  return (\n    <Section backgroung={boardBackground}>\n      <SectionTitle>\n        <Title>{boardTitle}</Title>\n        <BtnFilters type=\"submit\" onClick={toggleFiltersModal}>\n          <SvgIconFilters>\n            <use href={sprite + '#icon-filter'}></use>\n          </SvgIconFilters>\n          Filter\n        </BtnFilters>\n      </SectionTitle>\n      {/* FilterModal */}\n      {showFiltersModal && (\n        <Modal\n          onClose={toggleFiltersModal}\n          isOpen={showFiltersModal}\n          children={<FiltersModal modalClose={toggleFiltersModal} />}\n        />\n      )}\n\n      <SectionBoards>\n        <Board>\n          {currentColumns.map(column => (\n            <Column\n              key={column._id}\n              title={column.title}\n              tasks={column.tasks}\n              newColumnTitle={null}\n              columnId={column._id}\n            />\n          ))}\n        </Board>\n        <BtnAddColumn type=\"submit\" onClick={toggleModal}>\n          <WrapSvg>\n            <SvgIconPlus>\n              <use href={sprite + '#icon-plus'}></use>\n            </SvgIconPlus>\n          </WrapSvg>\n          Add another column\n        </BtnAddColumn>\n      </SectionBoards>\n      <ColumnModal\n        closeModal={toggleModal}\n        isOpen={showTestModal}\n        name={'Add column'}\n        inputPlaceholder=\"Title\"\n        actionThunk={createNewColumnThunk}\n        actionPayload={value => ({ body: { title: value } })}\n        buttonText={'Add'}\n        initialValue={''}\n      />\n    </Section>\n  );\n};\n\nexport default MainDashboard;\n","import React from 'react';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\n\nconst ScreenPage = () => {\n  return (\n    <div>\n      <MainDashboard />\n    </div>\n  );\n};\n\nexport default ScreenPage;\n"],"names":["CustomCard","styled","props","borderColor","TruncatedText","PriorityCircle","CardContentWrapper","TitleTypography","PriorityTypography","PriorityInfo","DeadlineTypography","DeadlineInfo","PriorityWrapper","DedlineWrapper","PriorityDateItem","PriorityDateContainer","BottomInfo","Icons","PopUpMenu","ScrollContent","scrollable","WhiteIcon","BellIcon","BackDropHiden","PopUpItemWrapper","text","iconHref","columnId","handleMoveTask","onClick","className","href","priorityBorderColor","priorityCircleColor","task","togglePopUpMenu","isPopupOpen","idTask","openAddEditCardModal","setNameButton","setIdEditTask","setTitleEditTask","setTextEditTask","setPriorityEditTask","dispatch","useDispatch","columns","useSelector","state","boards","currentBoard","columnsLength","length","selectedTask","priority","today","Date","toLocaleDateString","formattedSelectedDeadline","dayjs","deadline","format","isTodayDeadline","listForPopup","filter","column","_id","console","log","isScrollable","updateTasksColumnByIdThunk","body","newColumnId","title","maxLine","ellipsis","trimRight","basedOn","style","backgroundColor","sprite","color","deleteTaskByIdThunk","unwrap","then","data","catch","error","map","Title","TitleIcon","ColumnContainer","ScrollContainer","BtnAddNewCard","WrapSvg","SvgIconPlus","openModal","type","name","e","target","Input","BtnAdd","closeModal","isOpen","inputPlaceholder","actionThunk","actionPayload","buttonText","initialValue","useState","inputValue","setInputValue","boardId","Modal","onClose","value","onChange","placeholder","preventDefault","trim","toast","ModalBackdrop","ModalContent","position","custom","modalRoot","document","querySelector","children","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ModalTitle","fontSize","fontWeight","lineHeight","marginBottom","ModalLabel","display","flexDirection","alignItems","textAlign","ModalInput","width","maxWidth","height","border","borderRadius","padding","ModalTextarea","resize","ModalSvg","stroke","ModalWrapperComponent","justifyContent","flexWrap","gap","ModalImg","ModalButton","top","right","marginTop","disabled","backgroundColorHover","ModalSvgPlus","marginRight","rest","Calendar","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","defaultValue","views","disablePast","date","selectedDate","$d","formattedDateString","UTC","getFullYear","getMonth","getDate","toISOString","split","slots","openPickerIcon","slotProps","desktopPaper","sx","left","transform","margin","borderBottomWidth","borderBottomStyle","fill","boxSizing","minWidth","day","borderWidth","textField","variant","fontFamily","radioButtons","nameButton","idEditTask","titleEditTask","textEditTask","priorityEditTask","visible","setVisible","setTitle","setText","setPriority","setDeadline","onChangeColor","handleSubmitAdd","deadlineToSend","createNewTaskThunk","res","reset","handleSubmitEdit","updateTaskByIdThunk","autoComplete","required","checked","tasks","showTestModal","setShowTestModal","openTaskId","setOpenTaskId","showModal","setShowModal","toggleModal","prevShowTestModal","clickedTaskId","deleteColumnByIdThunk","Card","updateColumnByIdThunk","DashboardContainer","DashboardContent","ColumnWrapper","board","FiltersContainer","FiltersTitle","WraperAllColor","FilterList","FilterItem","PriorityLabel","AllColor","AllLabels","InputRadioBtn","savedFilter","localStorage","getItem","savedcurrentBoardiD","selectedFilter","setSelectedFilter","selectedCurrentBoardId","setCurrentBoardId","currentBoardId","selectCurrentBoardId","setItem","handleChange","priorityStatus","getAllTasksThunk","getFilteredTasksThunk","opacity","boardTitle","selectboardTitle","boardBackground","selectBoardBackground","currentColumns","showFiltersModal","setShowFiltersModal","toggleFiltersModal","prevShowFiltersModal","backgroung","modalClose","newColumnTitle","createNewColumnThunk"],"sourceRoot":""}