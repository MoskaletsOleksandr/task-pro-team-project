{"version":3,"file":"static/js/133.ac116daf.chunk.js","mappings":"2IAkOA,IAAe,IAA0B,0D,iIChOlBA,EAAAA,EAAAA,QAAH,iGAKSA,EAAAA,EAAAA,IAAH,kIAQFA,EAAAA,EAAAA,EAAH,6PAWSA,EAAAA,EAAAA,KAAH,0E,SCxBdC,EAAUD,EAAAA,EAAAA,QAAH,gEAIPE,EAAeF,EAAAA,EAAAA,IAAH,0CAIZG,EAAaH,EAAAA,EAAAA,OAAH,saAqBVI,EAAgBJ,EAAAA,EAAAA,QAAH,8YAsBbK,EAAiBL,EAAAA,EAAAA,IAAH,mKAQdM,EAAQN,EAAAA,EAAAA,GAAH,gNAWLO,EAAeP,EAAAA,EAAAA,OAAH,qZAqBZQ,EAAcR,EAAAA,EAAAA,IAAH,6M,SC9EXS,EAA6B,CACxCC,IAAK,UACLC,MAAO,qBACPC,MAAO,SACPC,KAAM,QACNC,WACI,4EACJC,QAAS,CACL,CACIL,IAAK,mBACLC,MAAO,iBACPK,QAAS,UACTC,MAAO,CACH,CACIP,IAAK,0BACLC,MAAO,eACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,yDACNC,SAAU,MACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,SACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,0DACNC,SAAU,OACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,UACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,mOACNC,SAAU,UACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,aACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,6CACNC,SAAU,SACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,aACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,wCACNC,SAAU,MACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,aACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,+BACNC,SAAU,OACVC,SAAU,aACVC,MAAO,OAInB,CACIZ,IAAK,mBACLC,MAAO,iBACPK,QAAS,UACTC,MAAO,CACH,CACIP,IAAK,0BACLC,MAAO,eACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,2DACNC,SAAU,SACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,SACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,2EACNC,SAAU,OACVC,SAAU,aACVC,MAAO,OAInB,CACIZ,IAAK,mBACLC,MAAO,iBACPK,QAAS,UACTC,MAAO,CACH,CACIP,IAAK,0BACLC,MAAO,eACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,6HACNC,SAAU,MACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,SACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,sBACNC,SAAU,OACVC,SAAU,aACVC,MAAO,OAInB,CACIZ,IAAK,mBACLC,MAAO,iBACPK,QAAS,UACTC,MAAO,CACH,CACIP,IAAK,0BACLC,MAAO,eACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,sBACNC,SAAU,SACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,SACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,6HACNC,SAAU,UACVC,SAAU,aACVC,MAAO,OAInB,CACIZ,IAAK,mBACLC,MAAO,iBACPK,QAAS,UACTC,MAAO,CACH,CACIP,IAAK,0BACLC,MAAO,eACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,mKACNC,SAAU,OACVC,SAAU,aACVC,MAAO,KAEX,CACIZ,IAAK,0BACLC,MAAO,SACPK,QAAS,UACTE,SAAU,mBACVC,KAAM,wJACNC,SAAU,SACVC,SAAU,aACVC,MAAO,S,2DChMzB,SAASC,IAcP,OAbAA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAC1D,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,GAG1B,CAED,OAAOL,CACR,EACMJ,EAASa,MAAMC,KAAMR,UAC7B,CAiBD,IAAMS,EAAc,CAClBC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,OAAQ,EACRC,SAAU,SACV,cAAe,EACf,iBAAkB,EAClBC,OAAQ,QAEJC,EAAc,CAAC,aAAc,QAAS,YAAa,cAAe,cAAe,aAAc,iBAAkB,cAAe,cAAe,aAAc,gBAAiB,eAAgB,iBAkBpM,IAAMC,EAAY,CAAC,YAAa,WAAY,YAAa,aAEzD,SAASC,EAAYC,EAAMC,GACzB,KAAOD,GAAQC,KACbD,EAAOA,EAAKE,uBAGd,OAAOF,CACR,CAED,I,kCAAMG,GAAe,CACnBC,aAASC,EACTC,UAAW,GACXC,UAAW,MACXC,SAAU,SAEVC,QAAS,EAETC,SARmB,WAQN,EAEbvC,KAAM,GACNwC,WAAW,EACXC,cAAUP,GAGNQ,GAAYrC,OAAOsC,KAAKX,IAUxBY,GAAAA,SAAAA,I,6BACJ,WAAYC,GAAO,6BACjB,cAAMA,IACDC,MAAQ,CACX9C,KAAM6C,EAAM7C,KACZ+C,SAAS,GAEX,EAAKC,MAAQ,GACb,EAAKV,QAAU,EACf,EAAKW,OAAS,KARG,CASlB,C,gDAED,WACE/B,KAAKgC,aACLhC,KAAKiC,OAAOjC,KAAK2B,MAClB,G,gCAED,SAAmBO,GACbA,EAAUX,WAAavB,KAAK2B,MAAMJ,UACpCvB,KAAKmC,oBAGHnC,KAAK2B,QAAUO,GACjBlC,KAAKiC,OAAOjC,KAAK2B,MAEpB,G,kCAED,WACE3B,KAAK+B,OAAOK,WAAWC,YAAYrC,KAAK+B,QACxC/B,KAAK+B,OAAS,IACf,G,sBAED,SAASH,EAAOU,GAKd,MAJ6B,qBAAlBV,EAAMC,UACf7B,KAAK6B,QAAUD,EAAMC,UAGvB,uDAAsBD,EAAOU,EAC9B,G,wBAED,WACE,IAAItC,KAAK+B,OAAT,CACA,IAAMA,EAAS/B,KAAK+B,OAASQ,SAASC,cAAc,OACpDT,EAAOd,UAAP,+BAA2CjB,KAAK2B,MAAMV,WACtDc,EAAOU,aAAa,cAAe,QACnCzC,KAAKmC,oBACLhD,OAAOsC,KAAKxB,GAAayC,SAAQ,SAAA/C,GAC/BoC,EAAOY,MAAMhD,GAAOM,EAAYN,EACjC,IACD4C,SAASK,KAAKC,YAAYd,EARH,CASxB,G,+BAED,WAAoB,WACZe,EAAcC,OAAOC,iBAAiBhD,KAAKV,QACjDkB,EAAYkC,SAAQ,SAAA/C,GAClB,EAAKoC,OAAOY,MAAMhD,GAAOmD,EAAYnD,EACtC,GACF,G,oBAED,SAAOgC,GAEL,IAAMZ,EAAUY,EAAMZ,UAAY,iBAAiBkC,KAAKtB,EAAM7C,MAAQ,QAAU,WAEhF,OAAQiC,GACN,IAAK,QACHf,KAAK8B,MAAQH,EAAM7C,KAAKoE,MAAM,aAC9B,MAEF,IAAK,UACHlD,KAAK8B,MAAQqB,MAAMC,KAAKzB,EAAM7C,MAC9B,MAEF,QACE,MAAM,IAAIuE,MAAJ,uCAA0CtC,IAGpDf,KAAKoB,SAAWO,EAAMP,SAAW,EACjCpB,KAAK+B,OAAOuB,UAAYtD,KAAK8B,MAAMyB,KAAI,SAAAC,GACrC,iDAA2CA,EAA3C,UACD,IAAEC,KAAK,IACR,IAAMC,EAAgB1D,KAAK2D,YAAY3D,KAAK4D,eACtC/B,EAAU6B,GAAiB,EAC3BG,EAAW,CACfhC,QAAAA,EACA/C,KAAM+C,EAAU7B,KAAK8B,MAAMgC,MAAM,EAAGJ,GAAeD,KAAK,IAAM9B,EAAM7C,MAEtEkB,KAAK+D,SAASF,EAAUlC,EAAMN,SAAShC,KAAKW,KAAM6D,GACnD,G,yBAED,WACE,IAAMG,EAAU,CAAC,GACbC,EAAMjE,KAAK+B,OAAOmC,kBACtB,IAAKD,EAAK,OAAOD,EAKjB,IAJA,IAAIG,EAAQ,EACRC,EAAO,EACPC,EAAYJ,EAAII,WAEbJ,EAAMA,EAAIK,sBACXL,EAAII,UAAYA,IAClBD,IACAJ,EAAQO,KAAKJ,GACbE,EAAYJ,EAAII,WAGlBF,MAEIC,EAAOpE,KAAKoB,YAKlB,OAAO4C,CACR,G,yBAED,SAAYA,GACV,GAAIA,EAAQvE,QAAUO,KAAKoB,QAAS,OAAQ,EAC5C,IAAMoD,EAAYR,EAAQhE,KAAKoB,SACzBU,EAAQ9B,KAAK8B,MAAMgC,MAAM,EAAGU,GAC5BC,EAAezE,KAAK+B,OAAO2C,SAASF,GAAWH,UACrDrE,KAAK+B,OAAOuB,UAAYxB,EAAMyB,KAAI,SAACC,EAAGjE,GACpC,iDAA2CiE,EAA3C,UACD,IAAEC,KAAK,IAFgB,oDAEmCzD,KAAK2B,MAAMR,SAF9C,WAMxB,IAHA,IAAMwD,EAAa3E,KAAK+B,OAAO6C,iBAC3BC,EAAanE,EAAYiE,EAAY,GAElCE,IAAeF,EAAWN,UAAYI,GAC7CE,EAAWG,aAAeD,EAAWC,cAAgBH,EAAWN,UAAYQ,EAAWR,YACrFrE,KAAK+B,OAAOM,YAAYwC,GACxBA,EAAanE,EAAYiE,EAAY,GACrC7C,EAAMiD,MAGR,OAAOjD,EAAMrC,MACd,G,uBAGD,WACE,OAAOO,KAAK6B,OACb,G,oBAED,WAAS,WACP,EAGI7B,KAAK4B,MAFP9C,EADF,EACEA,KACA+C,EAFF,EAEEA,QAGImD,EAAchF,KAAK2B,MAEZsD,EAITD,EAJF9D,UACAC,EAGE6D,EAHF7D,SACAG,EAEE0D,EAFF1D,UACAL,EACE+D,EADF/D,UAEIiE,EAvOV,SAAuCxF,EAAQyF,GAC7C,GAAc,MAAVzF,EAAgB,MAAO,CAAC,EAC5B,IAEIC,EAAKJ,EAFLD,EAAS,CAAC,EACV8F,EAAajG,OAAOsC,KAAK/B,GAG7B,IAAKH,EAAI,EAAGA,EAAI6F,EAAW3F,OAAQF,IACjCI,EAAMyF,EAAW7F,GACb4F,EAASE,QAAQ1F,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,CACR,CA0NgBgG,CAA8BN,EAAavE,GAExD,OAAoB8E,EAAAA,cAAoBN,EAAW/F,EAAS,CAC1D+B,UAAW,iBAAF,OAAmBY,EAAU,yBAA2B,GAAxD,YAA8DZ,GACvEuE,IAAK,SAAA7E,GAAI,OAAI,EAAKrB,OAASqB,CAAlB,GAhNf,SAAc8E,EAAKC,GACjB,IAAKD,GAAsB,kBAARA,EACjB,OAAOA,EAGT,IAAME,EAAM,CAAC,EAQb,OAPAxG,OAAOsC,KAAKgE,GAAK/C,SAAQ,SAAA/C,GACnB+F,EAAYL,QAAQ1F,IAAQ,IAIhCgG,EAAIhG,GAAO8F,EAAI9F,GAChB,IACMgG,CACR,CAmMMC,CAAKV,EAAM1D,KAAaK,GAAWP,EAAYxC,EAAK+G,QAAQ,mBAAoB,IAAM/G,EAAmByG,EAAAA,cAAoB,MAAO,MAAO1D,GAAwB0D,EAAAA,cAAoB,OAAQ,CAChMtE,UAAW,0BACVE,GACJ,K,EAjKGO,CAAsB6D,EAAAA,WAqK5B7D,GAAcZ,aAAeA,GCnQ7B,I,8BAAMgF,GAAanI,EAAAA,EAAAA,IAAH,gPAUW,SAAAgE,GAAK,OAAIA,EAAMoE,WAAV,IAG1BC,GAAgBrI,EAAAA,EAAAA,IAAH,kZAkBbsI,GAAiBtI,EAAAA,EAAAA,IAAH,iFAMduI,GAAqBvI,EAAAA,EAAAA,IAAH,wIAQlBwI,GAAkBxI,EAAAA,EAAAA,GAAH,yIAMfyI,GAAqBzI,EAAAA,EAAAA,EAAH,oHAKlB0I,GAAe1I,EAAAA,EAAAA,EAAH,kHAKZ2I,GAAqB3I,EAAAA,EAAAA,EAAH,oHAKlB4I,GAAe5I,EAAAA,EAAAA,EAAH,iHAMZ6I,GAAkB7I,EAAAA,EAAAA,IAAH,wEAKf8I,GAAiB9I,EAAAA,EAAAA,IAAH,6EAMd+I,GAAmB/I,EAAAA,EAAAA,IAAH,6EAMhBgJ,GAAwBhJ,EAAAA,EAAAA,IAAH,0EAKrBiJ,GAAajJ,EAAAA,EAAAA,IAAH,mHAOVkJ,GAAYlJ,EAAAA,EAAAA,IAAH,kIAOTmJ,GAAQnJ,EAAAA,EAAAA,IAAH,6DChBX,GAxEiB,SAAC,GAAgB,IAS5BoJ,EACAC,EAVcC,EAAa,EAAbA,OACZC,EAAe9I,EAA2BM,QAA3BN,SACV,SAAA+I,GAAM,OAAIA,EAAOvI,KAAX,IACdwI,MAAK,SAAAC,GAAQ,OAAIA,EAAShJ,MAAQ4I,CAArB,IAEhB,OAAKC,GAOyB,QAA1BA,EAAanI,UACfiI,EAAsB,0BACtBD,EAAsB,2BACa,WAA1BG,EAAanI,UACtBiI,EAAsB,6BACtBD,EAAsB,8BACa,SAA1BG,EAAanI,UACtBiI,EAAsB,2BACtBD,EAAsB,6BAEtBC,EAAsB,uCACtBD,EAAsB,yCAItB,SAACjB,GAAD,CAAYC,YAAagB,EAAzB,UACE,UAACb,GAAD,YACE,SAACC,GAAD,UAAkBe,EAAa5I,SAC/B,SAAC0H,GAAD,WACE,SAACtE,GAAD,CACE5C,KAAMoI,EAAapI,KACnBsC,QAAQ,IACRD,SAAS,MACTG,WAAS,EACTP,QAAQ,aAGZ,UAAC6F,GAAD,YACE,UAACD,GAAD,YACE,UAACD,GAAD,YACE,SAACN,GAAD,UAAoB,eACpB,UAACI,GAAD,YACE,SAACP,GAAD,CACEtD,MAAO,CAAE2E,gBAAiBN,MAE5B,SAACX,GAAD,UAAea,EAAanI,kBAGhC,UAAC0H,GAAD,YACE,SAACH,GAAD,UAAoB,eACpB,SAACC,GAAD,UAAeW,EAAalI,kBAGhC,UAAC8H,GAAD,YACE,SAACD,GAAD,CAAW5F,UAAU,cAArB,UACE,gBAAKsG,KAAMC,EAAAA,EAAS,uCAEtB,SAACX,GAAD,CAAW5F,UAAU,cAArB,UACE,gBAAKsG,KAAMC,EAAAA,EAAS,uBAEtB,SAACX,GAAD,CAAW5F,UAAU,cAArB,UACE,gBAAKsG,KAAMC,EAAAA,EAAS,8BAzDvB,IAgEV,EC3FKX,GAAYlJ,EAAAA,EAAAA,IAAH,iIAOTmJ,GAAQnJ,EAAAA,EAAAA,IAAH,uFAML8J,GAAkB9J,EAAAA,EAAAA,IAAH,uEAKfM,GAAQN,EAAAA,EAAAA,GAAH,iQAYL+J,GAAY/J,EAAAA,EAAAA,IAAH,wQAYTgK,GAAkBhK,EAAAA,EAAAA,IAAH,kEAMfiK,GAAgBjK,EAAAA,EAAAA,IAAH,ucCnBnB,GA1Be,SAAC,GAAsB,IAApBW,EAAmB,EAAnBA,MAAOM,EAAY,EAAZA,MACrB,OACI,UAAC6I,GAAD,YACI,UAACC,GAAD,YACI,SAAC,GAAD,UAAQpJ,KACR,UAAC,GAAD,YACI,SAAC,GAAD,CAAW2C,UAAU,cAArB,UACI,gBAAKsG,KAAMC,EAAAA,EAAS,uBAExB,SAAC,GAAD,CAAWvG,UAAU,cAArB,UACI,gBAAKsG,KAAMC,EAAAA,EAAS,yBAKhC,SAACG,GAAD,WACI,SAACC,GAAD,UACKhJ,EAAM2E,KAAI,SAAAsE,GAAI,OACX,SAACC,GAAD,CAAqBb,OAAQY,EAAKxJ,KAAvBwJ,EAAKxJ,IADL,UAOlC,ECzBK0J,GAAqBpK,EAAAA,EAAAA,IAAH,wHAMlBqK,GAAmBrK,EAAAA,EAAAA,IAAH,sEAKhBsK,GAAgBtK,EAAAA,EAAAA,IAAH,iDCInB,GAdsB,WACpB,OACE,SAACoK,GAAD,WACE,SAACC,GAAD,UACG5J,EAA2BM,QAAQ6E,KAAI,SAAA4D,GAAM,OAC5C,SAACc,GAAD,WACE,SAAC,GAAD,CAAQ3J,MAAO6I,EAAO7I,MAAOM,MAAOuI,EAAOvI,SADzBuI,EAAO9I,IADiB,OAQrD,EC+CD,GA7CsB,WASpB,OACE,UAAC,EAAD,YACE,UAACR,EAAD,YACE,SAACI,EAAD,UAAO,oBAEP,UAACH,EAAD,CAAYoK,KAAK,SAASC,QAbV,SAAAC,GACpBC,MAAM,wBACP,EAWK,WACE,UAACrK,EAAD,WAAgB,MACZ,gBAAKuJ,KAAMC,EAAAA,EAAS,oBACP,gBAMrB,UAACzJ,EAAD,YACE,SAACuK,GAAD,UACGlK,EAA2BM,QAAQ6E,KAAI,SAAA4D,GAAM,OAC5C,SAAC,GAAD,CAEE7I,MAAO6I,EAAO7I,MACdM,MAAOuI,EAAOvI,OAFTuI,EAAO9I,IAF8B,OAShD,UAACH,EAAD,CAAcgK,KAAK,SAASC,QA7BP,SAAAC,GACzBC,MAAM,+BACP,EA2BK,WACE,UAAClK,EAAD,WAAa,MACT,gBAAKoJ,KAAMC,EAAAA,EAAS,kBACV,6BAMvB,ECxCD,GAdmB,WAEjB,OACE,0BAC4B,SAAC,GAAD,KAQ/B,C,qECnBc,SAASe,EAAeC,EAAQC,GAC7C,MAAQtJ,OAAOS,UAAUC,eAAeC,KAAK0I,EAAQC,IAEpC,QADfD,GAAS,EAAAE,EAAA,GAAeF,MAG1B,OAAOA,CACT,CCNe,SAASG,IActB,OAZEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAAIxJ,OAEZ,SAAcC,EAAQmJ,EAAUK,GACrC,IAAIC,EAAO,EAAczJ,EAAQmJ,GACjC,GAAKM,EAAL,CACA,IAAIC,EAAO7J,OAAO8J,yBAAyBF,EAAMN,GACjD,OAAIO,EAAKH,IACAG,EAAKH,IAAI/I,KAAKN,UAAUC,OAAS,EAAIH,EAASwJ,GAEhDE,EAAKE,KALK,CAMnB,EAEKP,EAAK5I,MAAMC,KAAMR,UAC1B,C","sources":["images/sprite.svg","components/NewDashboard/NewDashBoard.styled.js","components/MainDashboard/MainDashboard.styled.js","fakeData/fakeData.js","../node_modules/react-lines-ellipsis/lib/index.modern.mjs","components/BoardPage/Card/Card.styled.js","components/BoardPage/Card/Card.jsx","components/BoardPage/Column/Column.styled.js","components/BoardPage/Column/Column.jsx","components/BoardPage/Board/Board.styled.js","components/BoardPage/Board/Board.jsx","components/MainDashboard/MainDashboard.js","pages/ScreenPage/ScreenPage.jsx","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-circle-broken-right\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M4.45 9.333A13.328 13.328 0 0 1 16 2.666c7.364 0 13.333 5.97 13.333 13.333S23.363 29.332 16 29.332a13.329 13.329 0 0 1-11.55-6.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M16 21.333 21.333 16 16 10.667M2.667 16h18.667\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-avatar\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.667 8.762c0 3.577-2.899 6.476-6.476 6.476s-6.476-2.899-6.476-6.476a6.475 6.475 0 1 1 12.952 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.859 30.75a15.922 15.922 0 0 0-4.666-11.264 15.934 15.934 0 0 0-17.36-3.453A15.934 15.934 0 0 0-.001 30.75h31.859z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-bell\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 3,\n    d: \"M12.472 28c.94.83 2.175 1.333 3.528 1.333s2.588-.504 3.528-1.333M24 10.667a8 8 0 1 0-16 0c0 4.12-1.039 6.941-2.2 8.807-.979 1.574-1.469 2.361-1.451 2.58.02.243.071.336.267.481.177.131.974.131 2.569.131h17.63c1.595 0 2.392 0 2.569-.131.196-.145.247-.238.267-.481.018-.22-.472-1.006-1.451-2.58-1.161-1.866-2.2-4.687-2.2-8.807z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-down\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.824,\n    d: \"M8.471 12.235 16 19.764l7.529-7.529\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-colors\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M16 27.296a8 8 0 1 0 7.44-13.683m-14.88.001a8 8 0 1 0 9.546 4.773M24 10.667a8 8 0 1 1-16 0 8 8 0 0 1 16 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-container\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M27.333 9.704 16 16m0 0L4.667 9.704M16 16v12.667m12-7.256V10.588c0-.457 0-.685-.067-.889a1.343 1.343 0 0 0-.285-.485c-.145-.158-.345-.269-.744-.491l-9.867-5.481c-.378-.21-.567-.315-.767-.356a1.349 1.349 0 0 0-.537 0c-.2.041-.389.146-.767.356L5.099 8.723c-.399.222-.599.333-.744.491a1.34 1.34 0 0 0-.286.485c-.067.204-.067.432-.067.889v10.823c0 .457 0 .685.067.889.06.18.157.346.286.485.145.158.345.269.744.491l9.867 5.482c.378.21.567.315.767.356.177.036.36.036.537 0 .2-.041.389-.146.767-.356l9.867-5.482c.399-.222.599-.333.744-.491.129-.14.226-.305.285-.485.067-.204.067-.432.067-.889z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.75 9C0.75 9 3.75 3 9 3C14.25 3 17.25 9 17.25 9C17.25 9 14.25 15 9 15C3.75 15 0.75 9 0.75 9Z\",\n    stroke: \"white\",\n    strokeWidth: 1.3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 11.25C10.2426 11.25 11.25 10.2426 11.25 9C11.25 7.75736 10.2426 6.75 9 6.75C7.75736 6.75 6.75 7.75736 6.75 9C6.75 10.2426 7.75736 11.25 9 11.25Z\",\n    stroke: \"white\",\n    strokeWidth: 1.3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-filter\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 3,\n    d: \"M29.334 4H2.667l10.667 12.613v8.72L18.667 28V16.613L29.334 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-help-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.88,\n    d: \"M16 29.333c7.364 0 13.333-5.97 13.333-13.333S23.364 2.667 16 2.667 2.667 8.637 2.667 16c0 7.364 5.97 13.333 13.333 13.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.88,\n    d: \"M12.12 12a4.003 4.003 0 0 1 6.834-1.249c.608.722.941 1.637.94 2.582 0 2.667-4 4-4 4M16 22.667h.02\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-hexagon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M14.964 3.242c.378-.21.567-.315.767-.356.177-.036.36-.036.537 0 .2.041.389.146.767.356l9.867 5.482c.399.222.599.333.744.491.129.14.226.305.285.485.067.204.067.432.067.889v10.823c0 .457 0 .685-.067.889-.06.18-.157.346-.285.485-.145.158-.345.269-.744.491l-9.867 5.482c-.378.21-.567.315-.767.356-.177.036-.36.036-.537 0-.2-.041-.389-.146-.767-.356l-9.867-5.482c-.399-.222-.599-.333-.744-.491a1.34 1.34 0 0 1-.286-.485C4 22.097 4 21.869 4 21.412V10.589c0-.457 0-.685.067-.889.06-.18.157-.346.286-.485.145-.158.345-.269.744-.491l9.867-5.481z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-lightning-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M18.999 2.667h-7.674c-.239 0-.359 0-.465.036a.672.672 0 0 0-.249.154c-.08.078-.133.185-.24.399l-5.6 11.2c-.256.511-.383.767-.353.974a.669.669 0 0 0 .277.449c.172.12.458.12 1.029.12h8.274l-4 13.333 16.258-16.86c.548-.569.823-.853.839-1.097a.665.665 0 0 0-.235-.553c-.186-.157-.581-.157-1.372-.157h-9.49l3-8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-loading\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M4.454 22.666a6.364 6.364 0 0 1 1.944-8.453l.003-.003a6.37 6.37 0 0 1 7.312.126l4.576 3.327a6.37 6.37 0 0 0 7.312.126l.003-.003a6.36 6.36 0 0 0 1.943-8.453m-4.878 18.213a6.365 6.365 0 0 1-8.453-1.944l-.003-.003a6.37 6.37 0 0 1 .126-7.312l3.327-4.576a6.37 6.37 0 0 0 .126-7.312l-.006-.003a6.363 6.363 0 0 0-8.453-1.942m16.094 2.118c5.207 5.207 5.207 13.648 0 18.855s-13.648 5.207-18.855 0c-5.207-5.207-5.207-13.648 0-18.855s13.648-5.207 18.855 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-login\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M11.867 10.08c.413-4.8 2.88-6.76 8.28-6.76h.173c5.96 0 8.347 2.387 8.347 8.347v8.693c0 5.96-2.387 8.347-8.347 8.347h-.173c-5.36 0-7.827-1.933-8.267-6.653M2.667 16H19.84\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M16.867 11.533 21.334 16l-4.467 4.467\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-logo-lightning\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.663 30.054c.489-2.543.905-5.22 1.494-7.897.29-1.401-.063-1.999-1.63-1.892s-3.313.053-4.979 0c-1.666-.054-1.965-.892-1.005-2.088C9.269 12.341 14.049 6.577 18.811.83c.534-.651 1.15-1.115 2.028-.625s.697 1.098.552 1.829c-.525 2.677-.96 5.354-1.539 7.978-.299 1.356.091 1.838 1.503 1.785a42.527 42.527 0 0 1 4.255 0c.806 0 1.865-.419 2.281.678s-.462 1.562-.905 2.213a611.485 611.485 0 0 1-5.504 6.684 2916.089 2916.089 0 0 0-8.102 9.709c-.525.633-1.114 1.142-2.01.821s-.706-1.08-.706-1.847z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-menu\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.5,\n    d: \"M4 16h24M4 8h24M4 24h24\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"m3.333 28.667 7.399-2.846c.473-.182.71-.273.931-.392.197-.106.384-.227.56-.364.199-.154.378-.333.736-.692l15.04-15.04A3.77 3.77 0 1 0 22.666 4L7.626 19.04c-.359.359-.538.538-.692.736a3.948 3.948 0 0 0-.364.56c-.119.221-.21.458-.392.931l-2.846 7.399zm0 0 2.744-7.135c.196-.511.295-.766.463-.883a.665.665 0 0 1 .505-.107c.201.038.395.232.782.619l3.012 3.012c.387.387.58.58.619.782a.665.665 0 0 1-.107.505c-.117.168-.372.267-.883.463l-7.135 2.744z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 3.2,\n    d: \"M16 6.667v18.667M6.667 16h18.667\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Project\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeWidth: 2.667,\n    d: \"M4.396 6.978a3.465 3.465 0 0 1 2.582-2.582 7.408 7.408 0 0 1 3.377 0 3.465 3.465 0 0 1 2.582 2.582c.26 1.11.26 2.266 0 3.377a3.465 3.465 0 0 1-2.582 2.582c-1.11.26-2.266.26-3.377 0a3.465 3.465 0 0 1-2.582-2.582 7.408 7.408 0 0 1 0-3.377zM4.396 21.645a3.465 3.465 0 0 1 2.582-2.582 7.38 7.38 0 0 1 3.377 0 3.464 3.464 0 0 1 2.582 2.582 7.408 7.408 0 0 1 0 3.377 3.465 3.465 0 0 1-2.582 2.582 7.38 7.38 0 0 1-3.377 0 3.464 3.464 0 0 1-2.582-2.582 7.408 7.408 0 0 1 0-3.377zM19.063 6.978a3.464 3.464 0 0 1 2.582-2.582 7.408 7.408 0 0 1 3.377 0 3.465 3.465 0 0 1 2.582 2.582 7.38 7.38 0 0 1 0 3.377 3.464 3.464 0 0 1-2.582 2.582 7.408 7.408 0 0 1-3.377 0 3.465 3.465 0 0 1-2.582-2.582 7.38 7.38 0 0 1 0-3.377zM19.063 21.645a3.464 3.464 0 0 1 2.582-2.582 7.38 7.38 0 0 1 3.377 0 3.464 3.464 0 0 1 2.582 2.582 7.38 7.38 0 0 1 0 3.377 3.464 3.464 0 0 1-2.582 2.582 7.38 7.38 0 0 1-3.377 0 3.464 3.464 0 0 1-2.582-2.582 7.38 7.38 0 0 1 0-3.377z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-puzzle-piece\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 4.8 4.8C24-.933 32.933 8 24.533 11.2l4.8 4.8-4.8 4.8c-3.2-8.4-12.133.533-3.733 3.733l-4.8 4.8-4.8-4.8C8 32.933-.933 24 7.467 20.8l-4.8-4.8 4.8-4.8c3.2 8.4 12.133-.533 3.733-3.733l4.8-4.8z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-star\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 2.683 6.975c.376.978.564 1.466.856 1.878.259.364.577.683.942.942.411.292.9.48 1.878.856l6.975 2.683-6.975 2.683c-.978.376-1.466.564-1.878.856a3.993 3.993 0 0 0-.942.942c-.292.411-.48.9-.856 1.878L16 29.335l-2.683-6.975c-.376-.978-.564-1.466-.856-1.878a4.012 4.012 0 0 0-.942-.942c-.411-.292-.9-.48-1.878-.856l-6.975-2.683 6.975-2.683c.978-.376 1.466-.564 1.878-.856.364-.259.683-.578.942-.942.292-.411.48-.9.856-1.878L16 2.667z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M12 4h8M4 8h24M6.667 8l.801 12.018c.149 2.231.223 3.347.588 4.243a6 6 0 0 0 3.672 3.435c.919.304 2.037.304 4.273.304 2.236 0 3.354 0 4.273-.304a6 6 0 0 0 3.672-3.435c.365-.896.439-2.012.588-4.243L25.335 8\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M24 8 8 24M8 8l16 16\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.452ef61e79de4d78be9af47cc219e0e5.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 0px 24px;\n  background-color: var(--screens-page-bg-color);\n`;\n\nexport const InfoContainer = styled.div`\n  height: 100vh;\n  widows: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InfoText = styled.p`\n  width: 486px;\n  font-family: Poppins;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  /* color: var(--add-column-btn-text-color); */\n  color: var(--new-dashboadr-text-color);\n`;\n\nexport const InfoTextAccent = styled.span`\n  color: var(--new-dashboadr-text-accent-color);\n`;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 0px 24px;\n  width: 100vw; \n`;\nexport const SectionTitle = styled.div`\n  display: flex;\n`;\n\nexport const BtnFilters = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  height: 20px;\n  margin-top: 14px;\n  margin-left: auto;\n\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--add-column-btn-text-color);\n\n  border: none;\n  background-color: var(--screens-page-bg-color);\n  cursor: pointer;\n`;\n\nexport const SectionBoards = styled.section`\ndisplay: flex;\nflex-direction: row;\nwidth: 100%; \noverflow-x: auto;\n\n::-webkit-scrollbar {\n  height: 12px; \n  width: 100%; \n}\n\n::-webkit-scrollbar-thumb {\n  background-color: var(--horizontal-scroll-slider-bg-color);\n  border-radius: 12px;\n}\n\n::-webkit-scrollbar-track {\n  background-color: var(--horizontal-scroll-bar-bg-color);\n  border-radius: 12px;\n}\n`;\n\nexport const SvgIconFilters = styled.svg`\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n  stroke: var(--add-column-btn-text-color);\n  fill: var(--screens-page-bg-color);\n`;\n\nexport const Title = styled.h1`\n  padding: 10px 0px;\n\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--add-column-btn-text-color);\n`;\n\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 335px;\n  height: 56px;\n\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  color: var(--add-column-btn-text-color);\n\n  border: none;\n  border-radius: 8px;\n  background: var(--add-column-btn-bg-color);\n\n  cursor: pointer;\n`;\n\nexport const SvgIconPlus = styled.svg`\n  margin-right: 8px;\n  width: 28px;\n  height: 28px;\n  stroke: var(--add-column-btn-plus-color);\n  border-radius: 8px;\n  background-color: var(--add-column-btn-plus-bg-color);\n`;\n","export const boardsForSideBar = [\n  {\n      title: 'test board title 1',\n      icon: 'icon1',\n      owner: 'user-1',\n      _id: 'board-1',\n  },\n  {\n      title: 'test board 2',\n      icon: 'icon2',\n      owner: 'user-1',\n      _id: 'board-2',\n  },\n];\n\nexport const currentBoardForScreensPage = {\n  _id: 'board-1',\n  title: 'test board title 1',\n  owner: 'user-1',\n  icon: 'icon1',\n  background:\n      'https://cdn.pixabay.com/photo/2023/05/29/14/05/mountains-8026175_1280.jpg',\n  columns: [\n      {\n          _id: 'board-1-column-1',\n          title: 'column title 1',\n          boardId: 'board-1',\n          tasks: [\n              {\n                  _id: 'board-1-column-1-task-1',\n                  title: 'task title 1',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-1',\n                  text: 'Write a 50-character sentence about the bright morning',\n                  priority: 'low',\n                  deadline: '2023-08-30',\n                  order: '1',\n              },\n              {\n                  _id: 'board-1-column-1-task-2',\n                  title: 'task 2',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-1',\n                  text: 'Explore and brainstorm new creative ideas for a project',\n                  priority: 'high',\n                  deadline: '2023-08-31',\n                  order: '2',\n              },\n              {\n                  _id: 'board-1-column-1-task-3',\n                  title: 'title 3',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-1',\n                  text: 'Reflect on how to make the most of your time today.Brainstorm and develop creative concepts and ideas that align with the projects objectives, considering factors such as target audience, messaging, and visual representation',\n                  priority: 'without',\n                  deadline: '2023-09-30',\n                  order: '3',\n              },\n              {\n                  _id: 'board-1-column-1-task-4',\n                  title: 'New Task 1',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-1',\n                  text: 'This is a new task description for testing',\n                  priority: 'medium',\n                  deadline: '2023-10-15',\n                  order: '4',\n              },\n              {\n                  _id: 'board-1-column-1-task-5',\n                  title: 'New Task 2',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-1',\n                  text: 'Another new task for the first column',\n                  priority: 'low',\n                  deadline: '2023-10-20',\n                  order: '5',\n              },\n              {\n                  _id: 'board-1-column-1-task-6',\n                  title: 'New Task 3',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-1',\n                  text: 'Yet another task to complete',\n                  priority: 'high',\n                  deadline: '2023-10-10',\n                  order: '6',\n              },\n          ],\n      },\n      {\n          _id: 'board-1-column-2',\n          title: 'title column 2',\n          boardId: 'board-1',\n          tasks: [\n              {\n                  _id: 'board-1-column-2-task-1',\n                  title: 'task title 1',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-2',\n                  text: 'Research the latest trends in web design for inspiration',\n                  priority: 'medium',\n                  deadline: '2023-08-30',\n                  order: '1',\n              },\n              {\n                  _id: 'board-1-column-2-task-2',\n                  title: 'task 2',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-2',\n                  text: 'List down three healthy snacks to keep you energized throughout the day.',\n                  priority: 'high',\n                  deadline: '2023-08-31',\n                  order: '2',\n              },\n          ],\n      },\n      {\n          _id: 'board-1-column-3',\n          title: 'title column 3', // Replace with desired title\n          boardId: 'board-1',\n          tasks: [\n              {\n                  _id: 'board-1-column-3-task-1',\n                  title: 'task title 1',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-3',\n                  text: 'Your task text here.Reflect on how to make the most of your time today. Reflect on how to make the most of your time today', // Replace with desired task text\n                  priority: 'low',\n                  deadline: '2023-08-30',\n                  order: '1',\n              },\n              {\n                  _id: 'board-1-column-3-task-2',\n                  title: 'task 2',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-3',\n                  text: 'Your task text here', // Replace with desired task text\n                  priority: 'high',\n                  deadline: '2023-08-31',\n                  order: '2',\n              },\n          ],\n      },\n      {\n          _id: 'board-1-column-4',\n          title: 'title column 4', // Replace with desired title\n          boardId: 'board-1',\n          tasks: [\n              {\n                  _id: 'board-1-column-4-task-1',\n                  title: 'task title 1',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-4',\n                  text: 'Your task text here', // Replace with desired task text\n                  priority: 'medium',\n                  deadline: '2023-08-30',\n                  order: '1',\n              },\n              {\n                  _id: 'board-1-column-4-task-2',\n                  title: 'task 2',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-4',\n                  text: 'Your task text here.Reflect on how to make the most of your time today. Reflect on how to make the most of your time today', // Replace with desired task text\n                  priority: 'without',\n                  deadline: '2023-08-31',\n                  order: '2',\n              },\n          ],\n      },\n      {\n          _id: 'board-1-column-5',\n          title: 'column title 5',\n          boardId: 'board-1',\n          tasks: [\n              {\n                  _id: 'board-1-column-5-task-1',\n                  title: 'task title 1',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-5',\n                  text: 'Generate ideas for a new marketing campaign and create a brainstorming document with your findings. Consider target audience, messaging, and potential channels.',\n                  priority: 'high',\n                  deadline: '2023-09-15',\n                  order: '1',\n              },\n              {\n                  _id: 'board-1-column-5-task-2',\n                  title: 'task 2',\n                  boardId: 'board-1',\n                  columnId: 'board-1-column-5',\n                  text: 'Conduct a thorough analysis of the company\\'s social media metrics for the past quarter. Identify trends, engagement rates, and areas for improvement.',\n                  priority: 'medium',\n                  deadline: '2023-09-20',\n                  order: '2',\n              },\n          ],\n      },\n    //   {\n    //       _id: 'board-1-column-6',\n    //       title: 'title column 6',\n    //       boardId: 'board-1',\n    //       tasks: [\n    //           {\n    //               _id: 'board-1-column-6-task-1',\n    //               title: 'task title 1',\n    //               boardId: 'board-1',\n    //               columnId: 'board-1-column-6',\n    //               text: 'Write a detailed product description for the upcoming product launch. Highlight its features, benefits, and unique selling points.',\n    //               priority: 'low',\n    //               deadline: '2023-09-10',\n    //               order: '1',\n    //           },\n    //           {\n    //               _id: 'board-1-column-6-task-2',\n    //               title: 'task 2',\n    //               boardId: 'board-1',\n    //               columnId: 'board-1-column-6',\n    //               text: 'Collaborate with the design team to create visually appealing graphics for the new website. Ensure that the visuals align with the brand\\'s identity.',\n    //               priority: 'without',\n    //               deadline: '2023-09-25',\n    //               order: '2',\n    //           },\n    //       ],\n    //   },\n  ],\n};\n\n\n\n\n\n\n","import React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst canvasStyle = {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  height: 0,\n  overflow: 'hidden',\n  'padding-top': 0,\n  'padding-bottom': 0,\n  border: 'none'\n};\nconst mirrorProps = ['box-sizing', 'width', 'font-size', 'font-weight', 'font-family', 'font-style', 'letter-spacing', 'text-indent', 'white-space', 'word-break', 'overflow-wrap', 'padding-left', 'padding-right'];\n\nfunction omit(obj, omittedKeys) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n\n  const ret = {};\n  Object.keys(obj).forEach(key => {\n    if (omittedKeys.indexOf(key) > -1) {\n      return;\n    }\n\n    ret[key] = obj[key];\n  });\n  return ret;\n}\n\nconst _excluded = [\"component\", \"ellipsis\", \"trimRight\", \"className\"];\n\nfunction prevSibling(node, count) {\n  while (node && count--) {\n    node = node.previousElementSibling;\n  }\n\n  return node;\n}\n\nconst defaultProps = {\n  basedOn: undefined,\n  className: '',\n  component: 'div',\n  ellipsis: '…',\n  // &hellip;\n  maxLine: 1,\n\n  onReflow() {},\n\n  text: '',\n  trimRight: true,\n  winWidth: undefined // for the HOC\n\n};\nconst usedProps = Object.keys(defaultProps);\n/**\n * props.text {String} the text you want to clamp\n * props.maxLine {Number|String} max lines allowed\n * props.ellipsis {String} the ellipsis indicator\n * props.trimRight {Boolean} should we trimRight the clamped text?\n * props.basedOn {String} letters|words\n * props.className {String}\n */\n\nclass LinesEllipsis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.text,\n      clamped: false\n    };\n    this.units = [];\n    this.maxLine = 0;\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n    this.reflow(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.winWidth !== this.props.winWidth) {\n      this.copyStyleToCanvas();\n    }\n\n    if (this.props !== prevProps) {\n      this.reflow(this.props);\n    }\n  }\n\n  componentWillUnmount() {\n    this.canvas.parentNode.removeChild(this.canvas);\n    this.canvas = null;\n  }\n\n  setState(state, callback) {\n    if (typeof state.clamped !== 'undefined') {\n      this.clamped = state.clamped;\n    }\n\n    return super.setState(state, callback);\n  }\n\n  initCanvas() {\n    if (this.canvas) return;\n    const canvas = this.canvas = document.createElement('div');\n    canvas.className = `LinesEllipsis-canvas ${this.props.className}`;\n    canvas.setAttribute('aria-hidden', 'true');\n    this.copyStyleToCanvas();\n    Object.keys(canvasStyle).forEach(key => {\n      canvas.style[key] = canvasStyle[key];\n    });\n    document.body.appendChild(canvas);\n  }\n\n  copyStyleToCanvas() {\n    const targetStyle = window.getComputedStyle(this.target);\n    mirrorProps.forEach(key => {\n      this.canvas.style[key] = targetStyle[key];\n    });\n  }\n\n  reflow(props) {\n    /* eslint-disable no-control-regex */\n    const basedOn = props.basedOn || (/^[\\x00-\\x7F]+$/.test(props.text) ? 'words' : 'letters');\n\n    switch (basedOn) {\n      case 'words':\n        this.units = props.text.split(/\\b|(?=\\W)/);\n        break;\n\n      case 'letters':\n        this.units = Array.from(props.text);\n        break;\n\n      default:\n        throw new Error(`Unsupported options basedOn: ${basedOn}`);\n    }\n\n    this.maxLine = +props.maxLine || 1;\n    this.canvas.innerHTML = this.units.map(c => {\n      return `<span class='LinesEllipsis-unit'>${c}</span>`;\n    }).join('');\n    const ellipsisIndex = this.putEllipsis(this.calcIndexes());\n    const clamped = ellipsisIndex > -1;\n    const newState = {\n      clamped,\n      text: clamped ? this.units.slice(0, ellipsisIndex).join('') : props.text\n    };\n    this.setState(newState, props.onReflow.bind(this, newState));\n  }\n\n  calcIndexes() {\n    const indexes = [0];\n    let elt = this.canvas.firstElementChild;\n    if (!elt) return indexes;\n    let index = 0;\n    let line = 1;\n    let offsetTop = elt.offsetTop;\n\n    while (elt = elt.nextElementSibling) {\n      if (elt.offsetTop > offsetTop) {\n        line++;\n        indexes.push(index);\n        offsetTop = elt.offsetTop;\n      }\n\n      index++;\n\n      if (line > this.maxLine) {\n        break;\n      }\n    }\n\n    return indexes;\n  }\n\n  putEllipsis(indexes) {\n    if (indexes.length <= this.maxLine) return -1;\n    const lastIndex = indexes[this.maxLine];\n    const units = this.units.slice(0, lastIndex);\n    const maxOffsetTop = this.canvas.children[lastIndex].offsetTop;\n    this.canvas.innerHTML = units.map((c, i) => {\n      return `<span class='LinesEllipsis-unit'>${c}</span>`;\n    }).join('') + `<wbr><span class='LinesEllipsis-ellipsis'>${this.props.ellipsis}</span>`;\n    const ndEllipsis = this.canvas.lastElementChild;\n    let ndPrevUnit = prevSibling(ndEllipsis, 2);\n\n    while (ndPrevUnit && (ndEllipsis.offsetTop > maxOffsetTop || // IE & Edge: doesn't support <wbr>\n    ndEllipsis.offsetHeight > ndPrevUnit.offsetHeight || ndEllipsis.offsetTop > ndPrevUnit.offsetTop)) {\n      this.canvas.removeChild(ndPrevUnit);\n      ndPrevUnit = prevSibling(ndEllipsis, 2);\n      units.pop();\n    }\n\n    return units.length;\n  } // expose\n\n\n  isClamped() {\n    return this.clamped; // do not use state.clamped. #27\n  }\n\n  render() {\n    const {\n      text,\n      clamped\n    } = this.state;\n\n    const _this$props = this.props,\n          {\n      component: Component,\n      ellipsis,\n      trimRight,\n      className\n    } = _this$props,\n          rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: `LinesEllipsis ${clamped ? 'LinesEllipsis--clamped' : ''} ${className}`,\n      ref: node => this.target = node\n    }, omit(rest, usedProps)), clamped && trimRight ? text.replace(/[\\s\\uFEFF\\xA0]+$/, '') : text, /*#__PURE__*/React.createElement(\"wbr\", null), clamped && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"LinesEllipsis-ellipsis\"\n    }, ellipsis));\n  }\n\n}\n\nLinesEllipsis.defaultProps = defaultProps;\n\nexport { LinesEllipsis as default };\n","import styled from '@emotion/styled';\n\n\nconst CustomCard = styled.div`\n  width: 334px;\n  height: 154px;\n  margin-right: 0;\n\n  margin-bottom: 9px;\n  border-radius: 8px;\n  background-color: var(--card-bg-color);\n  color: #fff;\n  padding: 14px 24px;\n  border-left: 4px solid ${props => props.borderColor};\n`;\n\nconst TruncatedText = styled.div`\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2; \n  -webkit-box-orient: vertical;\n  color: var(--card-secondary-text-color);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  margin-top: 8px;\n  line-height: 1.4;\n  height:38px;\n  border-bottom: 1px solid var(--card-border-color);\n`;\n\n\nconst PriorityCircle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50px;\n`;\n\nconst CardContentWrapper = styled.div`\nmargin-top: 8px;\nmargin-bottom: 14px;\nfont-size: 14px;\nfont-family: 'Poppins';\ntext-transform: capitalize;\n`;\n\nconst TitleTypography = styled.h4`\n  font-size: 14px;\n  font-family: 'Poppins';\n  color:var(--card-title-color) ;\n  text-transform: capitalize;\n`;\nconst PriorityTypography = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var( --card-secondary-text-color);\n`;\nconst PriorityInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var( --card-primary-text-color);\n`;\nconst DeadlineTypography = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color: var( --card-secondary-text-color);\n`;\nconst DeadlineInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Poppins';\n  color:var( --card-primary-text-color);\n`;\n\nconst PriorityWrapper = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 5px\n`;\nconst DedlineWrapper = styled.div`\ndisplay: flex;\nflex-direction: column; \ngap: 5px;\n`;\n\nconst PriorityDateItem = styled.div`\ndisplay: flex;\nflex-direction: column; \ngap: 5px;\n`;\n\nconst PriorityDateContainer = styled.div`\ndisplay: flex;\ngap: 23px;\nalign-items: center;\n`;\nconst BottomInfo = styled.div`\ndisplay: flex;\npadding-top: 14px;\nalign-items: center;\njustify-content: space-between;\n`;\n\nconst WhiteIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--card-icon-color); \n  stroke-width: 2; \n  fill: none\n`;\nconst Icons = styled.div`\ndisplay: inline-flex;\ngap:8px;\n\n`;\n\nexport {\n  PriorityCircle,\n  TruncatedText,\n  CustomCard,\n  CardContentWrapper,\n  TitleTypography,\n  PriorityTypography,\n  DeadlineTypography,\n  PriorityWrapper,\n  DedlineWrapper,\n  PriorityDateContainer,\n  PriorityDateItem,\n  WhiteIcon,\n  Icons,\n  BottomInfo,\n  PriorityInfo,\n  DeadlineInfo,\n}\n","import React from 'react';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport { currentBoardForScreensPage } from '../../../fakeData/fakeData';\nimport {\n  PriorityCircle,\n  TruncatedText,\n  CustomCard,\n  CardContentWrapper,\n  TitleTypography,\n  PriorityTypography,\n  DeadlineTypography,\n  PriorityWrapper,\n  DedlineWrapper,\n  PriorityDateContainer,\n  PriorityDateItem,\n  WhiteIcon,\n  Icons,\n  BottomInfo,\n  DeadlineInfo,\n  PriorityInfo,\n} from '../Card/Card.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst TaskCard = ({ taskId }) => {\n  const selectedTask = currentBoardForScreensPage.columns\n    .flatMap(column => column.tasks)\n    .find(taskData => taskData._id === taskId);\n\n  if (!selectedTask) {\n    return null;\n  }\n\n  let priorityBorderColor;\n  let priorityCircleColor;\n\n  if (selectedTask.priority === 'low') {\n    priorityCircleColor = 'var(--filter-low-color)';\n    priorityBorderColor = 'var(--filter-low-color)';\n  } else if (selectedTask.priority === 'medium') {\n    priorityCircleColor = 'var(--filter-medium-color)';\n    priorityBorderColor = 'var(--filter-medium-color)';\n  } else if (selectedTask.priority === 'high') {\n    priorityCircleColor = 'var(--filter-high-color)';\n    priorityBorderColor = 'var(--filter-high-color)';\n  } else {\n    priorityCircleColor = 'var(--filter-without-priority-color)';\n    priorityBorderColor = 'var(--filter-without-priority-color)';\n  }\n\n  return (\n    <CustomCard borderColor={priorityBorderColor}>\n      <CardContentWrapper>\n        <TitleTypography>{selectedTask.title}</TitleTypography>\n        <TruncatedText>\n          <LinesEllipsis\n            text={selectedTask.text}\n            maxLine=\"2\"\n            ellipsis=\"...\"\n            trimRight\n            basedOn=\"words\"\n          />\n        </TruncatedText>\n        <BottomInfo>\n          <PriorityDateContainer>\n            <PriorityDateItem>\n              <PriorityTypography>Priority:</PriorityTypography>\n              <PriorityWrapper>\n                <PriorityCircle\n                  style={{ backgroundColor: priorityCircleColor }}\n                />\n                <PriorityInfo>{selectedTask.priority}</PriorityInfo>\n              </PriorityWrapper>\n            </PriorityDateItem>\n            <DedlineWrapper>\n              <DeadlineTypography>Deadline:</DeadlineTypography>\n              <DeadlineInfo>{selectedTask.deadline}</DeadlineInfo>\n            </DedlineWrapper>\n          </PriorityDateContainer>\n          <Icons>\n            <WhiteIcon className=\"icon-search\">\n              <use href={sprite + '#icon-arrow-circle-broken-right'}></use>\n            </WhiteIcon>\n            <WhiteIcon className=\"icon-search\">\n              <use href={sprite + '#icon-pencil-01'}></use>\n            </WhiteIcon>\n            <WhiteIcon className=\"icon-search\">\n              <use href={sprite + '#icon-trash'}></use>\n            </WhiteIcon>\n          </Icons>\n        </BottomInfo>\n      </CardContentWrapper>\n    </CustomCard>\n  );\n};\n\nexport default TaskCard;\n","import styled from '@emotion/styled';\n\nconst WhiteIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--card-icon-color);\n  stroke-width: 2;\n  fill: none;\n`;\nconst Icons = styled.div`\n  display: inline-flex;\n  gap: 8px;\n  margin-right: 27px;\n`;\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h3`\n  margin-left: 20px;\n  color: var(--card-title-color);\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-transform: capitalize;\n`;\n\nconst TitleIcon = styled.div`\n  display: inline-flex;\n  background-color: var(--card-bg-color);\n  border-radius: 8px;\n  width: 338px;\n  padding-top: 18px;\n  padding-bottom: 17px;\n  margin-bottom: 14px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ScrollContainer = styled.div`\n  height: 70vh;\n  overflow-y: hidden;\n`;\n\n\nconst ScrollContent = styled.div`\nheight: 56vh;\noverflow-y: auto;\npadding-right: 8px;\nwidth: 100%; \nbox-sizing: border-box;\n \n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: var(--vertical-scroll-bar-bg-color);\n  border-radius: 4px;\n  height: 10px;\n}\n\n::-webkit-scrollbar-track {\n  background-color: var(--vertical-scroll-slider-bg-color);\n  border-radius: 4px;\n  margin-left: 16px;\n  height: 130px;\n}\n`;\n\nexport {\n  WhiteIcon,\n  ScrollContainer,\n  ScrollContent,\n  Title,\n  TitleIcon,\n  ColumnContainer,\n  Icons,\n};\n","import React from 'react';\nimport Card from '../Card/Card';\nimport sprite from '../../../images/sprite.svg';\nimport { ScrollContainer, ScrollContent, TitleIcon, Title, ColumnContainer, WhiteIcon, Icons } from './Column.styled';\n\nconst Column = ({ title, tasks }) => {\n    return (\n        <ColumnContainer>\n            <TitleIcon>\n                <Title>{title}</Title>\n                <Icons>\n                    <WhiteIcon className=\"icon-search\">\n                        <use href={sprite + '#icon-pencil-01'}></use>\n                    </WhiteIcon>\n                    <WhiteIcon className=\"icon-search\">\n                        <use href={sprite + '#icon-trash'}></use>\n                    </WhiteIcon>\n                </Icons>\n            </TitleIcon>\n\n            <ScrollContainer>\n                <ScrollContent>\n                    {tasks.map(task => (\n                        <Card key={task._id} taskId={task._id} />\n                    ))}\n                </ScrollContent>\n            </ScrollContainer>\n        </ColumnContainer>\n    );\n};\n\nexport default Column;","import styled from '@emotion/styled';\n\n\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  // overflow-x: auto; \n  background-color: var(--screens-page-bg-color);\n`;\n\nconst DashboardContent = styled.div`\n  display: flex;\n  padding-bottom: 16px; \n`;\n\nconst ColumnWrapper = styled.div`\n  margin-right: 16px;\n`;\n\nexport {\n  ColumnWrapper,\n  DashboardContainer,\n  DashboardContent\n}\n","import React from 'react';\nimport { currentBoardForScreensPage } from '../../../fakeData/fakeData';\nimport Column from '../Column/Column';\nimport { DashboardContainer, ColumnWrapper,  DashboardContent } from './Board.styled';\n\nconst MainDashboard = () => {\n  return (\n    <DashboardContainer>\n      <DashboardContent>\n        {currentBoardForScreensPage.columns.map(column => (\n          <ColumnWrapper key={column._id}>\n            <Column title={column.title} tasks={column.tasks} />\n          </ColumnWrapper>\n        ))}\n      </DashboardContent>\n    </DashboardContainer>\n  );\n};\n\nexport default MainDashboard;\n","import React from 'react';\n\nimport { currentBoardForScreensPage } from '../../fakeData/fakeData';\nimport Column from '../../components/BoardPage/Column/Column';\nimport Board from '../../components/BoardPage/Board/Board';\n\nimport {\n  Section,\n  SectionTitle,\n  BtnFilters,\n  SvgIconFilters,\n  BtnAddColumn,\n  Title,\n  SvgIconPlus,\n  SectionBoards,\n} from './MainDashboard.styled';\n\nimport sprite from '../../images/sprite.svg';\n\nconst MainDashboard = () => {\n  const handleFilters = e => {\n    alert('Handel Button Filters');\n  };\n\n  const handleAddNewColumn = e => {\n    alert('Handel Button Add New Column');\n  };\n\n  return (\n    <Section>\n      <SectionTitle>\n        <Title>Project office</Title>\n\n        <BtnFilters type=\"submit\" onClick={handleFilters}>\n          <SvgIconFilters>\n            + <use href={sprite + '#icon-filter'}></use>\n          </SvgIconFilters>\n          Filter\n        </BtnFilters>\n      </SectionTitle>\n\n      {/* Boardes */}\n      <SectionBoards>\n        <Board>\n          {currentBoardForScreensPage.columns.map(column => (\n            <Column\n              key={column._id}\n              title={column.title}\n              tasks={column.tasks}\n            />\n          ))}\n        </Board>\n\n        <BtnAddColumn type=\"submit\" onClick={handleAddNewColumn}>\n          <SvgIconPlus>\n            + <use href={sprite + '#icon-plus'}></use>\n          </SvgIconPlus>\n          Add another column\n        </BtnAddColumn>\n      </SectionBoards>\n    </Section>\n  );\n};\n\nexport default MainDashboard;\n","import React from 'react';\nimport NewDashboard from 'components/NewDashboard/NewDashboard';\nimport MainDashboard from 'components/MainDashboard/MainDashboard';\n\n// import { currentBoardForScreensPage } from '../../fakeData/fakeData';\n// import Column from '../../components/BoardPage/Column/Column';\n// import Board from '../../components/BoardPage/Board/Board';\n\nconst ScreenPage = () => {\n  const isVisibleMainDashboard = true;\n  return (\n    <div>\n      {isVisibleMainDashboard ? <MainDashboard /> : <NewDashboard />}\n      {/* <Board>\n        {currentBoardForScreensPage.columns.map(column => (\n          <Column key={column._id} title={column.title} tasks={column.tasks} />\n        ))}\n      </Board> */}\n    </div>\n  );\n};\n\nexport default ScreenPage;\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}"],"names":["styled","Section","SectionTitle","BtnFilters","SectionBoards","SvgIconFilters","Title","BtnAddColumn","SvgIconPlus","currentBoardForScreensPage","_id","title","owner","icon","background","columns","boardId","tasks","columnId","text","priority","deadline","order","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","canvasStyle","position","bottom","left","height","overflow","border","mirrorProps","_excluded","prevSibling","node","count","previousElementSibling","defaultProps","basedOn","undefined","className","component","ellipsis","maxLine","onReflow","trimRight","winWidth","usedProps","keys","LinesEllipsis","props","state","clamped","units","canvas","initCanvas","reflow","prevProps","copyStyleToCanvas","parentNode","removeChild","callback","document","createElement","setAttribute","forEach","style","body","appendChild","targetStyle","window","getComputedStyle","test","split","Array","from","Error","innerHTML","map","c","join","ellipsisIndex","putEllipsis","calcIndexes","newState","slice","setState","indexes","elt","firstElementChild","index","line","offsetTop","nextElementSibling","push","lastIndex","maxOffsetTop","children","ndEllipsis","lastElementChild","ndPrevUnit","offsetHeight","pop","_this$props","Component","rest","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","React","ref","obj","omittedKeys","ret","omit","replace","CustomCard","borderColor","TruncatedText","PriorityCircle","CardContentWrapper","TitleTypography","PriorityTypography","PriorityInfo","DeadlineTypography","DeadlineInfo","PriorityWrapper","DedlineWrapper","PriorityDateItem","PriorityDateContainer","BottomInfo","WhiteIcon","Icons","priorityBorderColor","priorityCircleColor","taskId","selectedTask","column","find","taskData","backgroundColor","href","sprite","ColumnContainer","TitleIcon","ScrollContainer","ScrollContent","task","Card","DashboardContainer","DashboardContent","ColumnWrapper","type","onClick","e","alert","Board","_superPropBase","object","property","getPrototypeOf","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","value"],"sourceRoot":""}